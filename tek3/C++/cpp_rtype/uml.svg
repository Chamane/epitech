<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2258px" preserveAspectRatio="none" style="width:8346px;height:2258px;" version="1.1" viewBox="0 0 8346 2258" width="8346px" zoomAndPan="magnify"><defs><filter height="300%" id="f168knd8lvi1dh" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class AContext--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="AContext" style="stroke: #A80036; stroke-width: 1.5;" width="241" x="4883" y="149"/><ellipse cx="4970.75" cy="165" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4972.3281,166.8125 L4968.2813,166.8125 L4967.8906,167.7969 L4968.2813,167.7969 C4968.7344,167.7969 4968.875,167.8281 4969.0469,167.9531 C4969.2656,168.125 4969.3906,168.375 4969.3906,168.6563 C4969.3906,168.9375 4969.25,169.2344 4968.9844,169.375 C4968.8594,169.4688 4968.6406,169.5 4968.2813,169.5 L4966.0156,169.5 C4965.2656,169.5 4964.8906,169.2188 4964.8906,168.6563 C4964.8906,168.3594 4965.0469,168.0781 4965.2969,167.9219 C4965.4531,167.8125 4965.6094,167.7969 4966.0313,167.7969 L4968.6719,161.2813 L4967.5938,161.2813 C4967.1563,161.2813 4966.9844,161.25 4966.8125,161.1406 C4966.5938,160.9688 4966.4531,160.7188 4966.4531,160.4375 C4966.4531,160.1563 4966.6094,159.875 4966.8594,159.7031 C4967.0156,159.6094 4967.1406,159.5938 4967.5938,159.5938 L4971.2656,159.5938 L4974.6563,167.7969 C4975.125,167.7969 4975.2813,167.8281 4975.4531,167.9688 C4975.6719,168.125 4975.8125,168.375 4975.8125,168.6563 C4975.8125,168.9375 4975.6563,169.2344 4975.4063,169.375 C4975.2656,169.4688 4975.0469,169.5 4974.6875,169.5 L4972.3281,169.5 C4971.9063,169.5 4971.7031,169.4531 4971.5625,169.3281 C4971.3438,169.1719 4971.2031,168.9219 4971.2031,168.6563 C4971.2031,168.3594 4971.3594,168.0781 4971.6094,167.9219 C4971.7656,167.8125 4971.875,167.7969 4972.3281,167.7969 L4972.7188,167.7969 Z M4971.625,165.1094 L4970.2969,161.8438 L4968.9531,165.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="57" x="4991.25" y="169.1543">AContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4884" x2="5123" y1="181" y2="181"/><polygon fill="none" points="4894,187.9023,4898,191.9023,4894,195.9023,4890,191.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="4903" y="195.2104">_window : sf::RenderWindow&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4884" x2="5123" y1="201.8047" y2="201.8047"/><ellipse cx="4894" cy="213.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="4903" y="216.0151">AContext(sf::RenderWindow&amp; window)</text><ellipse cx="4894" cy="226.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="4903" y="228.8198">~AContext()</text><ellipse cx="4894" cy="239.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="147" x="4903" y="241.6245">run(sf::Time&amp; time) : void</text><!--class Acceleration--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="Acceleration" style="stroke: #A80036; stroke-width: 1.5;" width="181" x="351" y="155.5"/><ellipse cx="398.25" cy="171.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M400.5938,167.1719 L400.7656,167.25 C400.9844,166.9375 401.1875,166.8438 401.4844,166.8438 C401.7813,166.8438 402.0625,166.9844 402.2188,167.25 C402.3125,167.4063 402.3281,167.5313 402.3281,167.9688 L402.3281,169.3906 C402.3281,169.8125 402.2969,170 402.1875,170.1563 C402.0156,170.375 401.75,170.5156 401.4844,170.5156 C401.2656,170.5156 401.0313,170.4063 400.8906,170.2656 C400.75,170.1406 400.7188,170.0156 400.6563,169.6094 C400.5625,169.2031 400.3906,168.9844 399.9063,168.7031 C399.4375,168.4531 398.8281,168.2969 398.25,168.2969 C396.5156,168.2969 395.2656,169.6094 395.2656,171.3906 L395.2656,172.4844 C395.2656,174.1875 396.5625,175.2813 398.6094,175.2813 C399.375,175.2813 400.0625,175.1563 400.4844,174.8906 C400.6719,174.7969 400.6719,174.7969 401.125,174.3125 C401.3125,174.125 401.5156,174.0469 401.7344,174.0469 C402.2031,174.0469 402.5938,174.4375 402.5938,174.8906 C402.5938,175.2813 402.2656,175.7344 401.6875,176.1406 C400.9375,176.6875 399.7813,176.9844 398.5625,176.9844 C395.6719,176.9844 393.5625,175.0938 393.5625,172.5156 L393.5625,171.3906 C393.5625,168.6719 395.5625,166.5938 398.1875,166.5938 C399.0625,166.5938 399.6563,166.7344 400.5938,167.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78" x="418.75" y="175.6543">Acceleration</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="352" x2="531" y1="187.5" y2="187.5"/><ellipse cx="362" cy="199.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="371" y="201.7104">x : float</text><ellipse cx="362" cy="212.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="371" y="214.5151">y : float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="352" x2="531" y1="221.1094" y2="221.1094"/><ellipse cx="362" cy="233.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="371" y="235.3198">Acceleration(float x, float y)</text><!--class AcceptError--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="AcceptError" style="stroke: #A80036; stroke-width: 1.5;" width="324" x="567.5" y="149"/><ellipse cx="688.25" cy="165" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M690.5938,160.6719 L690.7656,160.75 C690.9844,160.4375 691.1875,160.3438 691.4844,160.3438 C691.7813,160.3438 692.0625,160.4844 692.2188,160.75 C692.3125,160.9063 692.3281,161.0313 692.3281,161.4688 L692.3281,162.8906 C692.3281,163.3125 692.2969,163.5 692.1875,163.6563 C692.0156,163.875 691.75,164.0156 691.4844,164.0156 C691.2656,164.0156 691.0313,163.9063 690.8906,163.7656 C690.75,163.6406 690.7188,163.5156 690.6563,163.1094 C690.5625,162.7031 690.3906,162.4844 689.9063,162.2031 C689.4375,161.9531 688.8281,161.7969 688.25,161.7969 C686.5156,161.7969 685.2656,163.1094 685.2656,164.8906 L685.2656,165.9844 C685.2656,167.6875 686.5625,168.7813 688.6094,168.7813 C689.375,168.7813 690.0625,168.6563 690.4844,168.3906 C690.6719,168.2969 690.6719,168.2969 691.125,167.8125 C691.3125,167.625 691.5156,167.5469 691.7344,167.5469 C692.2031,167.5469 692.5938,167.9375 692.5938,168.3906 C692.5938,168.7813 692.2656,169.2344 691.6875,169.6406 C690.9375,170.1875 689.7813,170.4844 688.5625,170.4844 C685.6719,170.4844 683.5625,168.5938 683.5625,166.0156 L683.5625,164.8906 C683.5625,162.1719 685.5625,160.0938 688.1875,160.0938 C689.0625,160.0938 689.6563,160.2344 690.5938,160.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="708.75" y="169.1543">AcceptError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="568.5" x2="890.5" y1="181" y2="181"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="568.5" x2="890.5" y1="189" y2="189"/><ellipse cx="578.5" cy="200.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="587.5" y="203.2104">AcceptError(const std::string&amp; what)</text><ellipse cx="578.5" cy="213.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="587.5" y="216.0151">AcceptError(const AcceptError&amp; error)</text><ellipse cx="578.5" cy="226.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="587.5" y="228.8198">~AcceptError()</text><ellipse cx="578.5" cy="239.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="587.5" y="241.6245">operator=(const AcceptError&amp; error) : AcceptError&amp;</text><!--class AcceptTask--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="188.8516" id="AcceptTask" style="stroke: #A80036; stroke-width: 1.5;" width="882" x="926.5" y="104"/><ellipse cx="1327.25" cy="120" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1329.5938,115.6719 L1329.7656,115.75 C1329.9844,115.4375 1330.1875,115.3438 1330.4844,115.3438 C1330.7813,115.3438 1331.0625,115.4844 1331.2188,115.75 C1331.3125,115.9063 1331.3281,116.0313 1331.3281,116.4688 L1331.3281,117.8906 C1331.3281,118.3125 1331.2969,118.5 1331.1875,118.6563 C1331.0156,118.875 1330.75,119.0156 1330.4844,119.0156 C1330.2656,119.0156 1330.0313,118.9063 1329.8906,118.7656 C1329.75,118.6406 1329.7188,118.5156 1329.6563,118.1094 C1329.5625,117.7031 1329.3906,117.4844 1328.9063,117.2031 C1328.4375,116.9531 1327.8281,116.7969 1327.25,116.7969 C1325.5156,116.7969 1324.2656,118.1094 1324.2656,119.8906 L1324.2656,120.9844 C1324.2656,122.6875 1325.5625,123.7813 1327.6094,123.7813 C1328.375,123.7813 1329.0625,123.6563 1329.4844,123.3906 C1329.6719,123.2969 1329.6719,123.2969 1330.125,122.8125 C1330.3125,122.625 1330.5156,122.5469 1330.7344,122.5469 C1331.2031,122.5469 1331.5938,122.9375 1331.5938,123.3906 C1331.5938,123.7813 1331.2656,124.2344 1330.6875,124.6406 C1329.9375,125.1875 1328.7813,125.4844 1327.5625,125.4844 C1324.6719,125.4844 1322.5625,123.5938 1322.5625,121.0156 L1322.5625,119.8906 C1322.5625,117.1719 1324.5625,115.0938 1327.1875,115.0938 C1328.0625,115.0938 1328.6563,115.2344 1329.5938,115.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="1347.75" y="124.1543">AcceptTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="927.5" x2="1807.5" y1="136" y2="136"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="934.5" y="144.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="946.5" y="150.2104">_acceptor : std::shared_ptr&lt;rnetwork::IAcceptor&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="927.5" x2="1807.5" y1="156.8047" y2="156.8047"/><ellipse cx="937.5" cy="168.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="856" x="946.5" y="171.0151">AcceptTask(std::shared_ptr&lt;rnetwork::IAcceptor&gt; acceptor, const std::function&lt;void(std::shared_ptr&lt;rnetwork::IClient&gt;client,boolstatus)&gt;&amp; callback)</text><ellipse cx="937.5" cy="181.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="946.5" y="183.8198">AcceptTask(const AcceptTask&amp; acceptTask)</text><ellipse cx="937.5" cy="194.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="946.5" y="196.6245">~AcceptTask()</text><ellipse cx="937.5" cy="207.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="946.5" y="209.4292">operator=(const AcceptTask&amp; acceptTask) : AcceptTask&amp;</text><ellipse cx="937.5" cy="219.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="946.5" y="222.2339">available() : bool {query}</text><ellipse cx="937.5" cy="232.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="946.5" y="235.0386">service() : rnetwork::services::NetworkService&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="934.5" y="242.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="946.5" y="247.8433">&lt;void(std::shared_ptr&lt;rnetwork::IClient&gt; client, bool status) : std::function</text><ellipse cx="937.5" cy="258.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="946.5" y="260.6479">operator()() : void</text><ellipse cx="937.5" cy="271.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="946.5" y="273.4526">registerService() : void {query}</text><ellipse cx="937.5" cy="283.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="946.5" y="286.2573">unregisterService() : void {query}</text><!--class Acceptor--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="214.4609" id="Acceptor" style="stroke: #A80036; stroke-width: 1.5;" width="655" x="2912" y="1018"/><ellipse cx="3207.25" cy="1034" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3209.5938,1029.6719 L3209.7656,1029.75 C3209.9844,1029.4375 3210.1875,1029.3438 3210.4844,1029.3438 C3210.7813,1029.3438 3211.0625,1029.4844 3211.2188,1029.75 C3211.3125,1029.9063 3211.3281,1030.0313 3211.3281,1030.4688 L3211.3281,1031.8906 C3211.3281,1032.3125 3211.2969,1032.5 3211.1875,1032.6563 C3211.0156,1032.875 3210.75,1033.0156 3210.4844,1033.0156 C3210.2656,1033.0156 3210.0313,1032.9063 3209.8906,1032.7656 C3209.75,1032.6406 3209.7188,1032.5156 3209.6563,1032.1094 C3209.5625,1031.7031 3209.3906,1031.4844 3208.9063,1031.2031 C3208.4375,1030.9531 3207.8281,1030.7969 3207.25,1030.7969 C3205.5156,1030.7969 3204.2656,1032.1094 3204.2656,1033.8906 L3204.2656,1034.9844 C3204.2656,1036.6875 3205.5625,1037.7813 3207.6094,1037.7813 C3208.375,1037.7813 3209.0625,1037.6563 3209.4844,1037.3906 C3209.6719,1037.2969 3209.6719,1037.2969 3210.125,1036.8125 C3210.3125,1036.625 3210.5156,1036.5469 3210.7344,1036.5469 C3211.2031,1036.5469 3211.5938,1036.9375 3211.5938,1037.3906 C3211.5938,1037.7813 3211.2656,1038.2344 3210.6875,1038.6406 C3209.9375,1039.1875 3208.7813,1039.4844 3207.5625,1039.4844 C3204.6719,1039.4844 3202.5625,1037.5938 3202.5625,1035.0156 L3202.5625,1033.8906 C3202.5625,1031.1719 3204.5625,1029.0938 3207.1875,1029.0938 C3208.0625,1029.0938 3208.6563,1029.2344 3209.5938,1029.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="56" x="3227.75" y="1038.1543">Acceptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2913" x2="3566" y1="1050" y2="1050"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2920" y="1058.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="2932" y="1064.2104">_socket : SOCKET</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2920" y="1071.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="2932" y="1077.0151">_ioService : rnetwork::async::IOService&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2913" x2="3566" y1="1083.6094" y2="1083.6094"/><ellipse cx="2923" cy="1095.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="629" x="2932" y="1097.8198">Acceptor(rnetwork::async::IOService&amp; ioService, const rnetwork::Endpoint&amp; endpoint, unsigned int queueSize)</text><ellipse cx="2923" cy="1108.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="2932" y="1110.6245">Acceptor(const Acceptor&amp; acceptor)</text><ellipse cx="2923" cy="1121.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="2932" y="1123.4292">~Acceptor()</text><ellipse cx="2923" cy="1133.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="2932" y="1136.2339">operator=(const Acceptor&amp; acceptor) : Acceptor&amp;</text><ellipse cx="2923" cy="1146.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2932" y="1149.0386">socket() : SOCKET {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2920" y="1156.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="2932" y="1161.8433">bind(const rnetwork::Endpoint&amp; endpoint) : bool {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2920" y="1169.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="2932" y="1174.6479">listen(unsigned int queueSize) : bool {query}</text><ellipse cx="2923" cy="1185.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2932" y="1187.4526">ioService() : rnetwork::async::IOService&amp;</text><ellipse cx="2923" cy="1197.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="306" x="2932" y="1200.2573">accept() : std::shared_ptr&lt;rnetwork::IClient&gt; {query}</text><ellipse cx="2923" cy="1210.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="2932" y="1213.062">accept(bool&amp; status) : std::shared_ptr&lt;rnetwork::IClient&gt; {query}</text><ellipse cx="2923" cy="1223.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="626" x="2932" y="1225.8667">async_accept(const std::function&lt;void(std::shared_ptr&lt;rnetwork::IClient&gt;client,boolstatus)&gt;&amp; callback) : void</text><!--class BadBind--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="BadBind" style="stroke: #A80036; stroke-width: 1.5;" width="303" x="1844" y="149"/><ellipse cx="1965.75" cy="165" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1968.0938,160.6719 L1968.2656,160.75 C1968.4844,160.4375 1968.6875,160.3438 1968.9844,160.3438 C1969.2813,160.3438 1969.5625,160.4844 1969.7188,160.75 C1969.8125,160.9063 1969.8281,161.0313 1969.8281,161.4688 L1969.8281,162.8906 C1969.8281,163.3125 1969.7969,163.5 1969.6875,163.6563 C1969.5156,163.875 1969.25,164.0156 1968.9844,164.0156 C1968.7656,164.0156 1968.5313,163.9063 1968.3906,163.7656 C1968.25,163.6406 1968.2188,163.5156 1968.1563,163.1094 C1968.0625,162.7031 1967.8906,162.4844 1967.4063,162.2031 C1966.9375,161.9531 1966.3281,161.7969 1965.75,161.7969 C1964.0156,161.7969 1962.7656,163.1094 1962.7656,164.8906 L1962.7656,165.9844 C1962.7656,167.6875 1964.0625,168.7813 1966.1094,168.7813 C1966.875,168.7813 1967.5625,168.6563 1967.9844,168.3906 C1968.1719,168.2969 1968.1719,168.2969 1968.625,167.8125 C1968.8125,167.625 1969.0156,167.5469 1969.2344,167.5469 C1969.7031,167.5469 1970.0938,167.9375 1970.0938,168.3906 C1970.0938,168.7813 1969.7656,169.2344 1969.1875,169.6406 C1968.4375,170.1875 1967.2813,170.4844 1966.0625,170.4844 C1963.1719,170.4844 1961.0625,168.5938 1961.0625,166.0156 L1961.0625,164.8906 C1961.0625,162.1719 1963.0625,160.0938 1965.6875,160.0938 C1966.5625,160.0938 1967.1563,160.2344 1968.0938,160.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="1986.25" y="169.1543">BadBind</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1845" x2="2146" y1="181" y2="181"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1845" x2="2146" y1="189" y2="189"/><ellipse cx="1855" cy="200.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1864" y="203.2104">BadBind(const std::string&amp; what)</text><ellipse cx="1855" cy="213.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="1864" y="216.0151">BadBind(const BadBind&amp; badBind)</text><ellipse cx="1855" cy="226.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="1864" y="228.8198">~BadBind()</text><ellipse cx="1855" cy="239.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="1864" y="241.6245">operator=(const BadBind&amp; badBind) : BadBind&amp;</text><!--class BadHostname--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="BadHostname" style="stroke: #A80036; stroke-width: 1.5;" width="402" x="2182.5" y="149"/><ellipse cx="2335.25" cy="165" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2337.5938,160.6719 L2337.7656,160.75 C2337.9844,160.4375 2338.1875,160.3438 2338.4844,160.3438 C2338.7813,160.3438 2339.0625,160.4844 2339.2188,160.75 C2339.3125,160.9063 2339.3281,161.0313 2339.3281,161.4688 L2339.3281,162.8906 C2339.3281,163.3125 2339.2969,163.5 2339.1875,163.6563 C2339.0156,163.875 2338.75,164.0156 2338.4844,164.0156 C2338.2656,164.0156 2338.0313,163.9063 2337.8906,163.7656 C2337.75,163.6406 2337.7188,163.5156 2337.6563,163.1094 C2337.5625,162.7031 2337.3906,162.4844 2336.9063,162.2031 C2336.4375,161.9531 2335.8281,161.7969 2335.25,161.7969 C2333.5156,161.7969 2332.2656,163.1094 2332.2656,164.8906 L2332.2656,165.9844 C2332.2656,167.6875 2333.5625,168.7813 2335.6094,168.7813 C2336.375,168.7813 2337.0625,168.6563 2337.4844,168.3906 C2337.6719,168.2969 2337.6719,168.2969 2338.125,167.8125 C2338.3125,167.625 2338.5156,167.5469 2338.7344,167.5469 C2339.2031,167.5469 2339.5938,167.9375 2339.5938,168.3906 C2339.5938,168.7813 2339.2656,169.2344 2338.6875,169.6406 C2337.9375,170.1875 2336.7813,170.4844 2335.5625,170.4844 C2332.6719,170.4844 2330.5625,168.5938 2330.5625,166.0156 L2330.5625,164.8906 C2330.5625,162.1719 2332.5625,160.0938 2335.1875,160.0938 C2336.0625,160.0938 2336.6563,160.2344 2337.5938,160.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="2355.75" y="169.1543">BadHostname</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2183.5" x2="2583.5" y1="181" y2="181"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2183.5" x2="2583.5" y1="189" y2="189"/><ellipse cx="2193.5" cy="200.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="2202.5" y="203.2104">BadHostname(const std::string&amp; hostname)</text><ellipse cx="2193.5" cy="213.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="2202.5" y="216.0151">BadHostname(const BadHostname&amp; badHostname)</text><ellipse cx="2193.5" cy="226.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="2202.5" y="228.8198">~BadHostname()</text><ellipse cx="2193.5" cy="239.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2202.5" y="241.6245">operator=(const BadHostname&amp; badHostname) : BadHostname&amp;</text><!--class BadListen--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="BadListen" style="stroke: #A80036; stroke-width: 1.5;" width="330" x="2619.5" y="149"/><ellipse cx="2749.75" cy="165" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2752.0938,160.6719 L2752.2656,160.75 C2752.4844,160.4375 2752.6875,160.3438 2752.9844,160.3438 C2753.2813,160.3438 2753.5625,160.4844 2753.7188,160.75 C2753.8125,160.9063 2753.8281,161.0313 2753.8281,161.4688 L2753.8281,162.8906 C2753.8281,163.3125 2753.7969,163.5 2753.6875,163.6563 C2753.5156,163.875 2753.25,164.0156 2752.9844,164.0156 C2752.7656,164.0156 2752.5313,163.9063 2752.3906,163.7656 C2752.25,163.6406 2752.2188,163.5156 2752.1563,163.1094 C2752.0625,162.7031 2751.8906,162.4844 2751.4063,162.2031 C2750.9375,161.9531 2750.3281,161.7969 2749.75,161.7969 C2748.0156,161.7969 2746.7656,163.1094 2746.7656,164.8906 L2746.7656,165.9844 C2746.7656,167.6875 2748.0625,168.7813 2750.1094,168.7813 C2750.875,168.7813 2751.5625,168.6563 2751.9844,168.3906 C2752.1719,168.2969 2752.1719,168.2969 2752.625,167.8125 C2752.8125,167.625 2753.0156,167.5469 2753.2344,167.5469 C2753.7031,167.5469 2754.0938,167.9375 2754.0938,168.3906 C2754.0938,168.7813 2753.7656,169.2344 2753.1875,169.6406 C2752.4375,170.1875 2751.2813,170.4844 2750.0625,170.4844 C2747.1719,170.4844 2745.0625,168.5938 2745.0625,166.0156 L2745.0625,164.8906 C2745.0625,162.1719 2747.0625,160.0938 2749.6875,160.0938 C2750.5625,160.0938 2751.1563,160.2344 2752.0938,160.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="2770.25" y="169.1543">BadListen</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2620.5" x2="2948.5" y1="181" y2="181"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2620.5" x2="2948.5" y1="189" y2="189"/><ellipse cx="2630.5" cy="200.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="2639.5" y="203.2104">BadListen(const std::string&amp; what)</text><ellipse cx="2630.5" cy="213.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="2639.5" y="216.0151">BadListen(const BadListen&amp; badListen)</text><ellipse cx="2630.5" cy="226.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="2639.5" y="228.8198">~BadListen()</text><ellipse cx="2630.5" cy="239.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="2639.5" y="241.6245">operator=(const BadListen&amp; badListen) : BadListen&amp;</text><!--class Client--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="508.9688" id="Client" style="stroke: #A80036; stroke-width: 1.5;" width="611" x="5490" y="449"/><ellipse cx="5773.75" cy="465" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5776.0938,460.6719 L5776.2656,460.75 C5776.4844,460.4375 5776.6875,460.3438 5776.9844,460.3438 C5777.2813,460.3438 5777.5625,460.4844 5777.7188,460.75 C5777.8125,460.9063 5777.8281,461.0313 5777.8281,461.4688 L5777.8281,462.8906 C5777.8281,463.3125 5777.7969,463.5 5777.6875,463.6563 C5777.5156,463.875 5777.25,464.0156 5776.9844,464.0156 C5776.7656,464.0156 5776.5313,463.9063 5776.3906,463.7656 C5776.25,463.6406 5776.2188,463.5156 5776.1563,463.1094 C5776.0625,462.7031 5775.8906,462.4844 5775.4063,462.2031 C5774.9375,461.9531 5774.3281,461.7969 5773.75,461.7969 C5772.0156,461.7969 5770.7656,463.1094 5770.7656,464.8906 L5770.7656,465.9844 C5770.7656,467.6875 5772.0625,468.7813 5774.1094,468.7813 C5774.875,468.7813 5775.5625,468.6563 5775.9844,468.3906 C5776.1719,468.2969 5776.1719,468.2969 5776.625,467.8125 C5776.8125,467.625 5777.0156,467.5469 5777.2344,467.5469 C5777.7031,467.5469 5778.0938,467.9375 5778.0938,468.3906 C5778.0938,468.7813 5777.7656,469.2344 5777.1875,469.6406 C5776.4375,470.1875 5775.2813,470.4844 5774.0625,470.4844 C5771.1719,470.4844 5769.0625,468.5938 5769.0625,466.0156 L5769.0625,464.8906 C5769.0625,462.1719 5771.0625,460.0938 5773.6875,460.0938 C5774.5625,460.0938 5775.1563,460.2344 5776.0938,460.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="5794.25" y="469.1543">Client</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5491" x2="6100" y1="481" y2="481"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="489.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5510" y="495.2104">_socket : SOCKET</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="502.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5510" y="508.0151">_endpoint : rnetwork::Endpoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="515.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="5510" y="520.8198">_ioService : rnetwork::async::IOService&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="528.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="5510" y="533.6245">_remote : SOCKADDR_IN</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="541.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="5510" y="546.4292">_socket : SOCKET</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="553.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="5510" y="559.2339">_endpoint : rnetwork::Endpoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="566.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="5510" y="572.0386">_ioService : rnetwork::async::IOService&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5491" x2="6100" y1="578.6328" y2="578.6328"/><ellipse cx="5501" cy="590.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="5510" y="592.8433">Client(rnetwork::async::IOService&amp; ioService)</text><ellipse cx="5501" cy="603.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="492" x="5510" y="605.6479">Client(rnetwork::async::IOService&amp; ioService, SOCKET socket, SOCKADDR_IN* remote)</text><ellipse cx="5501" cy="616.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="5510" y="618.4526">Client(rnetwork::async::IOService&amp; ioService, const rnetwork::Endpoint&amp; endpoint)</text><ellipse cx="5501" cy="628.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5510" y="631.2573">Client(const Client&amp; client)</text><ellipse cx="5501" cy="641.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="5510" y="644.062">~Client()</text><ellipse cx="5501" cy="654.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5510" y="656.8667">operator=(const Client&amp; client) : Client&amp;</text><ellipse cx="5501" cy="667.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="5510" y="669.6714">socket() : SOCKET {query}</text><ellipse cx="5501" cy="680.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="5510" y="682.4761">connect(const rnetwork::Endpoint&amp; endpoint) : bool</text><ellipse cx="5501" cy="692.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="5510" y="695.2808">send(packet::IPacket const&amp; packet) : bool {query}</text><ellipse cx="5501" cy="705.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="5510" y="708.0854">getEndpoint() : rnetwork::Endpoint&amp; {query}</text><ellipse cx="5501" cy="718.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="5510" y="720.8901">receive(bool&amp; status) : std::shared_ptr&lt;rnetwork::packet::PacketBase&gt;</text><ellipse cx="5501" cy="731.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="5510" y="733.6948">receive() : std::shared_ptr&lt;rnetwork::packet::PacketBase&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="741.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="346" x="5510" y="746.4995">getRemoteHost(SOCKADDR_IN* remote) : std::string {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="753.9961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="5510" y="759.3042">getRemotePort(SOCKADDR_IN* remote) : uint16_t {query}</text><ellipse cx="5501" cy="769.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="580" x="5510" y="772.1089">async_receive(const std::function&lt;void(rnetwork::packet::PacketBase&amp;,boolstatus)&gt;&amp; callback) : void</text><ellipse cx="5501" cy="782.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="527" x="5510" y="784.9136">async_send(packet::IPacket const&amp; packet, const std::function&lt;void(bool)&gt;&amp; callback) : void</text><ellipse cx="5501" cy="795.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="5510" y="797.7183">Client(const rnetwork::Endpoint&amp; endpoint, rnetwork::async::IOService&amp; ioService)</text><ellipse cx="5501" cy="808.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="440" x="5510" y="810.5229">Client(const SOCKADDR_IN* endpoint, rnetwork::async::IOService&amp; ioService)</text><ellipse cx="5501" cy="821.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="5510" y="823.3276">Client(const Client&amp; client)</text><ellipse cx="5501" cy="833.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="5510" y="836.1323">~Client()</text><ellipse cx="5501" cy="846.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="5510" y="848.937">operator=(const Client&amp; client) : Client&amp;</text><ellipse cx="5501" cy="859.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="5510" y="861.7417">socket() : SOCKET {query}</text><ellipse cx="5501" cy="872.2383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="5510" y="874.5464">send(rnetwork::packet::IPacket const&amp; packet) : bool {query}</text><ellipse cx="5501" cy="885.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="5510" y="887.3511">getEndpoint() : rnetwork::Endpoint&amp; {query}</text><ellipse cx="5501" cy="897.8477" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="5510" y="900.1558">receive(bool&amp; status) : std::shared_ptr&lt;rnetwork::packet::PacketBase&gt;</text><ellipse cx="5501" cy="910.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="5510" y="912.9604">receive() : std::shared_ptr&lt;rnetwork::packet::PacketBase&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5498" y="920.457"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="5510" y="925.7651">_link(const rnetwork::Endpoint&amp; endpoint) : void</text><ellipse cx="5501" cy="936.2617" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="580" x="5510" y="938.5698">async_receive(const std::function&lt;void(rnetwork::packet::PacketBase&amp;,boolstatus)&gt;&amp; callback) : void</text><ellipse cx="5501" cy="949.0664" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="585" x="5510" y="951.3745">async_send(rnetwork::packet::IPacket const&amp; packet, const std::function&lt;void(bool)&gt;&amp; callback) : void</text><!--class ClientChannel--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="444.9453" id="ClientChannel" style="stroke: #A80036; stroke-width: 1.5;" width="763" x="3814" y="1292"/><ellipse cx="4148.25" cy="1308" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4150.5938,1303.6719 L4150.7656,1303.75 C4150.9844,1303.4375 4151.1875,1303.3438 4151.4844,1303.3438 C4151.7813,1303.3438 4152.0625,1303.4844 4152.2188,1303.75 C4152.3125,1303.9063 4152.3281,1304.0313 4152.3281,1304.4688 L4152.3281,1305.8906 C4152.3281,1306.3125 4152.2969,1306.5 4152.1875,1306.6563 C4152.0156,1306.875 4151.75,1307.0156 4151.4844,1307.0156 C4151.2656,1307.0156 4151.0313,1306.9063 4150.8906,1306.7656 C4150.75,1306.6406 4150.7188,1306.5156 4150.6563,1306.1094 C4150.5625,1305.7031 4150.3906,1305.4844 4149.9063,1305.2031 C4149.4375,1304.9531 4148.8281,1304.7969 4148.25,1304.7969 C4146.5156,1304.7969 4145.2656,1306.1094 4145.2656,1307.8906 L4145.2656,1308.9844 C4145.2656,1310.6875 4146.5625,1311.7813 4148.6094,1311.7813 C4149.375,1311.7813 4150.0625,1311.6563 4150.4844,1311.3906 C4150.6719,1311.2969 4150.6719,1311.2969 4151.125,1310.8125 C4151.3125,1310.625 4151.5156,1310.5469 4151.7344,1310.5469 C4152.2031,1310.5469 4152.5938,1310.9375 4152.5938,1311.3906 C4152.5938,1311.7813 4152.2656,1312.2344 4151.6875,1312.6406 C4150.9375,1313.1875 4149.7813,1313.4844 4148.5625,1313.4844 C4145.6719,1313.4844 4143.5625,1311.5938 4143.5625,1309.0156 L4143.5625,1307.8906 C4143.5625,1305.1719 4145.5625,1303.0938 4148.1875,1303.0938 C4149.0625,1303.0938 4149.6563,1303.2344 4150.5938,1303.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="4168.75" y="1312.1543">ClientChannel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3815" x2="4576" y1="1324" y2="1324"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1332.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="3834" y="1338.2104">_associated : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1345.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="3834" y="1351.0151">_tcpEndpoint : rnetwork::Endpoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1358.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3834" y="1363.8198">_udpEndpoint : rnetwork::Endpoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1371.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="3834" y="1376.6245">_ioService : rnetwork::async::IOService&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1384.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="3834" y="1389.4292">_tcpClient : std::shared_ptr&lt;IClient&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1396.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="3834" y="1402.2339">_udpClient : std::shared_ptr&lt;IClient&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1409.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="3834" y="1415.0386">_identifier : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3815" x2="4576" y1="1421.6328" y2="1421.6328"/><ellipse cx="3825" cy="1433.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="3834" y="1435.8433">ClientChannel(rnetwork::async::IOService&amp; ioService)</text><ellipse cx="3825" cy="1446.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="3834" y="1448.6479">ClientChannel(const rnetwork::ClientChannel&amp; clientChannel)</text><ellipse cx="3825" cy="1459.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="3834" y="1461.4526">~ClientChannel()</text><ellipse cx="3825" cy="1471.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="3834" y="1474.2573">operator=(const ClientChannel&amp; clientChannel) : ClientChannel&amp;</text><ellipse cx="3825" cy="1484.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="3834" y="1487.062">is(const rnetwork::Endpoint&amp; endpoint) : bool</text><ellipse cx="3825" cy="1497.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="3834" y="1499.8667">isAssociated() : bool {query}</text><ellipse cx="3825" cy="1510.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="3834" y="1512.6714">udpSend(rnetwork::packet::IPacket const&amp; packet) : bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1520.168"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="3834" y="1525.4761">&lt;void(packet::PacketBase &amp;, std::shared_ptr&lt;IClient&gt;) : rnetwork::Router</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1532.9727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="546" x="3834" y="1538.2808">&lt;void(std::shared_ptr&lt;ClientChannel&gt; channel, rnetwork::packet::PacketBase &amp;) : std::function</text><ellipse cx="3825" cy="1548.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="474" x="3834" y="1551.0854">getClient(const rnetwork::Endpoint&amp; endpoint) : std::shared_ptr&lt;rnetwork::IClient&gt;</text><ellipse cx="3825" cy="1561.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="3834" y="1563.8901">getIdentitfier() : std::string&amp; {query}</text><ellipse cx="3825" cy="1574.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="3834" y="1576.6948">finalizeHandshake(std::shared_ptr&lt;rnetwork::IClient&gt; client) : void</text><ellipse cx="3825" cy="1587.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="3834" y="1589.4995">generateIdentifier() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1596.9961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="644" x="3834" y="1602.3042">handleAssociationPacket(rnetwork::packet::PacketBase&amp; packet, std::shared_ptr&lt;rnetwork::IClient&gt; client) : void</text><ellipse cx="3825" cy="1612.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="611" x="3834" y="1615.1089">handleHandshake(std::shared_ptr&lt;rnetwork::IClient&gt; client, const rnetwork::Endpoint&amp; udpEndpoint) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1622.6055"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="605" x="3834" y="1627.9136">handleHostPacket(rnetwork::packet::PacketBase&amp; packet, std::shared_ptr&lt;rnetwork::IClient&gt; client) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1635.4102"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="667" x="3834" y="1640.7183">handlePacket(std::shared_ptr&lt;rnetwork::IClient&gt; receiver, rnetwork::packet::PacketBase&amp; packet, bool status) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1648.2148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="613" x="3834" y="1653.5229">handleTokenPacket(rnetwork::packet::PacketBase&amp; packet, std::shared_ptr&lt;rnetwork::IClient&gt; client) : void</text><ellipse cx="3825" cy="1664.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="327" x="3834" y="1666.3276">handshake(const rnetwork::Endpoint&amp; tcpEndpoint) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1673.8242"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3834" y="1679.1323">initRouter() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3822" y="1686.6289"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="333" x="3834" y="1691.937">sendUDPToken(const rnetwork::Endpoint&amp; endpoint) : void</text><ellipse cx="3825" cy="1702.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="737" x="3834" y="1704.7417">setGateway(const std::function&lt;void(std::shared_ptr&lt;ClientChannel&gt;channel,rnetwork::packet::PacketBase&amp;)&gt;&amp; gateway) : void</text><ellipse cx="3825" cy="1715.2383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="3834" y="1717.5464">setIdentifier(const std::string&amp; identifier) : void</text><ellipse cx="3825" cy="1728.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="3834" y="1730.3511">tcpSend(rnetwork::packet::IPacket const&amp; packet) : void {query}</text><!--class ClientMasterChannel--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="329.7031" id="ClientMasterChannel" style="stroke: #A80036; stroke-width: 1.5;" width="834" x="3055.5" y="538.5"/><ellipse cx="3403.75" cy="554.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3406.0938,550.1719 L3406.2656,550.25 C3406.4844,549.9375 3406.6875,549.8438 3406.9844,549.8438 C3407.2813,549.8438 3407.5625,549.9844 3407.7188,550.25 C3407.8125,550.4063 3407.8281,550.5313 3407.8281,550.9688 L3407.8281,552.3906 C3407.8281,552.8125 3407.7969,553 3407.6875,553.1563 C3407.5156,553.375 3407.25,553.5156 3406.9844,553.5156 C3406.7656,553.5156 3406.5313,553.4063 3406.3906,553.2656 C3406.25,553.1406 3406.2188,553.0156 3406.1563,552.6094 C3406.0625,552.2031 3405.8906,551.9844 3405.4063,551.7031 C3404.9375,551.4531 3404.3281,551.2969 3403.75,551.2969 C3402.0156,551.2969 3400.7656,552.6094 3400.7656,554.3906 L3400.7656,555.4844 C3400.7656,557.1875 3402.0625,558.2813 3404.1094,558.2813 C3404.875,558.2813 3405.5625,558.1563 3405.9844,557.8906 C3406.1719,557.7969 3406.1719,557.7969 3406.625,557.3125 C3406.8125,557.125 3407.0156,557.0469 3407.2344,557.0469 C3407.7031,557.0469 3408.0938,557.4375 3408.0938,557.8906 C3408.0938,558.2813 3407.7656,558.7344 3407.1875,559.1406 C3406.4375,559.6875 3405.2813,559.9844 3404.0625,559.9844 C3401.1719,559.9844 3399.0625,558.0938 3399.0625,555.5156 L3399.0625,554.3906 C3399.0625,551.6719 3401.0625,549.5938 3403.6875,549.5938 C3404.5625,549.5938 3405.1563,549.7344 3406.0938,550.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="129" x="3424.25" y="558.6543">ClientMasterChannel</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3056.5" x2="3888.5" y1="570.5" y2="570.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="579.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="3075.5" y="584.7104">_udpEndpoint : rnetwork::Endpoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="592.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="3075.5" y="597.5151">_ioService : rnetwork::async::IOService&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="605.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="3075.5" y="610.3198">_tcpAcceptor : std::shared_ptr&lt;rnetwork::tcp::Acceptor&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="617.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="3075.5" y="623.1245">_udpServer : std::shared_ptr&lt;rnetwork::udp::Server&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="630.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="3075.5" y="635.9292">_clients : std::unordered_map&lt;std::string, std::shared_ptr&lt;rnetwork::ClientChannel&gt; &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3056.5" x2="3888.5" y1="642.5234" y2="642.5234"/><ellipse cx="3066.5" cy="654.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="808" x="3075.5" y="656.7339">ClientMasterChannel(rnetwork::async::IOService&amp; ioService, const rnetwork::Endpoint&amp; tpcEndpoint, const rnetwork::Endpoint&amp; udpEndpoint)</text><ellipse cx="3066.5" cy="667.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="3075.5" y="669.5386">ClientMasterChannel(const ClientMasterChannel&amp; clientMasterChannel)</text><ellipse cx="3066.5" cy="680.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="3075.5" y="682.3433">~ClientMasterChannel()</text><ellipse cx="3066.5" cy="692.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="3075.5" y="695.1479">operator=(const ClientMasterChannel&amp; clientMasterChannel) : ClientMasterChannel&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="702.6445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="3075.5" y="707.9526">&lt;void(packet::PacketBase &amp;, std::shared_ptr&lt;IClient&gt;) : rnetwork::Router</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="715.4492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="546" x="3075.5" y="720.7573">&lt;void(std::shared_ptr&lt;ClientChannel&gt; channel, rnetwork::packet::PacketBase &amp;) : std::function</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="728.2539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355" x="3075.5" y="733.562">&lt;void(std::shared_ptr&lt;ClientChannel&gt; channel) : std::function</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="741.0586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="581" x="3075.5" y="746.3667">getChannel(const rnetwork::Endpoint&amp; endpoint) : std::shared_ptr&lt;rnetwork::ClientChannel&gt; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="753.8633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="515" x="3075.5" y="759.1714">getChannel(const std::string&amp; token) : std::shared_ptr&lt;rnetwork::ClientChannel&gt; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="766.668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="524" x="3075.5" y="771.9761">getClient(const rnetwork::Endpoint&amp; endpoint) : std::shared_ptr&lt;rnetwork::IClient&gt; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="779.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449" x="3075.5" y="784.7808">handleConnection(std::shared_ptr&lt;rnetwork::IClient&gt; client, bool status) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="792.2773"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="667" x="3075.5" y="797.5854">handlePacket(std::shared_ptr&lt;rnetwork::IReceiver&gt; client, rnetwork::packet::PacketBase&amp; packet, bool status) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="805.082"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="586" x="3075.5" y="810.3901">handleTokenId(rnetwork::packet::PacketBase&amp; packet, std::shared_ptr&lt;rnetwork::IClient&gt; client) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3063.5" y="817.8867"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="3075.5" y="823.1948">initRouter() : void</text><ellipse cx="3066.5" cy="833.6914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="632" x="3075.5" y="835.9995">setConnectionCallback(const std::function&lt;void(std::shared_ptr&lt;ClientChannel&gt;)&gt;&amp; connectionCallback) : void</text><ellipse cx="3066.5" cy="846.4961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="737" x="3075.5" y="848.8042">setGateway(const std::function&lt;void(std::shared_ptr&lt;ClientChannel&gt;channel,rnetwork::packet::PacketBase&amp;)&gt;&amp; gateway) : void</text><ellipse cx="3066.5" cy="859.3008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="3075.5" y="861.6089">start() : void</text><!--class ClientUdp--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="60.8047" id="ClientUdp" style="stroke: #A80036; stroke-width: 1.5;" width="293" x="5649" y="168"/><ellipse cx="5761.25" cy="184" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5763.5938,179.6719 L5763.7656,179.75 C5763.9844,179.4375 5764.1875,179.3438 5764.4844,179.3438 C5764.7813,179.3438 5765.0625,179.4844 5765.2188,179.75 C5765.3125,179.9063 5765.3281,180.0313 5765.3281,180.4688 L5765.3281,181.8906 C5765.3281,182.3125 5765.2969,182.5 5765.1875,182.6563 C5765.0156,182.875 5764.75,183.0156 5764.4844,183.0156 C5764.2656,183.0156 5764.0313,182.9063 5763.8906,182.7656 C5763.75,182.6406 5763.7188,182.5156 5763.6563,182.1094 C5763.5625,181.7031 5763.3906,181.4844 5762.9063,181.2031 C5762.4375,180.9531 5761.8281,180.7969 5761.25,180.7969 C5759.5156,180.7969 5758.2656,182.1094 5758.2656,183.8906 L5758.2656,184.9844 C5758.2656,186.6875 5759.5625,187.7813 5761.6094,187.7813 C5762.375,187.7813 5763.0625,187.6563 5763.4844,187.3906 C5763.6719,187.2969 5763.6719,187.2969 5764.125,186.8125 C5764.3125,186.625 5764.5156,186.5469 5764.7344,186.5469 C5765.2031,186.5469 5765.5938,186.9375 5765.5938,187.3906 C5765.5938,187.7813 5765.2656,188.2344 5764.6875,188.6406 C5763.9375,189.1875 5762.7813,189.4844 5761.5625,189.4844 C5758.6719,189.4844 5756.5625,187.5938 5756.5625,185.0156 L5756.5625,183.8906 C5756.5625,181.1719 5758.5625,179.0938 5761.1875,179.0938 C5762.0625,179.0938 5762.6563,179.2344 5763.5938,179.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="60" x="5781.75" y="188.1543">ClientUdp</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5650" x2="5941" y1="200" y2="200"/><ellipse cx="5660" cy="211.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="5669" y="214.2104">client : std::shared_ptr&lt;rnetwork::udp::Client&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5650" x2="5941" y1="220.8047" y2="220.8047"/><!--class Collide--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="Collide" style="stroke: #A80036; stroke-width: 1.5;" width="165" x="2985" y="155.5"/><ellipse cx="3042.75" cy="171.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3045.0938,167.1719 L3045.2656,167.25 C3045.4844,166.9375 3045.6875,166.8438 3045.9844,166.8438 C3046.2813,166.8438 3046.5625,166.9844 3046.7188,167.25 C3046.8125,167.4063 3046.8281,167.5313 3046.8281,167.9688 L3046.8281,169.3906 C3046.8281,169.8125 3046.7969,170 3046.6875,170.1563 C3046.5156,170.375 3046.25,170.5156 3045.9844,170.5156 C3045.7656,170.5156 3045.5313,170.4063 3045.3906,170.2656 C3045.25,170.1406 3045.2188,170.0156 3045.1563,169.6094 C3045.0625,169.2031 3044.8906,168.9844 3044.4063,168.7031 C3043.9375,168.4531 3043.3281,168.2969 3042.75,168.2969 C3041.0156,168.2969 3039.7656,169.6094 3039.7656,171.3906 L3039.7656,172.4844 C3039.7656,174.1875 3041.0625,175.2813 3043.1094,175.2813 C3043.875,175.2813 3044.5625,175.1563 3044.9844,174.8906 C3045.1719,174.7969 3045.1719,174.7969 3045.625,174.3125 C3045.8125,174.125 3046.0156,174.0469 3046.2344,174.0469 C3046.7031,174.0469 3047.0938,174.4375 3047.0938,174.8906 C3047.0938,175.2813 3046.7656,175.7344 3046.1875,176.1406 C3045.4375,176.6875 3044.2813,176.9844 3043.0625,176.9844 C3040.1719,176.9844 3038.0625,175.0938 3038.0625,172.5156 L3038.0625,171.3906 C3038.0625,168.6719 3040.0625,166.5938 3042.6875,166.5938 C3043.5625,166.5938 3044.1563,166.7344 3045.0938,167.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="3063.25" y="175.6543">Collide</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2986" x2="3149" y1="187.5" y2="187.5"/><ellipse cx="2996" cy="199.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="3005" y="201.7104">by : CollideType</text><ellipse cx="2996" cy="212.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3005" y="214.5151">type : CollideType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2986" x2="3149" y1="221.1094" y2="221.1094"/><ellipse cx="2996" cy="233.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="3005" y="235.3198">Collide(CollideType type)</text><!--class Collide::CollideType--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="48" id="Collide::CollideType" style="stroke: #A80036; stroke-width: 1.5;" width="151" x="366" y="679.5"/><ellipse cx="381" cy="695.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M383.3438,691.1719 L383.5156,691.25 C383.7344,690.9375 383.9375,690.8438 384.2344,690.8438 C384.5313,690.8438 384.8125,690.9844 384.9688,691.25 C385.0625,691.4063 385.0781,691.5313 385.0781,691.9688 L385.0781,693.3906 C385.0781,693.8125 385.0469,694 384.9375,694.1563 C384.7656,694.375 384.5,694.5156 384.2344,694.5156 C384.0156,694.5156 383.7813,694.4063 383.6406,694.2656 C383.5,694.1406 383.4688,694.0156 383.4063,693.6094 C383.3125,693.2031 383.1406,692.9844 382.6563,692.7031 C382.1875,692.4531 381.5781,692.2969 381,692.2969 C379.2656,692.2969 378.0156,693.6094 378.0156,695.3906 L378.0156,696.4844 C378.0156,698.1875 379.3125,699.2813 381.3594,699.2813 C382.125,699.2813 382.8125,699.1563 383.2344,698.8906 C383.4219,698.7969 383.4219,698.7969 383.875,698.3125 C384.0625,698.125 384.2656,698.0469 384.4844,698.0469 C384.9531,698.0469 385.3438,698.4375 385.3438,698.8906 C385.3438,699.2813 385.0156,699.7344 384.4375,700.1406 C383.6875,700.6875 382.5313,700.9844 381.3125,700.9844 C378.4219,700.9844 376.3125,699.0938 376.3125,696.5156 L376.3125,695.3906 C376.3125,692.6719 378.3125,690.5938 380.9375,690.5938 C381.8125,690.5938 382.4063,690.7344 383.3438,691.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="395" y="699.6543">Collide::CollideType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="367" x2="516" y1="711.5" y2="711.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="367" x2="516" y1="719.5" y2="719.5"/><!--class ComponentStore--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="201.6563" id="ComponentStore" style="stroke: #A80036; stroke-width: 1.5;" width="481" x="552" y="602.5"/><ellipse cx="655.75" cy="618.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M658.0938,614.1719 L658.2656,614.25 C658.4844,613.9375 658.6875,613.8438 658.9844,613.8438 C659.2813,613.8438 659.5625,613.9844 659.7188,614.25 C659.8125,614.4063 659.8281,614.5313 659.8281,614.9688 L659.8281,616.3906 C659.8281,616.8125 659.7969,617 659.6875,617.1563 C659.5156,617.375 659.25,617.5156 658.9844,617.5156 C658.7656,617.5156 658.5313,617.4063 658.3906,617.2656 C658.25,617.1406 658.2188,617.0156 658.1563,616.6094 C658.0625,616.2031 657.8906,615.9844 657.4063,615.7031 C656.9375,615.4531 656.3281,615.2969 655.75,615.2969 C654.0156,615.2969 652.7656,616.6094 652.7656,618.3906 L652.7656,619.4844 C652.7656,621.1875 654.0625,622.2813 656.1094,622.2813 C656.875,622.2813 657.5625,622.1563 657.9844,621.8906 C658.1719,621.7969 658.1719,621.7969 658.625,621.3125 C658.8125,621.125 659.0156,621.0469 659.2344,621.0469 C659.7031,621.0469 660.0938,621.4375 660.0938,621.8906 C660.0938,622.2813 659.7656,622.7344 659.1875,623.1406 C658.4375,623.6875 657.2813,623.9844 656.0625,623.9844 C653.1719,623.9844 651.0625,622.0938 651.0625,619.5156 L651.0625,618.3906 C651.0625,615.6719 653.0625,613.5938 655.6875,613.5938 C656.5625,613.5938 657.1563,613.7344 658.0938,614.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="676.25" y="622.6543">ComponentStore</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="157" x="879" y="599.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="155" x="880" y="611.6387">template &lt;typename C&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="553" x2="1032" y1="634.5" y2="634.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="560" y="643.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="572" y="648.7104">store : std::unordered_map&lt;Entity, C&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="553" x2="1032" y1="655.3047" y2="655.3047"/><ellipse cx="563" cy="667.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="572" y="669.5151">ComponentStore()</text><ellipse cx="563" cy="680.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="572" y="682.3198">ComponentStore(ComponentStore&lt;C&gt; const &amp;)</text><ellipse cx="563" cy="692.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="572" y="695.1245">ComponentStore(ComponentStore&lt;C&gt;&amp; &amp;)</text><ellipse cx="563" cy="705.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="572" y="707.9292">~ComponentStore()</text><ellipse cx="563" cy="718.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="572" y="720.7339">extract(const Entity entity) : C</text><ellipse cx="563" cy="731.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="572" y="733.5386">get(const Entity entity) : C&amp;</text><ellipse cx="563" cy="744.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="572" y="746.3433">add(const Entity entity, C&amp;&amp; component) : bool</text><ellipse cx="563" cy="756.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="572" y="759.1479">add(const Entity entity, C const&amp; component) : bool</text><ellipse cx="563" cy="769.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="572" y="771.9526">has(const Entity entity) : bool</text><ellipse cx="563" cy="782.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="572" y="784.7573">remove(const Entity entity) : bool</text><ellipse cx="563" cy="795.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="455" x="572" y="797.562">removeNotIn(std::unordered_map&lt;Entity, ComponentTypeSet&gt;&amp; entities) : void</text><!--class ConnectionError--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="ConnectionError" style="stroke: #A80036; stroke-width: 1.5;" width="376" x="1068.5" y="654"/><ellipse cx="1201.25" cy="670" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1203.5938,665.6719 L1203.7656,665.75 C1203.9844,665.4375 1204.1875,665.3438 1204.4844,665.3438 C1204.7813,665.3438 1205.0625,665.4844 1205.2188,665.75 C1205.3125,665.9063 1205.3281,666.0313 1205.3281,666.4688 L1205.3281,667.8906 C1205.3281,668.3125 1205.2969,668.5 1205.1875,668.6563 C1205.0156,668.875 1204.75,669.0156 1204.4844,669.0156 C1204.2656,669.0156 1204.0313,668.9063 1203.8906,668.7656 C1203.75,668.6406 1203.7188,668.5156 1203.6563,668.1094 C1203.5625,667.7031 1203.3906,667.4844 1202.9063,667.2031 C1202.4375,666.9531 1201.8281,666.7969 1201.25,666.7969 C1199.5156,666.7969 1198.2656,668.1094 1198.2656,669.8906 L1198.2656,670.9844 C1198.2656,672.6875 1199.5625,673.7813 1201.6094,673.7813 C1202.375,673.7813 1203.0625,673.6563 1203.4844,673.3906 C1203.6719,673.2969 1203.6719,673.2969 1204.125,672.8125 C1204.3125,672.625 1204.5156,672.5469 1204.7344,672.5469 C1205.2031,672.5469 1205.5938,672.9375 1205.5938,673.3906 C1205.5938,673.7813 1205.2656,674.2344 1204.6875,674.6406 C1203.9375,675.1875 1202.7813,675.4844 1201.5625,675.4844 C1198.6719,675.4844 1196.5625,673.5938 1196.5625,671.0156 L1196.5625,669.8906 C1196.5625,667.1719 1198.5625,665.0938 1201.1875,665.0938 C1202.0625,665.0938 1202.6563,665.2344 1203.5938,665.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="102" x="1221.75" y="674.1543">ConnectionError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1069.5" x2="1443.5" y1="686" y2="686"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1069.5" x2="1443.5" y1="694" y2="694"/><ellipse cx="1079.5" cy="705.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1088.5" y="708.2104">ConnectionError(const std::string&amp; what)</text><ellipse cx="1079.5" cy="718.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1088.5" y="721.0151">ConnectionError(const ConnectionError&amp; error)</text><ellipse cx="1079.5" cy="731.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1088.5" y="733.8198">~ConnectionError()</text><ellipse cx="1079.5" cy="744.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="1088.5" y="746.6245">operator=(const ConnectionError&amp; error) : ConnectionError&amp;</text><!--class CreditsHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="CreditsHandler" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="4639.5" y="1848.5"/><ellipse cx="4727.75" cy="1864.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4730.0938,1860.1719 L4730.2656,1860.25 C4730.4844,1859.9375 4730.6875,1859.8438 4730.9844,1859.8438 C4731.2813,1859.8438 4731.5625,1859.9844 4731.7188,1860.25 C4731.8125,1860.4063 4731.8281,1860.5313 4731.8281,1860.9688 L4731.8281,1862.3906 C4731.8281,1862.8125 4731.7969,1863 4731.6875,1863.1563 C4731.5156,1863.375 4731.25,1863.5156 4730.9844,1863.5156 C4730.7656,1863.5156 4730.5313,1863.4063 4730.3906,1863.2656 C4730.25,1863.1406 4730.2188,1863.0156 4730.1563,1862.6094 C4730.0625,1862.2031 4729.8906,1861.9844 4729.4063,1861.7031 C4728.9375,1861.4531 4728.3281,1861.2969 4727.75,1861.2969 C4726.0156,1861.2969 4724.7656,1862.6094 4724.7656,1864.3906 L4724.7656,1865.4844 C4724.7656,1867.1875 4726.0625,1868.2813 4728.1094,1868.2813 C4728.875,1868.2813 4729.5625,1868.1563 4729.9844,1867.8906 C4730.1719,1867.7969 4730.1719,1867.7969 4730.625,1867.3125 C4730.8125,1867.125 4731.0156,1867.0469 4731.2344,1867.0469 C4731.7031,1867.0469 4732.0938,1867.4375 4732.0938,1867.8906 C4732.0938,1868.2813 4731.7656,1868.7344 4731.1875,1869.1406 C4730.4375,1869.6875 4729.2813,1869.9844 4728.0625,1869.9844 C4725.1719,1869.9844 4723.0625,1868.0938 4723.0625,1865.5156 L4723.0625,1864.3906 C4723.0625,1861.6719 4725.0625,1859.5938 4727.6875,1859.5938 C4728.5625,1859.5938 4729.1563,1859.7344 4730.0938,1860.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="4748.25" y="1868.6543">CreditsHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4640.5" x2="4916.5" y1="1880.5" y2="1880.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4647.5" y="1889.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="4659.5" y="1894.7104">_position : float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4640.5" x2="4916.5" y1="1901.3047" y2="1901.3047"/><ellipse cx="4650.5" cy="1913.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="4659.5" y="1915.5151">CreditsHandler(StateType&amp; requestedState)</text><ellipse cx="4650.5" cy="1926.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4659.5" y="1928.3198">~CreditsHandler()</text><ellipse cx="4650.5" cy="1938.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="4659.5" y="1941.1245">draw() : void</text><!--class Dead--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="48" id="Dead" style="stroke: #A80036; stroke-width: 1.5;" width="65" x="1480" y="679.5"/><ellipse cx="1495" cy="695.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1497.3438,691.1719 L1497.5156,691.25 C1497.7344,690.9375 1497.9375,690.8438 1498.2344,690.8438 C1498.5313,690.8438 1498.8125,690.9844 1498.9688,691.25 C1499.0625,691.4063 1499.0781,691.5313 1499.0781,691.9688 L1499.0781,693.3906 C1499.0781,693.8125 1499.0469,694 1498.9375,694.1563 C1498.7656,694.375 1498.5,694.5156 1498.2344,694.5156 C1498.0156,694.5156 1497.7813,694.4063 1497.6406,694.2656 C1497.5,694.1406 1497.4688,694.0156 1497.4063,693.6094 C1497.3125,693.2031 1497.1406,692.9844 1496.6563,692.7031 C1496.1875,692.4531 1495.5781,692.2969 1495,692.2969 C1493.2656,692.2969 1492.0156,693.6094 1492.0156,695.3906 L1492.0156,696.4844 C1492.0156,698.1875 1493.3125,699.2813 1495.3594,699.2813 C1496.125,699.2813 1496.8125,699.1563 1497.2344,698.8906 C1497.4219,698.7969 1497.4219,698.7969 1497.875,698.3125 C1498.0625,698.125 1498.2656,698.0469 1498.4844,698.0469 C1498.9531,698.0469 1499.3438,698.4375 1499.3438,698.8906 C1499.3438,699.2813 1499.0156,699.7344 1498.4375,700.1406 C1497.6875,700.6875 1496.5313,700.9844 1495.3125,700.9844 C1492.4219,700.9844 1490.3125,699.0938 1490.3125,696.5156 L1490.3125,695.3906 C1490.3125,692.6719 1492.3125,690.5938 1494.9375,690.5938 C1495.8125,690.5938 1496.4063,690.7344 1497.3438,691.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="33" x="1509" y="699.6543">Dead</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1481" x2="1544" y1="711.5" y2="711.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1481" x2="1544" y1="719.5" y2="719.5"/><!--class DelayedTask--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="201.6563" id="DelayedTask" style="stroke: #A80036; stroke-width: 1.5;" width="437" x="1580" y="602.5"/><ellipse cx="1754.75" cy="618.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1757.0938,614.1719 L1757.2656,614.25 C1757.4844,613.9375 1757.6875,613.8438 1757.9844,613.8438 C1758.2813,613.8438 1758.5625,613.9844 1758.7188,614.25 C1758.8125,614.4063 1758.8281,614.5313 1758.8281,614.9688 L1758.8281,616.3906 C1758.8281,616.8125 1758.7969,617 1758.6875,617.1563 C1758.5156,617.375 1758.25,617.5156 1757.9844,617.5156 C1757.7656,617.5156 1757.5313,617.4063 1757.3906,617.2656 C1757.25,617.1406 1757.2188,617.0156 1757.1563,616.6094 C1757.0625,616.2031 1756.8906,615.9844 1756.4063,615.7031 C1755.9375,615.4531 1755.3281,615.2969 1754.75,615.2969 C1753.0156,615.2969 1751.7656,616.6094 1751.7656,618.3906 L1751.7656,619.4844 C1751.7656,621.1875 1753.0625,622.2813 1755.1094,622.2813 C1755.875,622.2813 1756.5625,622.1563 1756.9844,621.8906 C1757.1719,621.7969 1757.1719,621.7969 1757.625,621.3125 C1757.8125,621.125 1758.0156,621.0469 1758.2344,621.0469 C1758.7031,621.0469 1759.0938,621.4375 1759.0938,621.8906 C1759.0938,622.2813 1758.7656,622.7344 1758.1875,623.1406 C1757.4375,623.6875 1756.2813,623.9844 1755.0625,623.9844 C1752.1719,623.9844 1750.0625,622.0938 1750.0625,619.5156 L1750.0625,618.3906 C1750.0625,615.6719 1752.0625,613.5938 1754.6875,613.5938 C1755.5625,613.5938 1756.1563,613.7344 1757.0938,614.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="1775.25" y="622.6543">DelayedTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1581" x2="2016" y1="634.5" y2="634.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1588" y="643.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="1600" y="648.7104">_start : std::chrono::time_point&lt;std::chrono::steady_clock&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1588" y="656.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1600" y="661.5151">_timeout : unsigned long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1581" x2="2016" y1="668.1094" y2="668.1094"/><ellipse cx="1591" cy="680.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="411" x="1600" y="682.3198">DelayedTask(const std::function&lt;void()&gt;&amp; callback, unsigned long time)</text><ellipse cx="1591" cy="692.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1600" y="695.1245">DelayedTask(const DelayedTask&amp; delayedTask)</text><ellipse cx="1591" cy="705.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="1600" y="707.9292">~DelayedTask()</text><ellipse cx="1591" cy="718.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="352" x="1600" y="720.7339">operator=(const DelayedTask&amp; delayedTask) : DelayedTask&amp;</text><ellipse cx="1591" cy="731.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1600" y="733.5386">available() : bool {query}</text><ellipse cx="1591" cy="744.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="1600" y="746.3433">service() : rnetwork::services::IService&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1588" y="753.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1600" y="759.1479">&lt;void() : std::function</text><ellipse cx="1591" cy="769.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1600" y="771.9526">operator()() : void</text><ellipse cx="1591" cy="782.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1600" y="784.7573">registerService() : void {query}</text><ellipse cx="1591" cy="795.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="1600" y="797.562">unregisterService() : void {query}</text><!--class Drawable--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="73.6094" id="Drawable" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="5977.5" y="161.5"/><ellipse cx="6073.25" cy="177.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6075.5938,173.1719 L6075.7656,173.25 C6075.9844,172.9375 6076.1875,172.8438 6076.4844,172.8438 C6076.7813,172.8438 6077.0625,172.9844 6077.2188,173.25 C6077.3125,173.4063 6077.3281,173.5313 6077.3281,173.9688 L6077.3281,175.3906 C6077.3281,175.8125 6077.2969,176 6077.1875,176.1563 C6077.0156,176.375 6076.75,176.5156 6076.4844,176.5156 C6076.2656,176.5156 6076.0313,176.4063 6075.8906,176.2656 C6075.75,176.1406 6075.7188,176.0156 6075.6563,175.6094 C6075.5625,175.2031 6075.3906,174.9844 6074.9063,174.7031 C6074.4375,174.4531 6073.8281,174.2969 6073.25,174.2969 C6071.5156,174.2969 6070.2656,175.6094 6070.2656,177.3906 L6070.2656,178.4844 C6070.2656,180.1875 6071.5625,181.2813 6073.6094,181.2813 C6074.375,181.2813 6075.0625,181.1563 6075.4844,180.8906 C6075.6719,180.7969 6075.6719,180.7969 6076.125,180.3125 C6076.3125,180.125 6076.5156,180.0469 6076.7344,180.0469 C6077.2031,180.0469 6077.5938,180.4375 6077.5938,180.8906 C6077.5938,181.2813 6077.2656,181.7344 6076.6875,182.1406 C6075.9375,182.6875 6074.7813,182.9844 6073.5625,182.9844 C6070.6719,182.9844 6068.5625,181.0938 6068.5625,178.5156 L6068.5625,177.3906 C6068.5625,174.6719 6070.5625,172.5938 6073.1875,172.5938 C6074.0625,172.5938 6074.6563,172.7344 6075.5938,173.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="6093.75" y="181.6543">Drawable</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5978.5" x2="6234.5" y1="193.5" y2="193.5"/><ellipse cx="5988.5" cy="205.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="5997.5" y="207.7104">content : std::shared_ptr&lt;sf::Drawable&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5978.5" x2="6234.5" y1="214.3047" y2="214.3047"/><ellipse cx="5988.5" cy="226.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="5997.5" y="228.5151">Drawable()</text><!--class Engine--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="316.8984" id="Engine" style="stroke: #A80036; stroke-width: 1.5;" width="662" x="4010.5" y="40"/><ellipse cx="4315.75" cy="56" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4318.0938,51.6719 L4318.2656,51.75 C4318.4844,51.4375 4318.6875,51.3438 4318.9844,51.3438 C4319.2813,51.3438 4319.5625,51.4844 4319.7188,51.75 C4319.8125,51.9063 4319.8281,52.0313 4319.8281,52.4688 L4319.8281,53.8906 C4319.8281,54.3125 4319.7969,54.5 4319.6875,54.6563 C4319.5156,54.875 4319.25,55.0156 4318.9844,55.0156 C4318.7656,55.0156 4318.5313,54.9063 4318.3906,54.7656 C4318.25,54.6406 4318.2188,54.5156 4318.1563,54.1094 C4318.0625,53.7031 4317.8906,53.4844 4317.4063,53.2031 C4316.9375,52.9531 4316.3281,52.7969 4315.75,52.7969 C4314.0156,52.7969 4312.7656,54.1094 4312.7656,55.8906 L4312.7656,56.9844 C4312.7656,58.6875 4314.0625,59.7813 4316.1094,59.7813 C4316.875,59.7813 4317.5625,59.6563 4317.9844,59.3906 C4318.1719,59.2969 4318.1719,59.2969 4318.625,58.8125 C4318.8125,58.625 4319.0156,58.5469 4319.2344,58.5469 C4319.7031,58.5469 4320.0938,58.9375 4320.0938,59.3906 C4320.0938,59.7813 4319.7656,60.2344 4319.1875,60.6406 C4318.4375,61.1875 4317.2813,61.4844 4316.0625,61.4844 C4313.1719,61.4844 4311.0625,59.5938 4311.0625,57.0156 L4311.0625,55.8906 C4311.0625,53.1719 4313.0625,51.0938 4315.6875,51.0938 C4316.5625,51.0938 4317.1563,51.2344 4318.0938,51.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="4336.25" y="60.1543">Engine</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4011.5" x2="4671.5" y1="72" y2="72"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="80.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4030.5" y="86.2104">_window : Window</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="93.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="4030.5" y="99.0151">_ioService : rnetwork::async::IOService</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="106.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="4030.5" y="111.8198">_players : std::deque&lt;std::shared_ptr&lt;Player&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="119.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="386" x="4030.5" y="124.6245">_masterChannel : std::shared_ptr&lt;rnetwork::ClientMasterChannel&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="132.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="4030.5" y="137.4292">_games : std::unordered_map&lt;uint16_t, std::shared_ptr&lt;Game&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="144.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="4030.5" y="150.2339">_nextGameId : unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4011.5" x2="4671.5" y1="156.8281" y2="156.8281"/><ellipse cx="4021.5" cy="168.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="4030.5" y="171.0386">Engine()</text><ellipse cx="4021.5" cy="181.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="4030.5" y="183.8433">~Engine()</text><ellipse cx="4021.5" cy="194.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="4030.5" y="196.6479">run() : void</text><ellipse cx="4021.5" cy="207.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="4030.5" y="209.4526">Engine()</text><ellipse cx="4021.5" cy="219.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="4030.5" y="222.2573">~Engine()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="229.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="479" x="4030.5" y="235.062">&lt;void(rnetwork::packet::PacketBase &amp;, std::shared_ptr&lt;Player&gt;) : rnetwork::Router</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="242.5586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="504" x="4030.5" y="247.8667">getPlayer(std::shared_ptr&lt;rnetwork::ClientChannel&gt; channel) : std::shared_ptr&lt;Player&gt;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="255.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="4030.5" y="260.6714">handleClient(std::shared_ptr&lt;rnetwork::ClientChannel&gt; channel) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="268.168"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="4030.5" y="273.4761">handleJoinGame(rnetwork::packet::PacketBase&amp; packet, std::shared_ptr&lt;Player&gt; player) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="280.9727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="4030.5" y="286.2808">handleJoinLobby(rnetwork::packet::PacketBase&amp; packet, std::shared_ptr&lt;Player&gt; player) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="293.7773"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="570" x="4030.5" y="299.0854">handleLobbyCreation(rnetwork::packet::PacketBase&amp; packet, std::shared_ptr&lt;Player&gt; player) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="306.582"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="542" x="4030.5" y="311.8901">handleLobbyList(rnetwork::packet::PacketBase&amp; packet, std::shared_ptr&lt;Player&gt; player) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="319.3867"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="636" x="4030.5" y="324.6948">handlePacket(std::shared_ptr&lt;rnetwork::ClientChannel&gt; channel, rnetwork::packet::PacketBase&amp; packet) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4018.5" y="332.1914"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4030.5" y="337.4995">initRouter() : void</text><ellipse cx="4021.5" cy="347.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="4030.5" y="350.3042">start(const rnetwork::Endpoint&amp; endpoint) : void</text><!--class EntityType--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="48" id="EntityType" style="stroke: #A80036; stroke-width: 1.5;" width="96" x="6322.5" y="679.5"/><ellipse cx="6337.5" cy="695.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6339.8438,691.1719 L6340.0156,691.25 C6340.2344,690.9375 6340.4375,690.8438 6340.7344,690.8438 C6341.0313,690.8438 6341.3125,690.9844 6341.4688,691.25 C6341.5625,691.4063 6341.5781,691.5313 6341.5781,691.9688 L6341.5781,693.3906 C6341.5781,693.8125 6341.5469,694 6341.4375,694.1563 C6341.2656,694.375 6341,694.5156 6340.7344,694.5156 C6340.5156,694.5156 6340.2813,694.4063 6340.1406,694.2656 C6340,694.1406 6339.9688,694.0156 6339.9063,693.6094 C6339.8125,693.2031 6339.6406,692.9844 6339.1563,692.7031 C6338.6875,692.4531 6338.0781,692.2969 6337.5,692.2969 C6335.7656,692.2969 6334.5156,693.6094 6334.5156,695.3906 L6334.5156,696.4844 C6334.5156,698.1875 6335.8125,699.2813 6337.8594,699.2813 C6338.625,699.2813 6339.3125,699.1563 6339.7344,698.8906 C6339.9219,698.7969 6339.9219,698.7969 6340.375,698.3125 C6340.5625,698.125 6340.7656,698.0469 6340.9844,698.0469 C6341.4531,698.0469 6341.8438,698.4375 6341.8438,698.8906 C6341.8438,699.2813 6341.5156,699.7344 6340.9375,700.1406 C6340.1875,700.6875 6339.0313,700.9844 6337.8125,700.9844 C6334.9219,700.9844 6332.8125,699.0938 6332.8125,696.5156 L6332.8125,695.3906 C6332.8125,692.6719 6334.8125,690.5938 6337.4375,690.5938 C6338.3125,690.5938 6338.9063,690.7344 6339.8438,691.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="6351.5" y="699.6543">EntityType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6323.5" x2="6417.5" y1="711.5" y2="711.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6323.5" x2="6417.5" y1="719.5" y2="719.5"/><!--class EnumClassHash--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="60.8047" id="EnumClassHash" style="stroke: #A80036; stroke-width: 1.5;" width="238" x="5818.5" y="1484"/><ellipse cx="5883.25" cy="1500" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5885.5938,1495.6719 L5885.7656,1495.75 C5885.9844,1495.4375 5886.1875,1495.3438 5886.4844,1495.3438 C5886.7813,1495.3438 5887.0625,1495.4844 5887.2188,1495.75 C5887.3125,1495.9063 5887.3281,1496.0313 5887.3281,1496.4688 L5887.3281,1497.8906 C5887.3281,1498.3125 5887.2969,1498.5 5887.1875,1498.6563 C5887.0156,1498.875 5886.75,1499.0156 5886.4844,1499.0156 C5886.2656,1499.0156 5886.0313,1498.9063 5885.8906,1498.7656 C5885.75,1498.6406 5885.7188,1498.5156 5885.6563,1498.1094 C5885.5625,1497.7031 5885.3906,1497.4844 5884.9063,1497.2031 C5884.4375,1496.9531 5883.8281,1496.7969 5883.25,1496.7969 C5881.5156,1496.7969 5880.2656,1498.1094 5880.2656,1499.8906 L5880.2656,1500.9844 C5880.2656,1502.6875 5881.5625,1503.7813 5883.6094,1503.7813 C5884.375,1503.7813 5885.0625,1503.6563 5885.4844,1503.3906 C5885.6719,1503.2969 5885.6719,1503.2969 5886.125,1502.8125 C5886.3125,1502.625 5886.5156,1502.5469 5886.7344,1502.5469 C5887.2031,1502.5469 5887.5938,1502.9375 5887.5938,1503.3906 C5887.5938,1503.7813 5887.2656,1504.2344 5886.6875,1504.6406 C5885.9375,1505.1875 5884.7813,1505.4844 5883.5625,1505.4844 C5880.6719,1505.4844 5878.5625,1503.5938 5878.5625,1501.0156 L5878.5625,1499.8906 C5878.5625,1497.1719 5880.5625,1495.0938 5883.1875,1495.0938 C5884.0625,1495.0938 5884.6563,1495.2344 5885.5938,1495.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="5903.75" y="1504.1543">EnumClassHash</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5819.5" x2="6055.5" y1="1516" y2="1516"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5819.5" x2="6055.5" y1="1524" y2="1524"/><ellipse cx="5829.5" cy="1535.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="5838.5" y="1538.2104">operator()(T t) : std : : size_t {query}</text><!--class ExecService--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="163.2422" id="ExecService" style="stroke: #A80036; stroke-width: 1.5;" width="367" x="6487" y="117"/><ellipse cx="6629.25" cy="133" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6631.5938,128.6719 L6631.7656,128.75 C6631.9844,128.4375 6632.1875,128.3438 6632.4844,128.3438 C6632.7813,128.3438 6633.0625,128.4844 6633.2188,128.75 C6633.3125,128.9063 6633.3281,129.0313 6633.3281,129.4688 L6633.3281,130.8906 C6633.3281,131.3125 6633.2969,131.5 6633.1875,131.6563 C6633.0156,131.875 6632.75,132.0156 6632.4844,132.0156 C6632.2656,132.0156 6632.0313,131.9063 6631.8906,131.7656 C6631.75,131.6406 6631.7188,131.5156 6631.6563,131.1094 C6631.5625,130.7031 6631.3906,130.4844 6630.9063,130.2031 C6630.4375,129.9531 6629.8281,129.7969 6629.25,129.7969 C6627.5156,129.7969 6626.2656,131.1094 6626.2656,132.8906 L6626.2656,133.9844 C6626.2656,135.6875 6627.5625,136.7813 6629.6094,136.7813 C6630.375,136.7813 6631.0625,136.6563 6631.4844,136.3906 C6631.6719,136.2969 6631.6719,136.2969 6632.125,135.8125 C6632.3125,135.625 6632.5156,135.5469 6632.7344,135.5469 C6633.2031,135.5469 6633.5938,135.9375 6633.5938,136.3906 C6633.5938,136.7813 6633.2656,137.2344 6632.6875,137.6406 C6631.9375,138.1875 6630.7813,138.4844 6629.5625,138.4844 C6626.6719,138.4844 6624.5625,136.5938 6624.5625,134.0156 L6624.5625,132.8906 C6624.5625,130.1719 6626.5625,128.0938 6629.1875,128.0938 C6630.0625,128.0938 6630.6563,128.2344 6631.5938,128.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="6649.75" y="137.1543">ExecService</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6488" x2="6853" y1="149" y2="149"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6495" y="157.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="169" x="6507" y="163.2104">_instance : static ExecService</text><line style="stroke: #000000; stroke-width: 1.0;" x1="6507" x2="6676" y1="165.2104" y2="165.2104"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6495" y="170.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="6507" y="176.0151">_name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6488" x2="6853" y1="182.6094" y2="182.6094"/><ellipse cx="6498" cy="194.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="6507" y="196.8198">ExecService()</text><ellipse cx="6498" cy="207.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="6507" y="209.6245">ExecService(const ExecService&amp; execService)</text><ellipse cx="6498" cy="220.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="6507" y="222.4292">~ExecService()</text><ellipse cx="6498" cy="232.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="146" x="6507" y="235.2339">Instance() : ExecService&amp;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="6507" x2="6653" y1="237.2339" y2="237.2339"/><ellipse cx="6498" cy="245.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="6507" y="248.0386">operator=(const ExecService&amp; execService) : ExecService&amp;</text><ellipse cx="6498" cy="258.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="6507" y="260.8433">name() : std::string&amp; {query}</text><ellipse cx="6498" cy="271.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="6507" y="273.6479">update() : void</text><!--class ExecTask--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="176.0469" id="ExecTask" style="stroke: #A80036; stroke-width: 1.5;" width="322" x="2052.5" y="615.5"/><ellipse cx="2180.25" cy="631.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2182.5938,627.1719 L2182.7656,627.25 C2182.9844,626.9375 2183.1875,626.8438 2183.4844,626.8438 C2183.7813,626.8438 2184.0625,626.9844 2184.2188,627.25 C2184.3125,627.4063 2184.3281,627.5313 2184.3281,627.9688 L2184.3281,629.3906 C2184.3281,629.8125 2184.2969,630 2184.1875,630.1563 C2184.0156,630.375 2183.75,630.5156 2183.4844,630.5156 C2183.2656,630.5156 2183.0313,630.4063 2182.8906,630.2656 C2182.75,630.1406 2182.7188,630.0156 2182.6563,629.6094 C2182.5625,629.2031 2182.3906,628.9844 2181.9063,628.7031 C2181.4375,628.4531 2180.8281,628.2969 2180.25,628.2969 C2178.5156,628.2969 2177.2656,629.6094 2177.2656,631.3906 L2177.2656,632.4844 C2177.2656,634.1875 2178.5625,635.2813 2180.6094,635.2813 C2181.375,635.2813 2182.0625,635.1563 2182.4844,634.8906 C2182.6719,634.7969 2182.6719,634.7969 2183.125,634.3125 C2183.3125,634.125 2183.5156,634.0469 2183.7344,634.0469 C2184.2031,634.0469 2184.5938,634.4375 2184.5938,634.8906 C2184.5938,635.2813 2184.2656,635.7344 2183.6875,636.1406 C2182.9375,636.6875 2181.7813,636.9844 2180.5625,636.9844 C2177.6719,636.9844 2175.5625,635.0938 2175.5625,632.5156 L2175.5625,631.3906 C2175.5625,628.6719 2177.5625,626.5938 2180.1875,626.5938 C2181.0625,626.5938 2181.6563,626.7344 2182.5938,627.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="2200.75" y="635.6543">ExecTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2053.5" x2="2373.5" y1="647.5" y2="647.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2053.5" x2="2373.5" y1="655.5" y2="655.5"/><ellipse cx="2063.5" cy="667.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2072.5" y="669.7104">ExecTask(const std::function&lt;void()&gt;&amp; task)</text><ellipse cx="2063.5" cy="680.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="2072.5" y="682.5151">ExecTask(const ExecTask&amp; execTask)</text><ellipse cx="2063.5" cy="693.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2072.5" y="695.3198">~ExecTask()</text><ellipse cx="2063.5" cy="705.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="2072.5" y="708.1245">operator=(const ExecTask&amp; execTask) : ExecTask&amp;</text><ellipse cx="2063.5" cy="718.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="2072.5" y="720.9292">available() : bool {query}</text><ellipse cx="2063.5" cy="731.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="2072.5" y="733.7339">service() : rnetwork::services::IService&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2060.5" y="741.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="2072.5" y="746.5386">&lt;void() : std::function</text><ellipse cx="2063.5" cy="757.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="2072.5" y="759.3433">operator()() : void</text><ellipse cx="2063.5" cy="769.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="2072.5" y="772.1479">registerService() : void {query}</text><ellipse cx="2063.5" cy="782.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="2072.5" y="784.9526">unregisterService() : void {query}</text><!--class ExitHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="ExitHandler" style="stroke: #A80036; stroke-width: 1.5;" width="257" x="4953" y="1855"/><ellipse cx="5041.75" cy="1871" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5044.0938,1866.6719 L5044.2656,1866.75 C5044.4844,1866.4375 5044.6875,1866.3438 5044.9844,1866.3438 C5045.2813,1866.3438 5045.5625,1866.4844 5045.7188,1866.75 C5045.8125,1866.9063 5045.8281,1867.0313 5045.8281,1867.4688 L5045.8281,1868.8906 C5045.8281,1869.3125 5045.7969,1869.5 5045.6875,1869.6563 C5045.5156,1869.875 5045.25,1870.0156 5044.9844,1870.0156 C5044.7656,1870.0156 5044.5313,1869.9063 5044.3906,1869.7656 C5044.25,1869.6406 5044.2188,1869.5156 5044.1563,1869.1094 C5044.0625,1868.7031 5043.8906,1868.4844 5043.4063,1868.2031 C5042.9375,1867.9531 5042.3281,1867.7969 5041.75,1867.7969 C5040.0156,1867.7969 5038.7656,1869.1094 5038.7656,1870.8906 L5038.7656,1871.9844 C5038.7656,1873.6875 5040.0625,1874.7813 5042.1094,1874.7813 C5042.875,1874.7813 5043.5625,1874.6563 5043.9844,1874.3906 C5044.1719,1874.2969 5044.1719,1874.2969 5044.625,1873.8125 C5044.8125,1873.625 5045.0156,1873.5469 5045.2344,1873.5469 C5045.7031,1873.5469 5046.0938,1873.9375 5046.0938,1874.3906 C5046.0938,1874.7813 5045.7656,1875.2344 5045.1875,1875.6406 C5044.4375,1876.1875 5043.2813,1876.4844 5042.0625,1876.4844 C5039.1719,1876.4844 5037.0625,1874.5938 5037.0625,1872.0156 L5037.0625,1870.8906 C5037.0625,1868.1719 5039.0625,1866.0938 5041.6875,1866.0938 C5042.5625,1866.0938 5043.1563,1866.2344 5044.0938,1866.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="5062.25" y="1875.1543">ExitHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4954" x2="5209" y1="1887" y2="1887"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4954" x2="5209" y1="1895" y2="1895"/><ellipse cx="4964" cy="1906.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="4973" y="1909.2104">ExitHandler(StateType&amp; requestedState)</text><ellipse cx="4964" cy="1919.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="4973" y="1922.0151">~ExitHandler()</text><ellipse cx="4964" cy="1932.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="4973" y="1934.8198">draw() : void</text><!--class FPS--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="48" id="FPS" style="stroke: #A80036; stroke-width: 1.5;" width="55" x="2410" y="679.5"/><ellipse cx="2425" cy="695.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2427.3438,691.1719 L2427.5156,691.25 C2427.7344,690.9375 2427.9375,690.8438 2428.2344,690.8438 C2428.5313,690.8438 2428.8125,690.9844 2428.9688,691.25 C2429.0625,691.4063 2429.0781,691.5313 2429.0781,691.9688 L2429.0781,693.3906 C2429.0781,693.8125 2429.0469,694 2428.9375,694.1563 C2428.7656,694.375 2428.5,694.5156 2428.2344,694.5156 C2428.0156,694.5156 2427.7813,694.4063 2427.6406,694.2656 C2427.5,694.1406 2427.4688,694.0156 2427.4063,693.6094 C2427.3125,693.2031 2427.1406,692.9844 2426.6563,692.7031 C2426.1875,692.4531 2425.5781,692.2969 2425,692.2969 C2423.2656,692.2969 2422.0156,693.6094 2422.0156,695.3906 L2422.0156,696.4844 C2422.0156,698.1875 2423.3125,699.2813 2425.3594,699.2813 C2426.125,699.2813 2426.8125,699.1563 2427.2344,698.8906 C2427.4219,698.7969 2427.4219,698.7969 2427.875,698.3125 C2428.0625,698.125 2428.2656,698.0469 2428.4844,698.0469 C2428.9531,698.0469 2429.3438,698.4375 2429.3438,698.8906 C2429.3438,699.2813 2429.0156,699.7344 2428.4375,700.1406 C2427.6875,700.6875 2426.5313,700.9844 2425.3125,700.9844 C2422.4219,700.9844 2420.3125,699.0938 2420.3125,696.5156 L2420.3125,695.3906 C2420.3125,692.6719 2422.3125,690.5938 2424.9375,690.5938 C2425.8125,690.5938 2426.4063,690.7344 2427.3438,691.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="2439" y="699.6543">FPS</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2411" x2="2464" y1="711.5" y2="711.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2411" x2="2464" y1="719.5" y2="719.5"/><!--class FSM--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="FSM" style="stroke: #A80036; stroke-width: 1.5;" width="394" x="5147.5" y="1075.5"/><ellipse cx="5327.75" cy="1091.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5330.0938,1087.1719 L5330.2656,1087.25 C5330.4844,1086.9375 5330.6875,1086.8438 5330.9844,1086.8438 C5331.2813,1086.8438 5331.5625,1086.9844 5331.7188,1087.25 C5331.8125,1087.4063 5331.8281,1087.5313 5331.8281,1087.9688 L5331.8281,1089.3906 C5331.8281,1089.8125 5331.7969,1090 5331.6875,1090.1563 C5331.5156,1090.375 5331.25,1090.5156 5330.9844,1090.5156 C5330.7656,1090.5156 5330.5313,1090.4063 5330.3906,1090.2656 C5330.25,1090.1406 5330.2188,1090.0156 5330.1563,1089.6094 C5330.0625,1089.2031 5329.8906,1088.9844 5329.4063,1088.7031 C5328.9375,1088.4531 5328.3281,1088.2969 5327.75,1088.2969 C5326.0156,1088.2969 5324.7656,1089.6094 5324.7656,1091.3906 L5324.7656,1092.4844 C5324.7656,1094.1875 5326.0625,1095.2813 5328.1094,1095.2813 C5328.875,1095.2813 5329.5625,1095.1563 5329.9844,1094.8906 C5330.1719,1094.7969 5330.1719,1094.7969 5330.625,1094.3125 C5330.8125,1094.125 5331.0156,1094.0469 5331.2344,1094.0469 C5331.7031,1094.0469 5332.0938,1094.4375 5332.0938,1094.8906 C5332.0938,1095.2813 5331.7656,1095.7344 5331.1875,1096.1406 C5330.4375,1096.6875 5329.2813,1096.9844 5328.0625,1096.9844 C5325.1719,1096.9844 5323.0625,1095.0938 5323.0625,1092.5156 L5323.0625,1091.3906 C5323.0625,1088.6719 5325.0625,1086.5938 5327.6875,1086.5938 C5328.5625,1086.5938 5329.1563,1086.7344 5330.0938,1087.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25" x="5348.25" y="1095.6543">FSM</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5148.5" x2="5540.5" y1="1107.5" y2="1107.5"/><ellipse cx="5158.5" cy="1119.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="5167.5" y="1121.7104">activeState : StateType</text><ellipse cx="5158.5" cy="1132.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="5167.5" y="1134.5151">requestedState : StateType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5148.5" x2="5540.5" y1="1141.1094" y2="1141.1094"/><ellipse cx="5158.5" cy="1153.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="5167.5" y="1155.3198">exception_caught(Event const &amp;, FSM &amp;, std::exception &amp;) : void</text><ellipse cx="5158.5" cy="1165.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="5167.5" y="1168.1245">no_transition(event const &amp;, fsm &amp;, int state) : void</text><!--class FSM::transition_table--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="48" id="FSM::transition_table" style="stroke: #A80036; stroke-width: 1.5;" width="163" x="360" y="1101"/><ellipse cx="375" cy="1117" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M377.3438,1112.6719 L377.5156,1112.75 C377.7344,1112.4375 377.9375,1112.3438 378.2344,1112.3438 C378.5313,1112.3438 378.8125,1112.4844 378.9688,1112.75 C379.0625,1112.9063 379.0781,1113.0313 379.0781,1113.4688 L379.0781,1114.8906 C379.0781,1115.3125 379.0469,1115.5 378.9375,1115.6563 C378.7656,1115.875 378.5,1116.0156 378.2344,1116.0156 C378.0156,1116.0156 377.7813,1115.9063 377.6406,1115.7656 C377.5,1115.6406 377.4688,1115.5156 377.4063,1115.1094 C377.3125,1114.7031 377.1406,1114.4844 376.6563,1114.2031 C376.1875,1113.9531 375.5781,1113.7969 375,1113.7969 C373.2656,1113.7969 372.0156,1115.1094 372.0156,1116.8906 L372.0156,1117.9844 C372.0156,1119.6875 373.3125,1120.7813 375.3594,1120.7813 C376.125,1120.7813 376.8125,1120.6563 377.2344,1120.3906 C377.4219,1120.2969 377.4219,1120.2969 377.875,1119.8125 C378.0625,1119.625 378.2656,1119.5469 378.4844,1119.5469 C378.9531,1119.5469 379.3438,1119.9375 379.3438,1120.3906 C379.3438,1120.7813 379.0156,1121.2344 378.4375,1121.6406 C377.6875,1122.1875 376.5313,1122.4844 375.3125,1122.4844 C372.4219,1122.4844 370.3125,1120.5938 370.3125,1118.0156 L370.3125,1116.8906 C370.3125,1114.1719 372.3125,1112.0938 374.9375,1112.0938 C375.8125,1112.0938 376.4063,1112.2344 377.3438,1112.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="131" x="389" y="1121.1543">FSM::transition_table</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="361" x2="522" y1="1133" y2="1133"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="361" x2="522" y1="1141" y2="1141"/><!--class Game--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="406.5313" id="Game" style="stroke: #A80036; stroke-width: 1.5;" width="557" x="4395" y="500"/><ellipse cx="4651.25" cy="516" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4653.5938,511.6719 L4653.7656,511.75 C4653.9844,511.4375 4654.1875,511.3438 4654.4844,511.3438 C4654.7813,511.3438 4655.0625,511.4844 4655.2188,511.75 C4655.3125,511.9063 4655.3281,512.0313 4655.3281,512.4688 L4655.3281,513.8906 C4655.3281,514.3125 4655.2969,514.5 4655.1875,514.6563 C4655.0156,514.875 4654.75,515.0156 4654.4844,515.0156 C4654.2656,515.0156 4654.0313,514.9063 4653.8906,514.7656 C4653.75,514.6406 4653.7188,514.5156 4653.6563,514.1094 C4653.5625,513.7031 4653.3906,513.4844 4652.9063,513.2031 C4652.4375,512.9531 4651.8281,512.7969 4651.25,512.7969 C4649.5156,512.7969 4648.2656,514.1094 4648.2656,515.8906 L4648.2656,516.9844 C4648.2656,518.6875 4649.5625,519.7813 4651.6094,519.7813 C4652.375,519.7813 4653.0625,519.6563 4653.4844,519.3906 C4653.6719,519.2969 4653.6719,519.2969 4654.125,518.8125 C4654.3125,518.625 4654.5156,518.5469 4654.7344,518.5469 C4655.2031,518.5469 4655.5938,518.9375 4655.5938,519.3906 C4655.5938,519.7813 4655.2656,520.2344 4654.6875,520.6406 C4653.9375,521.1875 4652.7813,521.4844 4651.5625,521.4844 C4648.6719,521.4844 4646.5625,519.5938 4646.5625,517.0156 L4646.5625,515.8906 C4646.5625,513.1719 4648.5625,511.0938 4651.1875,511.0938 C4652.0625,511.0938 4652.6563,511.2344 4653.5938,511.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="36" x="4671.75" y="520.1543">Game</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4396" x2="4951" y1="532" y2="532"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="540.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="4415" y="546.2104">_assetsLoader : AssetsLoader&amp;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="553.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="4415" y="559.0151">networkHandler : NetworkHandler</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="566.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="4415" y="571.8198">_manager : ecs::Manager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="579.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="4415" y="584.6245">IoService : using</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="592.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="4415" y="597.4292">manager : ecs::Manager</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="604.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="4415" y="610.2339">_moveCommands : rnetwork::shared_queue&lt;rtype::ct::RtypeCommand&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="617.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4415" y="623.0386">spawner : spawner::Spawner</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="630.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="377" x="4415" y="635.8433">last : std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="643.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="4415" y="648.6479">_players : std::vector&lt;std::shared_ptr&lt;Player&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="656.1445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="4415" y="661.4526">_id : unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4396" x2="4951" y1="668.0469" y2="668.0469"/><ellipse cx="4406" cy="679.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="4415" y="682.2573">Game(sf::RenderWindow&amp; window)</text><ellipse cx="4406" cy="692.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="4415" y="695.062">~Game()</text><polygon fill="#FFFF44" points="4406,700.5586,4410,704.5586,4406,708.5586,4402,704.5586" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="4415" y="707.8667">init() : void</text><polygon fill="#FFFF44" points="4406,713.3633,4410,717.3633,4406,721.3633,4402,717.3633" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="4415" y="720.6714">initAssets() : void</text><polygon fill="#FFFF44" points="4406,726.168,4410,730.168,4406,734.168,4402,730.168" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4415" y="733.4761">initComponentStores() : void</text><polygon fill="#FFFF44" points="4406,738.9727,4410,742.9727,4406,746.9727,4402,742.9727" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="4415" y="746.2808">initEntities() : void</text><polygon fill="#FFFF44" points="4406,751.7773,4410,755.7773,4406,759.7773,4402,755.7773" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="4415" y="759.0854">initFPS() : void</text><polygon fill="#FFFF44" points="4406,764.582,4410,768.582,4406,772.582,4402,768.582" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="4415" y="771.8901">initSystems() : void</text><ellipse cx="4406" cy="782.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="4415" y="784.6948">run(sf::Time&amp; time) : void</text><ellipse cx="4406" cy="795.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="4415" y="797.4995">Game(unsigned int id)</text><ellipse cx="4406" cy="807.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="4415" y="810.3042">~Game()</text><ellipse cx="4406" cy="820.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="4415" y="823.1089">addPlayer(std::shared_ptr&lt;Player&gt; player) : bool</text><ellipse cx="4406" cy="833.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="4415" y="835.9136">getId() : unsigned int {query}</text><ellipse cx="4406" cy="846.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="4415" y="848.7183">nbPlayers() : unsigned long {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="856.2148"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="4415" y="861.5229">initComponentsStore() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4403" y="869.0195"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="531" x="4415" y="874.3276">initSystems(rnetwork::Router&lt;void(rnetwork::packet::PacketBase&amp;,Player&amp;)&gt;&amp; router) : void</text><ellipse cx="4406" cy="884.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="4415" y="887.1323">run() : void</text><ellipse cx="4406" cy="897.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="317" x="4415" y="899.937">unregisterPlayer(std::shared_ptr&lt;Player&gt; player) : void</text><!--class GameStartingHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="GameStartingHandler" style="stroke: #A80036; stroke-width: 1.5;" width="316" x="5245.5" y="1855"/><ellipse cx="5331.75" cy="1871" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5334.0938,1866.6719 L5334.2656,1866.75 C5334.4844,1866.4375 5334.6875,1866.3438 5334.9844,1866.3438 C5335.2813,1866.3438 5335.5625,1866.4844 5335.7188,1866.75 C5335.8125,1866.9063 5335.8281,1867.0313 5335.8281,1867.4688 L5335.8281,1868.8906 C5335.8281,1869.3125 5335.7969,1869.5 5335.6875,1869.6563 C5335.5156,1869.875 5335.25,1870.0156 5334.9844,1870.0156 C5334.7656,1870.0156 5334.5313,1869.9063 5334.3906,1869.7656 C5334.25,1869.6406 5334.2188,1869.5156 5334.1563,1869.1094 C5334.0625,1868.7031 5333.8906,1868.4844 5333.4063,1868.2031 C5332.9375,1867.9531 5332.3281,1867.7969 5331.75,1867.7969 C5330.0156,1867.7969 5328.7656,1869.1094 5328.7656,1870.8906 L5328.7656,1871.9844 C5328.7656,1873.6875 5330.0625,1874.7813 5332.1094,1874.7813 C5332.875,1874.7813 5333.5625,1874.6563 5333.9844,1874.3906 C5334.1719,1874.2969 5334.1719,1874.2969 5334.625,1873.8125 C5334.8125,1873.625 5335.0156,1873.5469 5335.2344,1873.5469 C5335.7031,1873.5469 5336.0938,1873.9375 5336.0938,1874.3906 C5336.0938,1874.7813 5335.7656,1875.2344 5335.1875,1875.6406 C5334.4375,1876.1875 5333.2813,1876.4844 5332.0625,1876.4844 C5329.1719,1876.4844 5327.0625,1874.5938 5327.0625,1872.0156 L5327.0625,1870.8906 C5327.0625,1868.1719 5329.0625,1866.0938 5331.6875,1866.0938 C5332.5625,1866.0938 5333.1563,1866.2344 5334.0938,1866.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="135" x="5352.25" y="1875.1543">GameStartingHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5246.5" x2="5560.5" y1="1887" y2="1887"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5246.5" x2="5560.5" y1="1895" y2="1895"/><ellipse cx="5256.5" cy="1906.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="5265.5" y="1909.2104">GameStartingHandler(StateType&amp; requestedState)</text><ellipse cx="5256.5" cy="1919.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="5265.5" y="1922.0151">~GameStartingHandler()</text><ellipse cx="5256.5" cy="1932.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5265.5" y="1934.8198">draw() : void</text><!--class Generator_id--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="Generator_id" style="stroke: #A80036; stroke-width: 1.5;" width="294" x="6907.5" y="155.5"/><ellipse cx="6922.5" cy="171.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6924.8438,167.1719 L6925.0156,167.25 C6925.2344,166.9375 6925.4375,166.8438 6925.7344,166.8438 C6926.0313,166.8438 6926.3125,166.9844 6926.4688,167.25 C6926.5625,167.4063 6926.5781,167.5313 6926.5781,167.9688 L6926.5781,169.3906 C6926.5781,169.8125 6926.5469,170 6926.4375,170.1563 C6926.2656,170.375 6926,170.5156 6925.7344,170.5156 C6925.5156,170.5156 6925.2813,170.4063 6925.1406,170.2656 C6925,170.1406 6924.9688,170.0156 6924.9063,169.6094 C6924.8125,169.2031 6924.6406,168.9844 6924.1563,168.7031 C6923.6875,168.4531 6923.0781,168.2969 6922.5,168.2969 C6920.7656,168.2969 6919.5156,169.6094 6919.5156,171.3906 L6919.5156,172.4844 C6919.5156,174.1875 6920.8125,175.2813 6922.8594,175.2813 C6923.625,175.2813 6924.3125,175.1563 6924.7344,174.8906 C6924.9219,174.7969 6924.9219,174.7969 6925.375,174.3125 C6925.5625,174.125 6925.7656,174.0469 6925.9844,174.0469 C6926.4531,174.0469 6926.8438,174.4375 6926.8438,174.8906 C6926.8438,175.2813 6926.5156,175.7344 6925.9375,176.1406 C6925.1875,176.6875 6924.0313,176.9844 6922.8125,176.9844 C6919.9219,176.9844 6917.8125,175.0938 6917.8125,172.5156 L6917.8125,171.3906 C6917.8125,168.6719 6919.8125,166.5938 6922.4375,166.5938 C6923.3125,166.5938 6923.9063,166.7344 6924.8438,167.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="81" x="6936.5" y="175.6543">Generator_id</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="179" x="7025.5" y="152.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="177" x="7026.5" y="164.6387">template&lt;typename Traits&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6908.5" x2="7200.5" y1="187.5" y2="187.5"/><ellipse cx="6918.5" cy="199.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="94" x="6927.5" y="201.7104">_lastid : static Id</text><line style="stroke: #000000; stroke-width: 1.0;" x1="6927.5" x2="7021.5" y1="203.7104" y2="203.7104"/><ellipse cx="6918.5" cy="212.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="6927.5" y="214.5151">Id : using</text><ellipse cx="6918.5" cy="225.0117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="6927.5" y="227.3198">traits : using</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6908.5" x2="7200.5" y1="233.9141" y2="233.9141"/><!--class Generator_type_id--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="176.0469" id="Generator_type_id" style="stroke: #A80036; stroke-width: 1.5;" width="409" x="6850" y="615.5"/><ellipse cx="6865" cy="631.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6867.3438,627.1719 L6867.5156,627.25 C6867.7344,626.9375 6867.9375,626.8438 6868.2344,626.8438 C6868.5313,626.8438 6868.8125,626.9844 6868.9688,627.25 C6869.0625,627.4063 6869.0781,627.5313 6869.0781,627.9688 L6869.0781,629.3906 C6869.0781,629.8125 6869.0469,630 6868.9375,630.1563 C6868.7656,630.375 6868.5,630.5156 6868.2344,630.5156 C6868.0156,630.5156 6867.7813,630.4063 6867.6406,630.2656 C6867.5,630.1406 6867.4688,630.0156 6867.4063,629.6094 C6867.3125,629.2031 6867.1406,628.9844 6866.6563,628.7031 C6866.1875,628.4531 6865.5781,628.2969 6865,628.2969 C6863.2656,628.2969 6862.0156,629.6094 6862.0156,631.3906 L6862.0156,632.4844 C6862.0156,634.1875 6863.3125,635.2813 6865.3594,635.2813 C6866.125,635.2813 6866.8125,635.1563 6867.2344,634.8906 C6867.4219,634.7969 6867.4219,634.7969 6867.875,634.3125 C6868.0625,634.125 6868.2656,634.0469 6868.4844,634.0469 C6868.9531,634.0469 6869.3438,634.4375 6869.3438,634.8906 C6869.3438,635.2813 6869.0156,635.7344 6868.4375,636.1406 C6867.6875,636.6875 6866.5313,636.9844 6865.3125,636.9844 C6862.4219,636.9844 6860.3125,635.0938 6860.3125,632.5156 L6860.3125,631.3906 C6860.3125,628.6719 6862.3125,626.5938 6864.9375,626.5938 C6865.8125,626.5938 6866.4063,626.7344 6867.3438,627.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114" x="6879" y="635.6543">Generator_type_id</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="261" x="7001" y="612.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="259" x="7002" y="624.6387">template&lt;typename T, typename Traits&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6851" x2="7258" y1="647.5" y2="647.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6858" y="656.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="87" x="6870" y="661.7104">_type : static Id</text><line style="stroke: #000000; stroke-width: 1.0;" x1="6870" x2="6957" y1="663.7104" y2="663.7104"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6858" y="669.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="129" x="6870" y="674.5151">_initialized : static bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="6870" x2="6999" y1="676.5151" y2="676.5151"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6858" y="682.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="6870" y="687.3198">Base : using</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6858" y="694.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="6870" y="700.1245">Id : using</text><ellipse cx="6861" cy="710.6211" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="6870" y="712.9292">this_type : using</text><ellipse cx="6861" cy="723.4258" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="6870" y="725.7339">type : using</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6851" x2="7258" y1="732.3281" y2="732.3281"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6858" y="741.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="6870" y="746.5386">Generator_type_id()</text><ellipse cx="6861" cy="757.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="6870" y="759.3433">operatorId() {query}</text><ellipse cx="6861" cy="769.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="60" x="6870" y="772.1479">ctype() : Id</text><line style="stroke: #000000; stroke-width: 1.0;" x1="6870" x2="6930" y1="774.1479" y2="774.1479"/><ellipse cx="6861" cy="782.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="61" x="6870" y="784.9526">make() : Id</text><line style="stroke: #000000; stroke-width: 1.0;" x1="6870" x2="6931" y1="786.9526" y2="786.9526"/><!--class Handler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="Handler" style="stroke: #A80036; stroke-width: 1.5;" width="722" x="5576.5" y="1082"/><ellipse cx="5908.75" cy="1098" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5911.0938,1093.6719 L5911.2656,1093.75 C5911.4844,1093.4375 5911.6875,1093.3438 5911.9844,1093.3438 C5912.2813,1093.3438 5912.5625,1093.4844 5912.7188,1093.75 C5912.8125,1093.9063 5912.8281,1094.0313 5912.8281,1094.4688 L5912.8281,1095.8906 C5912.8281,1096.3125 5912.7969,1096.5 5912.6875,1096.6563 C5912.5156,1096.875 5912.25,1097.0156 5911.9844,1097.0156 C5911.7656,1097.0156 5911.5313,1096.9063 5911.3906,1096.7656 C5911.25,1096.6406 5911.2188,1096.5156 5911.1563,1096.1094 C5911.0625,1095.7031 5910.8906,1095.4844 5910.4063,1095.2031 C5909.9375,1094.9531 5909.3281,1094.7969 5908.75,1094.7969 C5907.0156,1094.7969 5905.7656,1096.1094 5905.7656,1097.8906 L5905.7656,1098.9844 C5905.7656,1100.6875 5907.0625,1101.7813 5909.1094,1101.7813 C5909.875,1101.7813 5910.5625,1101.6563 5910.9844,1101.3906 C5911.1719,1101.2969 5911.1719,1101.2969 5911.625,1100.8125 C5911.8125,1100.625 5912.0156,1100.5469 5912.2344,1100.5469 C5912.7031,1100.5469 5913.0938,1100.9375 5913.0938,1101.3906 C5913.0938,1101.7813 5912.7656,1102.2344 5912.1875,1102.6406 C5911.4375,1103.1875 5910.2813,1103.4844 5909.0625,1103.4844 C5906.1719,1103.4844 5904.0625,1101.5938 5904.0625,1099.0156 L5904.0625,1097.8906 C5904.0625,1095.1719 5906.0625,1093.0938 5908.6875,1093.0938 C5909.5625,1093.0938 5910.1563,1093.2344 5911.0938,1093.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="5929.25" y="1102.1543">Handler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5577.5" x2="6297.5" y1="1114" y2="1114"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5584.5" y="1122.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="696" x="5596.5" y="1128.2104">_stateActions : std::unordered_map&lt;StateType, std::unique_ptr&lt;rtype::menu::GUI::MenuHandler&gt;, util::EnumClassHash&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5577.5" x2="6297.5" y1="1134.8047" y2="1134.8047"/><ellipse cx="5587.5" cy="1146.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="5596.5" y="1149.0151">Handler(StateType&amp; requestedState)</text><ellipse cx="5587.5" cy="1159.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="5596.5" y="1161.8198">getStateHandler(StateType state) : MenuHandler&amp;</text><!--class IMenuHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="73.6094" id="IMenuHandler" style="stroke: #A80036; stroke-width: 1.5;" width="120" x="6333.5" y="1088"/><ellipse cx="6348.95" cy="1104" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6350.5281,1105.8125 L6346.4813,1105.8125 L6346.0906,1106.7969 L6346.4813,1106.7969 C6346.9344,1106.7969 6347.075,1106.8281 6347.2469,1106.9531 C6347.4656,1107.125 6347.5906,1107.375 6347.5906,1107.6563 C6347.5906,1107.9375 6347.45,1108.2344 6347.1844,1108.375 C6347.0594,1108.4688 6346.8406,1108.5 6346.4813,1108.5 L6344.2156,1108.5 C6343.4656,1108.5 6343.0906,1108.2188 6343.0906,1107.6563 C6343.0906,1107.3594 6343.2469,1107.0781 6343.4969,1106.9219 C6343.6531,1106.8125 6343.8094,1106.7969 6344.2313,1106.7969 L6346.8719,1100.2813 L6345.7938,1100.2813 C6345.3563,1100.2813 6345.1844,1100.25 6345.0125,1100.1406 C6344.7938,1099.9688 6344.6531,1099.7188 6344.6531,1099.4375 C6344.6531,1099.1563 6344.8094,1098.875 6345.0594,1098.7031 C6345.2156,1098.6094 6345.3406,1098.5938 6345.7938,1098.5938 L6349.4656,1098.5938 L6352.8563,1106.7969 C6353.325,1106.7969 6353.4813,1106.8281 6353.6531,1106.9688 C6353.8719,1107.125 6354.0125,1107.375 6354.0125,1107.6563 C6354.0125,1107.9375 6353.8563,1108.2344 6353.6063,1108.375 C6353.4656,1108.4688 6353.2469,1108.5 6352.8875,1108.5 L6350.5281,1108.5 C6350.1063,1108.5 6349.9031,1108.4531 6349.7625,1108.3281 C6349.5438,1108.1719 6349.4031,1107.9219 6349.4031,1107.6563 C6349.4031,1107.3594 6349.5594,1107.0781 6349.8094,1106.9219 C6349.9656,1106.8125 6350.075,1106.7969 6350.5281,1106.7969 L6350.9188,1106.7969 Z M6349.825,1104.1094 L6348.4969,1100.8438 L6347.1531,1104.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="87" x="6363.05" y="1108.1543">IMenuHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6334.5" x2="6452.5" y1="1120" y2="1120"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6334.5" x2="6452.5" y1="1128" y2="1128"/><ellipse cx="6344.5" cy="1139.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="6353.5" y="1142.2104">~IMenuHandler()</text><ellipse cx="6344.5" cy="1152.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="6353.5" y="1155.0151">draw() : void</text><!--class IOError--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="IOError" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="558.5" y="1075.5"/><ellipse cx="674.75" cy="1091.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M677.0938,1087.1719 L677.2656,1087.25 C677.4844,1086.9375 677.6875,1086.8438 677.9844,1086.8438 C678.2813,1086.8438 678.5625,1086.9844 678.7188,1087.25 C678.8125,1087.4063 678.8281,1087.5313 678.8281,1087.9688 L678.8281,1089.3906 C678.8281,1089.8125 678.7969,1090 678.6875,1090.1563 C678.5156,1090.375 678.25,1090.5156 677.9844,1090.5156 C677.7656,1090.5156 677.5313,1090.4063 677.3906,1090.2656 C677.25,1090.1406 677.2188,1090.0156 677.1563,1089.6094 C677.0625,1089.2031 676.8906,1088.9844 676.4063,1088.7031 C675.9375,1088.4531 675.3281,1088.2969 674.75,1088.2969 C673.0156,1088.2969 671.7656,1089.6094 671.7656,1091.3906 L671.7656,1092.4844 C671.7656,1094.1875 673.0625,1095.2813 675.1094,1095.2813 C675.875,1095.2813 676.5625,1095.1563 676.9844,1094.8906 C677.1719,1094.7969 677.1719,1094.7969 677.625,1094.3125 C677.8125,1094.125 678.0156,1094.0469 678.2344,1094.0469 C678.7031,1094.0469 679.0938,1094.4375 679.0938,1094.8906 C679.0938,1095.2813 678.7656,1095.7344 678.1875,1096.1406 C677.4375,1096.6875 676.2813,1096.9844 675.0625,1096.9844 C672.1719,1096.9844 670.0625,1095.0938 670.0625,1092.5156 L670.0625,1091.3906 C670.0625,1088.6719 672.0625,1086.5938 674.6875,1086.5938 C675.5625,1086.5938 676.1563,1086.7344 677.0938,1087.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="695.25" y="1095.6543">IOError</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="559.5" x2="841.5" y1="1107.5" y2="1107.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="559.5" x2="841.5" y1="1115.5" y2="1115.5"/><ellipse cx="569.5" cy="1127.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="578.5" y="1129.7104">IOError(const std::string&amp; what)</text><ellipse cx="569.5" cy="1140.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="578.5" y="1142.5151">IOError(const IOError&amp; ioError)</text><ellipse cx="569.5" cy="1153.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="578.5" y="1155.3198">~IOError()</text><ellipse cx="569.5" cy="1165.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="578.5" y="1168.1245">operator=(const IOError&amp; ioError) : IOError&amp;</text><!--class ImplDllLoader--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="ImplDllLoader" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="878" y="1082"/><ellipse cx="1013.75" cy="1098" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1016.0938,1093.6719 L1016.2656,1093.75 C1016.4844,1093.4375 1016.6875,1093.3438 1016.9844,1093.3438 C1017.2813,1093.3438 1017.5625,1093.4844 1017.7188,1093.75 C1017.8125,1093.9063 1017.8281,1094.0313 1017.8281,1094.4688 L1017.8281,1095.8906 C1017.8281,1096.3125 1017.7969,1096.5 1017.6875,1096.6563 C1017.5156,1096.875 1017.25,1097.0156 1016.9844,1097.0156 C1016.7656,1097.0156 1016.5313,1096.9063 1016.3906,1096.7656 C1016.25,1096.6406 1016.2188,1096.5156 1016.1563,1096.1094 C1016.0625,1095.7031 1015.8906,1095.4844 1015.4063,1095.2031 C1014.9375,1094.9531 1014.3281,1094.7969 1013.75,1094.7969 C1012.0156,1094.7969 1010.7656,1096.1094 1010.7656,1097.8906 L1010.7656,1098.9844 C1010.7656,1100.6875 1012.0625,1101.7813 1014.1094,1101.7813 C1014.875,1101.7813 1015.5625,1101.6563 1015.9844,1101.3906 C1016.1719,1101.2969 1016.1719,1101.2969 1016.625,1100.8125 C1016.8125,1100.625 1017.0156,1100.5469 1017.2344,1100.5469 C1017.7031,1100.5469 1018.0938,1100.9375 1018.0938,1101.3906 C1018.0938,1101.7813 1017.7656,1102.2344 1017.1875,1102.6406 C1016.4375,1103.1875 1015.2813,1103.4844 1014.0625,1103.4844 C1011.1719,1103.4844 1009.0625,1101.5938 1009.0625,1099.0156 L1009.0625,1097.8906 C1009.0625,1095.1719 1011.0625,1093.0938 1013.6875,1093.0938 C1014.5625,1093.0938 1015.1563,1093.2344 1016.0938,1093.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="1034.25" y="1102.1543">ImplDllLoader</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="879" x2="1240" y1="1114" y2="1114"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="879" x2="1240" y1="1122" y2="1122"/><ellipse cx="889" cy="1133.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="898" y="1136.2104">loadLibrary(std::string const&amp; name) : Handle</text><ellipse cx="889" cy="1146.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="898" y="1149.0151">loadSymbol(Handle, std::string const&amp; name) : detail::Sym</text><ellipse cx="889" cy="1159.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="898" y="1161.8198">closeLibrary(detail:: Handle) : void</text><!--class InfiniteTask--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="163.2422" id="InfiniteTask" style="stroke: #A80036; stroke-width: 1.5;" width="358" x="1276.5" y="1043.5"/><ellipse cx="1415.75" cy="1059.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1418.0938,1055.1719 L1418.2656,1055.25 C1418.4844,1054.9375 1418.6875,1054.8438 1418.9844,1054.8438 C1419.2813,1054.8438 1419.5625,1054.9844 1419.7188,1055.25 C1419.8125,1055.4063 1419.8281,1055.5313 1419.8281,1055.9688 L1419.8281,1057.3906 C1419.8281,1057.8125 1419.7969,1058 1419.6875,1058.1563 C1419.5156,1058.375 1419.25,1058.5156 1418.9844,1058.5156 C1418.7656,1058.5156 1418.5313,1058.4063 1418.3906,1058.2656 C1418.25,1058.1406 1418.2188,1058.0156 1418.1563,1057.6094 C1418.0625,1057.2031 1417.8906,1056.9844 1417.4063,1056.7031 C1416.9375,1056.4531 1416.3281,1056.2969 1415.75,1056.2969 C1414.0156,1056.2969 1412.7656,1057.6094 1412.7656,1059.3906 L1412.7656,1060.4844 C1412.7656,1062.1875 1414.0625,1063.2813 1416.1094,1063.2813 C1416.875,1063.2813 1417.5625,1063.1563 1417.9844,1062.8906 C1418.1719,1062.7969 1418.1719,1062.7969 1418.625,1062.3125 C1418.8125,1062.125 1419.0156,1062.0469 1419.2344,1062.0469 C1419.7031,1062.0469 1420.0938,1062.4375 1420.0938,1062.8906 C1420.0938,1063.2813 1419.7656,1063.7344 1419.1875,1064.1406 C1418.4375,1064.6875 1417.2813,1064.9844 1416.0625,1064.9844 C1413.1719,1064.9844 1411.0625,1063.0938 1411.0625,1060.5156 L1411.0625,1059.3906 C1411.0625,1056.6719 1413.0625,1054.5938 1415.6875,1054.5938 C1416.5625,1054.5938 1417.1563,1054.7344 1418.0938,1055.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="1436.25" y="1063.6543">InfiniteTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1277.5" x2="1633.5" y1="1075.5" y2="1075.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1277.5" x2="1633.5" y1="1083.5" y2="1083.5"/><ellipse cx="1287.5" cy="1095.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1296.5" y="1097.7104">InfiniteTask()</text><ellipse cx="1287.5" cy="1108.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="1296.5" y="1110.5151">InfiniteTask(const InfiniteTask&amp; infiniteTask)</text><ellipse cx="1287.5" cy="1121.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="1296.5" y="1123.3198">~InfiniteTask()</text><ellipse cx="1287.5" cy="1133.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="1296.5" y="1136.1245">operator=(const InfiniteTask&amp; infiniteTask) : InfiniteTask&amp;</text><ellipse cx="1287.5" cy="1146.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1296.5" y="1148.9292">available() : bool {query}</text><ellipse cx="1287.5" cy="1159.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="1296.5" y="1161.7339">service() : rnetwork::services::IService&amp; {query}</text><ellipse cx="1287.5" cy="1172.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1296.5" y="1174.5386">operator()() : void</text><ellipse cx="1287.5" cy="1185.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1296.5" y="1187.3433">registerService() : void {query}</text><ellipse cx="1287.5" cy="1197.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="1296.5" y="1200.1479">unregisterService() : void {query}</text><!--class InvalidPacket--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="InvalidPacket" style="stroke: #A80036; stroke-width: 1.5;" width="346" x="1669.5" y="1075.5"/><ellipse cx="1797.25" cy="1091.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1799.5938,1087.1719 L1799.7656,1087.25 C1799.9844,1086.9375 1800.1875,1086.8438 1800.4844,1086.8438 C1800.7813,1086.8438 1801.0625,1086.9844 1801.2188,1087.25 C1801.3125,1087.4063 1801.3281,1087.5313 1801.3281,1087.9688 L1801.3281,1089.3906 C1801.3281,1089.8125 1801.2969,1090 1801.1875,1090.1563 C1801.0156,1090.375 1800.75,1090.5156 1800.4844,1090.5156 C1800.2656,1090.5156 1800.0313,1090.4063 1799.8906,1090.2656 C1799.75,1090.1406 1799.7188,1090.0156 1799.6563,1089.6094 C1799.5625,1089.2031 1799.3906,1088.9844 1798.9063,1088.7031 C1798.4375,1088.4531 1797.8281,1088.2969 1797.25,1088.2969 C1795.5156,1088.2969 1794.2656,1089.6094 1794.2656,1091.3906 L1794.2656,1092.4844 C1794.2656,1094.1875 1795.5625,1095.2813 1797.6094,1095.2813 C1798.375,1095.2813 1799.0625,1095.1563 1799.4844,1094.8906 C1799.6719,1094.7969 1799.6719,1094.7969 1800.125,1094.3125 C1800.3125,1094.125 1800.5156,1094.0469 1800.7344,1094.0469 C1801.2031,1094.0469 1801.5938,1094.4375 1801.5938,1094.8906 C1801.5938,1095.2813 1801.2656,1095.7344 1800.6875,1096.1406 C1799.9375,1096.6875 1798.7813,1096.9844 1797.5625,1096.9844 C1794.6719,1096.9844 1792.5625,1095.0938 1792.5625,1092.5156 L1792.5625,1091.3906 C1792.5625,1088.6719 1794.5625,1086.5938 1797.1875,1086.5938 C1798.0625,1086.5938 1798.6563,1086.7344 1799.5938,1087.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="1817.75" y="1095.6543">InvalidPacket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1670.5" x2="2014.5" y1="1107.5" y2="1107.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1670.5" x2="2014.5" y1="1115.5" y2="1115.5"/><ellipse cx="1680.5" cy="1127.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1689.5" y="1129.7104">InvalidPacket(const std::string&amp; what)</text><ellipse cx="1680.5" cy="1140.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="1689.5" y="1142.5151">InvalidPacket(const InvalidPacket&amp; packet)</text><ellipse cx="1680.5" cy="1153.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="1689.5" y="1155.3198">~InvalidPacket()</text><ellipse cx="1680.5" cy="1165.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="1689.5" y="1168.1245">operator=(const InvalidPacket&amp; packet) : InvalidPacket&amp;</text><!--class InvalidSocket--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="InvalidSocket" style="stroke: #A80036; stroke-width: 1.5;" width="385" x="2051" y="1075.5"/><ellipse cx="2198.25" cy="1091.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2200.5938,1087.1719 L2200.7656,1087.25 C2200.9844,1086.9375 2201.1875,1086.8438 2201.4844,1086.8438 C2201.7813,1086.8438 2202.0625,1086.9844 2202.2188,1087.25 C2202.3125,1087.4063 2202.3281,1087.5313 2202.3281,1087.9688 L2202.3281,1089.3906 C2202.3281,1089.8125 2202.2969,1090 2202.1875,1090.1563 C2202.0156,1090.375 2201.75,1090.5156 2201.4844,1090.5156 C2201.2656,1090.5156 2201.0313,1090.4063 2200.8906,1090.2656 C2200.75,1090.1406 2200.7188,1090.0156 2200.6563,1089.6094 C2200.5625,1089.2031 2200.3906,1088.9844 2199.9063,1088.7031 C2199.4375,1088.4531 2198.8281,1088.2969 2198.25,1088.2969 C2196.5156,1088.2969 2195.2656,1089.6094 2195.2656,1091.3906 L2195.2656,1092.4844 C2195.2656,1094.1875 2196.5625,1095.2813 2198.6094,1095.2813 C2199.375,1095.2813 2200.0625,1095.1563 2200.4844,1094.8906 C2200.6719,1094.7969 2200.6719,1094.7969 2201.125,1094.3125 C2201.3125,1094.125 2201.5156,1094.0469 2201.7344,1094.0469 C2202.2031,1094.0469 2202.5938,1094.4375 2202.5938,1094.8906 C2202.5938,1095.2813 2202.2656,1095.7344 2201.6875,1096.1406 C2200.9375,1096.6875 2199.7813,1096.9844 2198.5625,1096.9844 C2195.6719,1096.9844 2193.5625,1095.0938 2193.5625,1092.5156 L2193.5625,1091.3906 C2193.5625,1088.6719 2195.5625,1086.5938 2198.1875,1086.5938 C2199.0625,1086.5938 2199.6563,1086.7344 2200.5938,1087.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="2218.75" y="1095.6543">InvalidSocket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2052" x2="2435" y1="1107.5" y2="1107.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2052" x2="2435" y1="1115.5" y2="1115.5"/><ellipse cx="2062" cy="1127.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2071" y="1129.7104">InvalidSocket(const std::string&amp; what)</text><ellipse cx="2062" cy="1140.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="2071" y="1142.5151">InvalidSocket(const InvalidSocket&amp; invalidSocket)</text><ellipse cx="2062" cy="1153.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="2071" y="1155.3198">~InvalidSocket()</text><ellipse cx="2062" cy="1165.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="2071" y="1168.1245">operator=(const InvalidSocket&amp; invalidSocket) : InvalidSocket&amp;</text><!--class LittleEnemy--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="73.6094" id="LittleEnemy" style="stroke: #A80036; stroke-width: 1.5;" width="334" x="2471.5" y="1088"/><ellipse cx="2598.75" cy="1104" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2601.0938,1099.6719 L2601.2656,1099.75 C2601.4844,1099.4375 2601.6875,1099.3438 2601.9844,1099.3438 C2602.2813,1099.3438 2602.5625,1099.4844 2602.7188,1099.75 C2602.8125,1099.9063 2602.8281,1100.0313 2602.8281,1100.4688 L2602.8281,1101.8906 C2602.8281,1102.3125 2602.7969,1102.5 2602.6875,1102.6563 C2602.5156,1102.875 2602.25,1103.0156 2601.9844,1103.0156 C2601.7656,1103.0156 2601.5313,1102.9063 2601.3906,1102.7656 C2601.25,1102.6406 2601.2188,1102.5156 2601.1563,1102.1094 C2601.0625,1101.7031 2600.8906,1101.4844 2600.4063,1101.2031 C2599.9375,1100.9531 2599.3281,1100.7969 2598.75,1100.7969 C2597.0156,1100.7969 2595.7656,1102.1094 2595.7656,1103.8906 L2595.7656,1104.9844 C2595.7656,1106.6875 2597.0625,1107.7813 2599.1094,1107.7813 C2599.875,1107.7813 2600.5625,1107.6563 2600.9844,1107.3906 C2601.1719,1107.2969 2601.1719,1107.2969 2601.625,1106.8125 C2601.8125,1106.625 2602.0156,1106.5469 2602.2344,1106.5469 C2602.7031,1106.5469 2603.0938,1106.9375 2603.0938,1107.3906 C2603.0938,1107.7813 2602.7656,1108.2344 2602.1875,1108.6406 C2601.4375,1109.1875 2600.2813,1109.4844 2599.0625,1109.4844 C2596.1719,1109.4844 2594.0625,1107.5938 2594.0625,1105.0156 L2594.0625,1103.8906 C2594.0625,1101.1719 2596.0625,1099.0938 2598.6875,1099.0938 C2599.5625,1099.0938 2600.1563,1099.2344 2601.0938,1099.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="2619.25" y="1108.1543">LittleEnemy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2472.5" x2="2804.5" y1="1120" y2="1120"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2472.5" x2="2804.5" y1="1128" y2="1128"/><ellipse cx="2482.5" cy="1139.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="2491.5" y="1142.2104">~LittleEnemy()</text><ellipse cx="2482.5" cy="1152.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="2491.5" y="1155.0151">spawn(ecs::Manager&amp; manager) : ecs::Entity {query}</text><!--class MainMenuHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="MainMenuHandler" style="stroke: #A80036; stroke-width: 1.5;" width="293" x="5597" y="1855"/><ellipse cx="5683.25" cy="1871" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5685.5938,1866.6719 L5685.7656,1866.75 C5685.9844,1866.4375 5686.1875,1866.3438 5686.4844,1866.3438 C5686.7813,1866.3438 5687.0625,1866.4844 5687.2188,1866.75 C5687.3125,1866.9063 5687.3281,1867.0313 5687.3281,1867.4688 L5687.3281,1868.8906 C5687.3281,1869.3125 5687.2969,1869.5 5687.1875,1869.6563 C5687.0156,1869.875 5686.75,1870.0156 5686.4844,1870.0156 C5686.2656,1870.0156 5686.0313,1869.9063 5685.8906,1869.7656 C5685.75,1869.6406 5685.7188,1869.5156 5685.6563,1869.1094 C5685.5625,1868.7031 5685.3906,1868.4844 5684.9063,1868.2031 C5684.4375,1867.9531 5683.8281,1867.7969 5683.25,1867.7969 C5681.5156,1867.7969 5680.2656,1869.1094 5680.2656,1870.8906 L5680.2656,1871.9844 C5680.2656,1873.6875 5681.5625,1874.7813 5683.6094,1874.7813 C5684.375,1874.7813 5685.0625,1874.6563 5685.4844,1874.3906 C5685.6719,1874.2969 5685.6719,1874.2969 5686.125,1873.8125 C5686.3125,1873.625 5686.5156,1873.5469 5686.7344,1873.5469 C5687.2031,1873.5469 5687.5938,1873.9375 5687.5938,1874.3906 C5687.5938,1874.7813 5687.2656,1875.2344 5686.6875,1875.6406 C5685.9375,1876.1875 5684.7813,1876.4844 5683.5625,1876.4844 C5680.6719,1876.4844 5678.5625,1874.5938 5678.5625,1872.0156 L5678.5625,1870.8906 C5678.5625,1868.1719 5680.5625,1866.0938 5683.1875,1866.0938 C5684.0625,1866.0938 5684.6563,1866.2344 5685.5938,1866.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="112" x="5703.75" y="1875.1543">MainMenuHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5598" x2="5889" y1="1887" y2="1887"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5598" x2="5889" y1="1895" y2="1895"/><ellipse cx="5608" cy="1906.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="5617" y="1909.2104">MainMenuHandler(StateType&amp; requestedState)</text><ellipse cx="5608" cy="1919.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="5617" y="1922.0151">~MainMenuHandler()</text><ellipse cx="5608" cy="1932.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5617" y="1934.8198">draw() : void</text><!--class Menu--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="112.0234" id="Menu" style="stroke: #A80036; stroke-width: 1.5;" width="221" x="5234" y="647.5"/><ellipse cx="5323.25" cy="663.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5325.5938,659.1719 L5325.7656,659.25 C5325.9844,658.9375 5326.1875,658.8438 5326.4844,658.8438 C5326.7813,658.8438 5327.0625,658.9844 5327.2188,659.25 C5327.3125,659.4063 5327.3281,659.5313 5327.3281,659.9688 L5327.3281,661.3906 C5327.3281,661.8125 5327.2969,662 5327.1875,662.1563 C5327.0156,662.375 5326.75,662.5156 5326.4844,662.5156 C5326.2656,662.5156 5326.0313,662.4063 5325.8906,662.2656 C5325.75,662.1406 5325.7188,662.0156 5325.6563,661.6094 C5325.5625,661.2031 5325.3906,660.9844 5324.9063,660.7031 C5324.4375,660.4531 5323.8281,660.2969 5323.25,660.2969 C5321.5156,660.2969 5320.2656,661.6094 5320.2656,663.3906 L5320.2656,664.4844 C5320.2656,666.1875 5321.5625,667.2813 5323.6094,667.2813 C5324.375,667.2813 5325.0625,667.1563 5325.4844,666.8906 C5325.6719,666.7969 5325.6719,666.7969 5326.125,666.3125 C5326.3125,666.125 5326.5156,666.0469 5326.7344,666.0469 C5327.2031,666.0469 5327.5938,666.4375 5327.5938,666.8906 C5327.5938,667.2813 5327.2656,667.7344 5326.6875,668.1406 C5325.9375,668.6875 5324.7813,668.9844 5323.5625,668.9844 C5320.6719,668.9844 5318.5625,667.0938 5318.5625,664.5156 L5318.5625,663.3906 C5318.5625,660.6719 5320.5625,658.5938 5323.1875,658.5938 C5324.0625,658.5938 5324.6563,658.7344 5325.5938,659.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="5343.75" y="667.6543">Menu</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5235" x2="5454" y1="679.5" y2="679.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5242" y="688.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="5254" y="693.7104">_machine : menu::FSM::machine</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5242" y="701.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="5254" y="706.5151">_handler : menu::GUI::Handler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5235" x2="5454" y1="713.1094" y2="713.1094"/><ellipse cx="5245" cy="725.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="5254" y="727.3198">Menu(sf::RenderWindow&amp; window)</text><ellipse cx="5245" cy="737.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="5254" y="740.1245">~Menu()</text><ellipse cx="5245" cy="750.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="5254" y="752.9292">run(sf::Time&amp; time) : void</text><!--class MenuHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="MenuHandler" style="stroke: #A80036; stroke-width: 1.5;" width="267" x="6176" y="1465"/><ellipse cx="6263.75" cy="1481" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6265.3281,1482.8125 L6261.2813,1482.8125 L6260.8906,1483.7969 L6261.2813,1483.7969 C6261.7344,1483.7969 6261.875,1483.8281 6262.0469,1483.9531 C6262.2656,1484.125 6262.3906,1484.375 6262.3906,1484.6563 C6262.3906,1484.9375 6262.25,1485.2344 6261.9844,1485.375 C6261.8594,1485.4688 6261.6406,1485.5 6261.2813,1485.5 L6259.0156,1485.5 C6258.2656,1485.5 6257.8906,1485.2188 6257.8906,1484.6563 C6257.8906,1484.3594 6258.0469,1484.0781 6258.2969,1483.9219 C6258.4531,1483.8125 6258.6094,1483.7969 6259.0313,1483.7969 L6261.6719,1477.2813 L6260.5938,1477.2813 C6260.1563,1477.2813 6259.9844,1477.25 6259.8125,1477.1406 C6259.5938,1476.9688 6259.4531,1476.7188 6259.4531,1476.4375 C6259.4531,1476.1563 6259.6094,1475.875 6259.8594,1475.7031 C6260.0156,1475.6094 6260.1406,1475.5938 6260.5938,1475.5938 L6264.2656,1475.5938 L6267.6563,1483.7969 C6268.125,1483.7969 6268.2813,1483.8281 6268.4531,1483.9688 C6268.6719,1484.125 6268.8125,1484.375 6268.8125,1484.6563 C6268.8125,1484.9375 6268.6563,1485.2344 6268.4063,1485.375 C6268.2656,1485.4688 6268.0469,1485.5 6267.6875,1485.5 L6265.3281,1485.5 C6264.9063,1485.5 6264.7031,1485.4531 6264.5625,1485.3281 C6264.3438,1485.1719 6264.2031,1484.9219 6264.2031,1484.6563 C6264.2031,1484.3594 6264.3594,1484.0781 6264.6094,1483.9219 C6264.7656,1483.8125 6264.875,1483.7969 6265.3281,1483.7969 L6265.7188,1483.7969 Z M6264.625,1481.1094 L6263.2969,1477.8438 L6261.9531,1481.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="83" x="6284.25" y="1485.1543">MenuHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6177" x2="6442" y1="1497" y2="1497"/><polygon fill="none" points="6187,1503.9023,6191,1507.9023,6187,1511.9023,6183,1507.9023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="6196" y="1511.2104">_requestedState : StateType&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6177" x2="6442" y1="1517.8047" y2="1517.8047"/><ellipse cx="6187" cy="1529.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="6196" y="1532.0151">MenuHandler(StateType&amp; requestedState)</text><ellipse cx="6187" cy="1542.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="6196" y="1544.8198">~MenuHandler()</text><ellipse cx="6187" cy="1555.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="72" x="6196" y="1557.6245">draw() : void</text><!--class MultiplayerLobbiesListingHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="MultiplayerLobbiesListingHandler" style="stroke: #A80036; stroke-width: 1.5;" width="379" x="5925" y="1848.5"/><ellipse cx="6008.25" cy="1864.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6010.5938,1860.1719 L6010.7656,1860.25 C6010.9844,1859.9375 6011.1875,1859.8438 6011.4844,1859.8438 C6011.7813,1859.8438 6012.0625,1859.9844 6012.2188,1860.25 C6012.3125,1860.4063 6012.3281,1860.5313 6012.3281,1860.9688 L6012.3281,1862.3906 C6012.3281,1862.8125 6012.2969,1863 6012.1875,1863.1563 C6012.0156,1863.375 6011.75,1863.5156 6011.4844,1863.5156 C6011.2656,1863.5156 6011.0313,1863.4063 6010.8906,1863.2656 C6010.75,1863.1406 6010.7188,1863.0156 6010.6563,1862.6094 C6010.5625,1862.2031 6010.3906,1861.9844 6009.9063,1861.7031 C6009.4375,1861.4531 6008.8281,1861.2969 6008.25,1861.2969 C6006.5156,1861.2969 6005.2656,1862.6094 6005.2656,1864.3906 L6005.2656,1865.4844 C6005.2656,1867.1875 6006.5625,1868.2813 6008.6094,1868.2813 C6009.375,1868.2813 6010.0625,1868.1563 6010.4844,1867.8906 C6010.6719,1867.7969 6010.6719,1867.7969 6011.125,1867.3125 C6011.3125,1867.125 6011.5156,1867.0469 6011.7344,1867.0469 C6012.2031,1867.0469 6012.5938,1867.4375 6012.5938,1867.8906 C6012.5938,1868.2813 6012.2656,1868.7344 6011.6875,1869.1406 C6010.9375,1869.6875 6009.7813,1869.9844 6008.5625,1869.9844 C6005.6719,1869.9844 6003.5625,1868.0938 6003.5625,1865.5156 L6003.5625,1864.3906 C6003.5625,1861.6719 6005.5625,1859.5938 6008.1875,1859.5938 C6009.0625,1859.5938 6009.6563,1859.7344 6010.5938,1860.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="204" x="6028.75" y="1868.6543">MultiplayerLobbiesListingHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5926" x2="6303" y1="1880.5" y2="1880.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5933" y="1889.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="5945" y="1894.7104">_selectedItem : int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5926" x2="6303" y1="1901.3047" y2="1901.3047"/><ellipse cx="5936" cy="1913.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353" x="5945" y="1915.5151">MultiplayerLobbiesListingHandler(StateType&amp; requestedState)</text><ellipse cx="5936" cy="1926.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="5945" y="1928.3198">~MultiplayerLobbiesListingHandler()</text><ellipse cx="5936" cy="1938.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="5945" y="1941.1245">draw() : void</text><!--class MultiplayerLobbyHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="112.0234" id="MultiplayerLobbyHandler" style="stroke: #A80036; stroke-width: 1.5;" width="331" x="6339" y="1842"/><ellipse cx="6424.25" cy="1858" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6426.5938,1853.6719 L6426.7656,1853.75 C6426.9844,1853.4375 6427.1875,1853.3438 6427.4844,1853.3438 C6427.7813,1853.3438 6428.0625,1853.4844 6428.2188,1853.75 C6428.3125,1853.9063 6428.3281,1854.0313 6428.3281,1854.4688 L6428.3281,1855.8906 C6428.3281,1856.3125 6428.2969,1856.5 6428.1875,1856.6563 C6428.0156,1856.875 6427.75,1857.0156 6427.4844,1857.0156 C6427.2656,1857.0156 6427.0313,1856.9063 6426.8906,1856.7656 C6426.75,1856.6406 6426.7188,1856.5156 6426.6563,1856.1094 C6426.5625,1855.7031 6426.3906,1855.4844 6425.9063,1855.2031 C6425.4375,1854.9531 6424.8281,1854.7969 6424.25,1854.7969 C6422.5156,1854.7969 6421.2656,1856.1094 6421.2656,1857.8906 L6421.2656,1858.9844 C6421.2656,1860.6875 6422.5625,1861.7813 6424.6094,1861.7813 C6425.375,1861.7813 6426.0625,1861.6563 6426.4844,1861.3906 C6426.6719,1861.2969 6426.6719,1861.2969 6427.125,1860.8125 C6427.3125,1860.625 6427.5156,1860.5469 6427.7344,1860.5469 C6428.2031,1860.5469 6428.5938,1860.9375 6428.5938,1861.3906 C6428.5938,1861.7813 6428.2656,1862.2344 6427.6875,1862.6406 C6426.9375,1863.1875 6425.7813,1863.4844 6424.5625,1863.4844 C6421.6719,1863.4844 6419.5625,1861.5938 6419.5625,1859.0156 L6419.5625,1857.8906 C6419.5625,1855.1719 6421.5625,1853.0938 6424.1875,1853.0938 C6425.0625,1853.0938 6425.6563,1853.2344 6426.5938,1853.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="6444.75" y="1862.1543">MultiplayerLobbyHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6340" x2="6669" y1="1874" y2="1874"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6340" x2="6669" y1="1882" y2="1882"/><ellipse cx="6350" cy="1893.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="6359" y="1896.2104">MultiplayerLobbyHandler(StateType&amp; requestedState)</text><ellipse cx="6350" cy="1906.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="6359" y="1909.0151">~MultiplayerLobbyHandler()</text><ellipse cx="6350" cy="1919.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="6359" y="1921.8198">draw() : void</text><ellipse cx="6350" cy="1932.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="6359" y="1934.6245">renderEnemies() : void</text><ellipse cx="6350" cy="1945.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="6359" y="1947.4292">renderPlayers() : void</text><!--class MultiplayerLobbyHandler::Enemy--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="73.6094" id="MultiplayerLobbyHandler::Enemy" style="stroke: #A80036; stroke-width: 1.5;" width="233" x="325" y="1477.5"/><ellipse cx="340" cy="1493.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M342.3438,1489.1719 L342.5156,1489.25 C342.7344,1488.9375 342.9375,1488.8438 343.2344,1488.8438 C343.5313,1488.8438 343.8125,1488.9844 343.9688,1489.25 C344.0625,1489.4063 344.0781,1489.5313 344.0781,1489.9688 L344.0781,1491.3906 C344.0781,1491.8125 344.0469,1492 343.9375,1492.1563 C343.7656,1492.375 343.5,1492.5156 343.2344,1492.5156 C343.0156,1492.5156 342.7813,1492.4063 342.6406,1492.2656 C342.5,1492.1406 342.4688,1492.0156 342.4063,1491.6094 C342.3125,1491.2031 342.1406,1490.9844 341.6563,1490.7031 C341.1875,1490.4531 340.5781,1490.2969 340,1490.2969 C338.2656,1490.2969 337.0156,1491.6094 337.0156,1493.3906 L337.0156,1494.4844 C337.0156,1496.1875 338.3125,1497.2813 340.3594,1497.2813 C341.125,1497.2813 341.8125,1497.1563 342.2344,1496.8906 C342.4219,1496.7969 342.4219,1496.7969 342.875,1496.3125 C343.0625,1496.125 343.2656,1496.0469 343.4844,1496.0469 C343.9531,1496.0469 344.3438,1496.4375 344.3438,1496.8906 C344.3438,1497.2813 344.0156,1497.7344 343.4375,1498.1406 C342.6875,1498.6875 341.5313,1498.9844 340.3125,1498.9844 C337.4219,1498.9844 335.3125,1497.0938 335.3125,1494.5156 L335.3125,1493.3906 C335.3125,1490.6719 337.3125,1488.5938 339.9375,1488.5938 C340.8125,1488.5938 341.4063,1488.7344 342.3438,1489.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="201" x="354" y="1497.6543">MultiplayerLobbyHandler::Enemy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="326" x2="557" y1="1509.5" y2="1509.5"/><ellipse cx="336" cy="1521.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="345" y="1523.7104">enabled : bool</text><ellipse cx="336" cy="1534.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="345" y="1536.5151">name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="326" x2="557" y1="1543.1094" y2="1543.1094"/><!--class MultiplayerLobbyHandler::Player--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="60.8047" id="MultiplayerLobbyHandler::Player" style="stroke: #A80036; stroke-width: 1.5;" width="230" x="593.5" y="1484"/><ellipse cx="608.5" cy="1500" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M610.8438,1495.6719 L611.0156,1495.75 C611.2344,1495.4375 611.4375,1495.3438 611.7344,1495.3438 C612.0313,1495.3438 612.3125,1495.4844 612.4688,1495.75 C612.5625,1495.9063 612.5781,1496.0313 612.5781,1496.4688 L612.5781,1497.8906 C612.5781,1498.3125 612.5469,1498.5 612.4375,1498.6563 C612.2656,1498.875 612,1499.0156 611.7344,1499.0156 C611.5156,1499.0156 611.2813,1498.9063 611.1406,1498.7656 C611,1498.6406 610.9688,1498.5156 610.9063,1498.1094 C610.8125,1497.7031 610.6406,1497.4844 610.1563,1497.2031 C609.6875,1496.9531 609.0781,1496.7969 608.5,1496.7969 C606.7656,1496.7969 605.5156,1498.1094 605.5156,1499.8906 L605.5156,1500.9844 C605.5156,1502.6875 606.8125,1503.7813 608.8594,1503.7813 C609.625,1503.7813 610.3125,1503.6563 610.7344,1503.3906 C610.9219,1503.2969 610.9219,1503.2969 611.375,1502.8125 C611.5625,1502.625 611.7656,1502.5469 611.9844,1502.5469 C612.4531,1502.5469 612.8438,1502.9375 612.8438,1503.3906 C612.8438,1503.7813 612.5156,1504.2344 611.9375,1504.6406 C611.1875,1505.1875 610.0313,1505.4844 608.8125,1505.4844 C605.9219,1505.4844 603.8125,1503.5938 603.8125,1501.0156 L603.8125,1499.8906 C603.8125,1497.1719 605.8125,1495.0938 608.4375,1495.0938 C609.3125,1495.0938 609.9063,1495.2344 610.8438,1495.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="198" x="622.5" y="1504.1543">MultiplayerLobbyHandler::Player</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="594.5" x2="822.5" y1="1516" y2="1516"/><ellipse cx="604.5" cy="1527.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="613.5" y="1530.2104">id : size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="594.5" x2="822.5" y1="1536.8047" y2="1536.8047"/><!--class MultiplayerMenuHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="124.8281" id="MultiplayerMenuHandler" style="stroke: #A80036; stroke-width: 1.5;" width="328" x="6705.5" y="1835.5"/><ellipse cx="6790.25" cy="1851.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6792.5938,1847.1719 L6792.7656,1847.25 C6792.9844,1846.9375 6793.1875,1846.8438 6793.4844,1846.8438 C6793.7813,1846.8438 6794.0625,1846.9844 6794.2188,1847.25 C6794.3125,1847.4063 6794.3281,1847.5313 6794.3281,1847.9688 L6794.3281,1849.3906 C6794.3281,1849.8125 6794.2969,1850 6794.1875,1850.1563 C6794.0156,1850.375 6793.75,1850.5156 6793.4844,1850.5156 C6793.2656,1850.5156 6793.0313,1850.4063 6792.8906,1850.2656 C6792.75,1850.1406 6792.7188,1850.0156 6792.6563,1849.6094 C6792.5625,1849.2031 6792.3906,1848.9844 6791.9063,1848.7031 C6791.4375,1848.4531 6790.8281,1848.2969 6790.25,1848.2969 C6788.5156,1848.2969 6787.2656,1849.6094 6787.2656,1851.3906 L6787.2656,1852.4844 C6787.2656,1854.1875 6788.5625,1855.2813 6790.6094,1855.2813 C6791.375,1855.2813 6792.0625,1855.1563 6792.4844,1854.8906 C6792.6719,1854.7969 6792.6719,1854.7969 6793.125,1854.3125 C6793.3125,1854.125 6793.5156,1854.0469 6793.7344,1854.0469 C6794.2031,1854.0469 6794.5938,1854.4375 6794.5938,1854.8906 C6794.5938,1855.2813 6794.2656,1855.7344 6793.6875,1856.1406 C6792.9375,1856.6875 6791.7813,1856.9844 6790.5625,1856.9844 C6787.6719,1856.9844 6785.5625,1855.0938 6785.5625,1852.5156 L6785.5625,1851.3906 C6785.5625,1848.6719 6787.5625,1846.5938 6790.1875,1846.5938 C6791.0625,1846.5938 6791.6563,1846.7344 6792.5938,1847.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="150" x="6810.75" y="1855.6543">MultiplayerMenuHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6706.5" x2="7032.5" y1="1867.5" y2="1867.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6713.5" y="1876.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="6725.5" y="1881.7104">_port : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6713.5" y="1889.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="6725.5" y="1894.5151">_ip : std::array&lt;char, 100&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="6713.5" y="1902.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="6725.5" y="1907.3198">_error : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6706.5" x2="7032.5" y1="1913.9141" y2="1913.9141"/><ellipse cx="6716.5" cy="1925.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="6725.5" y="1928.1245">MultiplayerMenuHandler(StateType&amp; requestedState)</text><ellipse cx="6716.5" cy="1938.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="6725.5" y="1940.9292">~MultiplayerMenuHandler()</text><ellipse cx="6716.5" cy="1951.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="6725.5" y="1953.7339">draw() : void</text><!--class NetworkHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="124.8281" id="NetworkHandler" style="stroke: #A80036; stroke-width: 1.5;" width="806" x="858.5" y="1452"/><ellipse cx="1207.25" cy="1468" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1209.5938,1463.6719 L1209.7656,1463.75 C1209.9844,1463.4375 1210.1875,1463.3438 1210.4844,1463.3438 C1210.7813,1463.3438 1211.0625,1463.4844 1211.2188,1463.75 C1211.3125,1463.9063 1211.3281,1464.0313 1211.3281,1464.4688 L1211.3281,1465.8906 C1211.3281,1466.3125 1211.2969,1466.5 1211.1875,1466.6563 C1211.0156,1466.875 1210.75,1467.0156 1210.4844,1467.0156 C1210.2656,1467.0156 1210.0313,1466.9063 1209.8906,1466.7656 C1209.75,1466.6406 1209.7188,1466.5156 1209.6563,1466.1094 C1209.5625,1465.7031 1209.3906,1465.4844 1208.9063,1465.2031 C1208.4375,1464.9531 1207.8281,1464.7969 1207.25,1464.7969 C1205.5156,1464.7969 1204.2656,1466.1094 1204.2656,1467.8906 L1204.2656,1468.9844 C1204.2656,1470.6875 1205.5625,1471.7813 1207.6094,1471.7813 C1208.375,1471.7813 1209.0625,1471.6563 1209.4844,1471.3906 C1209.6719,1471.2969 1209.6719,1471.2969 1210.125,1470.8125 C1210.3125,1470.625 1210.5156,1470.5469 1210.7344,1470.5469 C1211.2031,1470.5469 1211.5938,1470.9375 1211.5938,1471.3906 C1211.5938,1471.7813 1211.2656,1472.2344 1210.6875,1472.6406 C1209.9375,1473.1875 1208.7813,1473.4844 1207.5625,1473.4844 C1204.6719,1473.4844 1202.5625,1471.5938 1202.5625,1469.0156 L1202.5625,1467.8906 C1202.5625,1465.1719 1204.5625,1463.0938 1207.1875,1463.0938 C1208.0625,1463.0938 1208.6563,1463.2344 1209.5938,1463.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="100" x="1227.75" y="1472.1543">NetworkHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="859.5" x2="1663.5" y1="1484" y2="1484"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="859.5" x2="1663.5" y1="1492" y2="1492"/><ellipse cx="869.5" cy="1503.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="878.5" y="1506.2104">NetworkHandler()</text><ellipse cx="869.5" cy="1516.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="878.5" y="1519.0151">~NetworkHandler()</text><ellipse cx="869.5" cy="1529.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="423" x="878.5" y="1531.8198">getEntityByServerId(size_t serverId, ecs::Manager&amp; manager) : ecs::Entity</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="866.5" y="1539.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="759" x="878.5" y="1544.6245">&lt;void(std::shared_ptr&lt;rnetwork::ClientChannel&gt;, rnetwork::packet::PacketBase &amp;, ecs::Manager &amp;) : std::map&lt;size_t , std::function</text><ellipse cx="869.5" cy="1555.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="735" x="878.5" y="1557.4292">handle(std::shared_ptr&lt;rnetwork::ClientChannel&gt; client, rnetwork::packet::PacketBase&amp; packet, ecs::Manager&amp; manager) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="866.5" y="1564.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="780" x="878.5" y="1570.2339">handlePlayerId(std::shared_ptr&lt;rnetwork::ClientChannel&gt; client, rnetwork::packet::PacketBase&amp; packet, ecs::Manager&amp; manager) : void</text><!--class NetworkService--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="380.9219" id="NetworkService" style="stroke: #A80036; stroke-width: 1.5;" width="446" x="7236.5" y="8"/><ellipse cx="7407.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7409.5938,19.6719 L7409.7656,19.75 C7409.9844,19.4375 7410.1875,19.3438 7410.4844,19.3438 C7410.7813,19.3438 7411.0625,19.4844 7411.2188,19.75 C7411.3125,19.9063 7411.3281,20.0313 7411.3281,20.4688 L7411.3281,21.8906 C7411.3281,22.3125 7411.2969,22.5 7411.1875,22.6563 C7411.0156,22.875 7410.75,23.0156 7410.4844,23.0156 C7410.2656,23.0156 7410.0313,22.9063 7409.8906,22.7656 C7409.75,22.6406 7409.7188,22.5156 7409.6563,22.1094 C7409.5625,21.7031 7409.3906,21.4844 7408.9063,21.2031 C7408.4375,20.9531 7407.8281,20.7969 7407.25,20.7969 C7405.5156,20.7969 7404.2656,22.1094 7404.2656,23.8906 L7404.2656,24.9844 C7404.2656,26.6875 7405.5625,27.7813 7407.6094,27.7813 C7408.375,27.7813 7409.0625,27.6563 7409.4844,27.3906 C7409.6719,27.2969 7409.6719,27.2969 7410.125,26.8125 C7410.3125,26.625 7410.5156,26.5469 7410.7344,26.5469 C7411.2031,26.5469 7411.5938,26.9375 7411.5938,27.3906 C7411.5938,27.7813 7411.2656,28.2344 7410.6875,28.6406 C7409.9375,29.1875 7408.7813,29.4844 7407.5625,29.4844 C7404.6719,29.4844 7402.5625,27.5938 7402.5625,25.0156 L7402.5625,23.8906 C7402.5625,21.1719 7404.5625,19.0938 7407.1875,19.0938 C7408.0625,19.0938 7408.6563,19.2344 7409.5938,19.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="7427.75" y="28.1543">NetworkService</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7237.5" x2="7681.5" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="48.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="7256.5" y="54.2104">_readFds : fd_set</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="61.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="7256.5" y="67.0151">_writeFds : fd_set</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="74.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="7256.5" y="79.8198">_highestFd : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="87.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="189" x="7256.5" y="92.6245">_instance : static NetworkService</text><line style="stroke: #000000; stroke-width: 1.0;" x1="7256.5" x2="7445.5" y1="94.6245" y2="94.6245"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="100.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="373" x="7256.5" y="105.4292">_acceptors : std::deque&lt;std::shared_ptr&lt;rnetwork::IAcceptor&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="112.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="7256.5" y="118.2339">_receivers : std::deque&lt;std::shared_ptr&lt;rnetwork::IReceiver&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="125.7305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="356" x="7256.5" y="131.0386">_senders : std::deque&lt;std::shared_ptr&lt;rnetwork::ISender&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="138.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="7256.5" y="143.8433">_mutex : std::mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="151.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="7256.5" y="156.6479">_name : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7237.5" x2="7681.5" y1="163.2422" y2="163.2422"/><ellipse cx="7247.5" cy="175.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="7256.5" y="177.4526">NetworkService()</text><ellipse cx="7247.5" cy="187.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="7256.5" y="190.2573">NetworkService(const NetworkService&amp; networkService)</text><ellipse cx="7247.5" cy="200.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="7256.5" y="203.062">~NetworkService()</text><ellipse cx="7247.5" cy="213.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="166" x="7256.5" y="215.8667">Instance() : NetworkService&amp;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="7256.5" x2="7422.5" y1="217.8667" y2="217.8667"/><ellipse cx="7247.5" cy="226.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="400" x="7256.5" y="228.6714">operator=(const NetworkService&amp; networkService) : NetworkService&amp;</text><ellipse cx="7247.5" cy="239.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="405" x="7256.5" y="241.4761">canAccept(std::shared_ptr&lt;const rnetwork::IAcceptor&gt; acceptor) : bool</text><ellipse cx="7247.5" cy="251.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="7256.5" y="254.2808">canReceive(std::shared_ptr&lt;const rnetwork::IReceiver&gt; receiver) : bool</text><ellipse cx="7247.5" cy="264.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="380" x="7256.5" y="267.0854">canSend(std::shared_ptr&lt;const rnetwork::ISender&gt; sender) : bool</text><ellipse cx="7247.5" cy="277.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="7256.5" y="279.8901">name() : std::string&amp; {query}</text><ellipse cx="7247.5" cy="290.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="383" x="7256.5" y="292.6948">regiserReciver(std::shared_ptr&lt;rnetwork::IReceiver&gt; reciver) : void</text><ellipse cx="7247.5" cy="303.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="406" x="7256.5" y="305.4995">registerAcceptor(std::shared_ptr&lt;rnetwork::IAcceptor&gt; acceptor) : void</text><ellipse cx="7247.5" cy="315.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="381" x="7256.5" y="318.3042">registerSender(std::shared_ptr&lt;rnetwork::ISender&gt; sender) : void</text><ellipse cx="7247.5" cy="328.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="420" x="7256.5" y="331.1089">unregisterAcceptor(std::shared_ptr&lt;rnetwork::IAcceptor&gt; acceptor) : void</text><ellipse cx="7247.5" cy="341.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="7256.5" y="343.9136">unregisterReciver(std::shared_ptr&lt;rnetwork::IReceiver&gt; reciver) : void</text><ellipse cx="7247.5" cy="354.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="7256.5" y="356.7183">unregisterSender(std::shared_ptr&lt;rnetwork::ISender&gt; sender) : void</text><ellipse cx="7247.5" cy="367.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="7256.5" y="369.5229">update() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7244.5" y="377.0195"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="7256.5" y="382.3276">updateFdSets() : void</text><!--class OptionsMenuHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="163.2422" id="OptionsMenuHandler" style="stroke: #A80036; stroke-width: 1.5;" width="396" x="7068.5" y="1816.5"/><ellipse cx="7196.75" cy="1832.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7199.0938,1828.1719 L7199.2656,1828.25 C7199.4844,1827.9375 7199.6875,1827.8438 7199.9844,1827.8438 C7200.2813,1827.8438 7200.5625,1827.9844 7200.7188,1828.25 C7200.8125,1828.4063 7200.8281,1828.5313 7200.8281,1828.9688 L7200.8281,1830.3906 C7200.8281,1830.8125 7200.7969,1831 7200.6875,1831.1563 C7200.5156,1831.375 7200.25,1831.5156 7199.9844,1831.5156 C7199.7656,1831.5156 7199.5313,1831.4063 7199.3906,1831.2656 C7199.25,1831.1406 7199.2188,1831.0156 7199.1563,1830.6094 C7199.0625,1830.2031 7198.8906,1829.9844 7198.4063,1829.7031 C7197.9375,1829.4531 7197.3281,1829.2969 7196.75,1829.2969 C7195.0156,1829.2969 7193.7656,1830.6094 7193.7656,1832.3906 L7193.7656,1833.4844 C7193.7656,1835.1875 7195.0625,1836.2813 7197.1094,1836.2813 C7197.875,1836.2813 7198.5625,1836.1563 7198.9844,1835.8906 C7199.1719,1835.7969 7199.1719,1835.7969 7199.625,1835.3125 C7199.8125,1835.125 7200.0156,1835.0469 7200.2344,1835.0469 C7200.7031,1835.0469 7201.0938,1835.4375 7201.0938,1835.8906 C7201.0938,1836.2813 7200.7656,1836.7344 7200.1875,1837.1406 C7199.4375,1837.6875 7198.2813,1837.9844 7197.0625,1837.9844 C7194.1719,1837.9844 7192.0625,1836.0938 7192.0625,1833.5156 L7192.0625,1832.3906 C7192.0625,1829.6719 7194.0625,1827.5938 7196.6875,1827.5938 C7197.5625,1827.5938 7198.1563,1827.7344 7199.0938,1828.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="131" x="7217.25" y="1836.6543">OptionsMenuHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7069.5" x2="7463.5" y1="1848.5" y2="1848.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7076.5" y="1857.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="7088.5" y="1862.7104">_effectsVolume : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7076.5" y="1870.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="7088.5" y="1875.5151">_musicVolume : int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7076.5" y="1883.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="370" x="7088.5" y="1888.3198">_keys : std::unordered_map&lt;std::string, std::array&lt;char, 10&gt; &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7069.5" x2="7463.5" y1="1894.9141" y2="1894.9141"/><ellipse cx="7079.5" cy="1906.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="285" x="7088.5" y="1909.1245">OptionsMenuHandler(StateType&amp; requestedState)</text><ellipse cx="7079.5" cy="1919.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7088.5" y="1921.9292">~OptionsMenuHandler()</text><ellipse cx="7079.5" cy="1932.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7088.5" y="1934.7339">draw() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7076.5" y="1942.2305"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7088.5" y="1947.5386">drawBackButton() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7076.5" y="1955.0352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="7088.5" y="1960.3433">drawInputConfig() : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7076.5" y="1967.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="7088.5" y="1973.1479">drawSliders() : void</text><!--class PacketBase--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="329.7031" id="PacketBase" style="stroke: #A80036; stroke-width: 1.5;" width="511" x="1700" y="1349.5"/><ellipse cx="1914.25" cy="1365.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1916.5938,1361.1719 L1916.7656,1361.25 C1916.9844,1360.9375 1917.1875,1360.8438 1917.4844,1360.8438 C1917.7813,1360.8438 1918.0625,1360.9844 1918.2188,1361.25 C1918.3125,1361.4063 1918.3281,1361.5313 1918.3281,1361.9688 L1918.3281,1363.3906 C1918.3281,1363.8125 1918.2969,1364 1918.1875,1364.1563 C1918.0156,1364.375 1917.75,1364.5156 1917.4844,1364.5156 C1917.2656,1364.5156 1917.0313,1364.4063 1916.8906,1364.2656 C1916.75,1364.1406 1916.7188,1364.0156 1916.6563,1363.6094 C1916.5625,1363.2031 1916.3906,1362.9844 1915.9063,1362.7031 C1915.4375,1362.4531 1914.8281,1362.2969 1914.25,1362.2969 C1912.5156,1362.2969 1911.2656,1363.6094 1911.2656,1365.3906 L1911.2656,1366.4844 C1911.2656,1368.1875 1912.5625,1369.2813 1914.6094,1369.2813 C1915.375,1369.2813 1916.0625,1369.1563 1916.4844,1368.8906 C1916.6719,1368.7969 1916.6719,1368.7969 1917.125,1368.3125 C1917.3125,1368.125 1917.5156,1368.0469 1917.7344,1368.0469 C1918.2031,1368.0469 1918.5938,1368.4375 1918.5938,1368.8906 C1918.5938,1369.2813 1918.2656,1369.7344 1917.6875,1370.1406 C1916.9375,1370.6875 1915.7813,1370.9844 1914.5625,1370.9844 C1911.6719,1370.9844 1909.5625,1369.0938 1909.5625,1366.5156 L1909.5625,1365.3906 C1909.5625,1362.6719 1911.5625,1360.5938 1914.1875,1360.5938 C1915.0625,1360.5938 1915.6563,1360.7344 1916.5938,1361.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="1934.75" y="1369.6543">PacketBase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1701" x2="2210" y1="1381.5" y2="1381.5"/><polygon fill="none" points="1711,1388.4023,1715,1392.4023,1711,1396.4023,1707,1392.4023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1720" y="1395.7104">_fromLowLevel : SOCKADDR_IN</text><polygon fill="none" points="1711,1401.207,1715,1405.207,1711,1409.207,1707,1405.207" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1720" y="1408.5151">_from : rnetwork::Endpoint</text><polygon fill="none" points="1711,1414.0117,1715,1418.0117,1711,1422.0117,1707,1418.0117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="1720" y="1421.3198">_size : std::size_t</text><polygon fill="none" points="1711,1426.8164,1715,1430.8164,1711,1434.8164,1707,1430.8164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1720" y="1434.1245">_raw : unsigned char*</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1701" x2="2210" y1="1440.7188" y2="1440.7188"/><ellipse cx="1711" cy="1452.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="1720" y="1454.9292">PacketBase(uint16_t op, uint16_t length)</text><ellipse cx="1711" cy="1465.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="1720" y="1467.7339">PacketBase(unsigned char* raw, std::size_t size)</text><ellipse cx="1711" cy="1478.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402" x="1720" y="1480.5386">PacketBase(unsigned char* raw, std::size_t size, SOCKADDR_IN* from)</text><ellipse cx="1711" cy="1491.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="1720" y="1493.3433">PacketBase(const PacketBase&amp; packetBase)</text><ellipse cx="1711" cy="1503.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1720" y="1506.1479">~PacketBase()</text><ellipse cx="1711" cy="1516.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="335" x="1720" y="1518.9526">operator=(const PacketBase&amp; packetBase) : PacketBase&amp;</text><ellipse cx="1711" cy="1529.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="318" x="1720" y="1531.7573">operator&gt;&gt;(StringPacket&amp; stringPacket) : PacketBase&amp;</text><ellipse cx="1711" cy="1542.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="1720" y="1544.562">from() : rnetwork::Endpoint&amp; {query}</text><ellipse cx="1711" cy="1555.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="1720" y="1557.3667">getRemote() : rnetwork::Endpoint&amp; {query}</text><ellipse cx="1711" cy="1567.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="1720" y="1570.1714">snapshot() : std::shared_ptr&lt;IPacket&gt; {query}</text><ellipse cx="1711" cy="1580.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="485" x="1720" y="1582.9761">generateClient(rnetwork::async::IOService&amp; ioService) : std::shared_ptr&lt;T&gt; {query}</text><ellipse cx="1711" cy="1593.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1720" y="1595.7808">size() : std::size_t {query}</text><ellipse cx="1711" cy="1606.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1720" y="1608.5854">getLength() : uint16_t {query}</text><ellipse cx="1711" cy="1619.082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1720" y="1621.3901">getOp() : uint16_t {query}</text><ellipse cx="1711" cy="1631.8867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1720" y="1634.1948">raw() : unsigned char* {query}</text><ellipse cx="1711" cy="1644.6914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1720" y="1646.9995">setLength(uint16_t length) : void</text><ellipse cx="1711" cy="1657.4961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1720" y="1659.8042">setOp(uint16_t op) : void</text><ellipse cx="1711" cy="1670.3008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="1720" y="1672.6089">setRemote(const rnetwork::Endpoint&amp; remote) : void</text><!--class PlayMenuHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="PlayMenuHandler" style="stroke: #A80036; stroke-width: 1.5;" width="290" x="7499.5" y="1855"/><ellipse cx="7586.25" cy="1871" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7588.5938,1866.6719 L7588.7656,1866.75 C7588.9844,1866.4375 7589.1875,1866.3438 7589.4844,1866.3438 C7589.7813,1866.3438 7590.0625,1866.4844 7590.2188,1866.75 C7590.3125,1866.9063 7590.3281,1867.0313 7590.3281,1867.4688 L7590.3281,1868.8906 C7590.3281,1869.3125 7590.2969,1869.5 7590.1875,1869.6563 C7590.0156,1869.875 7589.75,1870.0156 7589.4844,1870.0156 C7589.2656,1870.0156 7589.0313,1869.9063 7588.8906,1869.7656 C7588.75,1869.6406 7588.7188,1869.5156 7588.6563,1869.1094 C7588.5625,1868.7031 7588.3906,1868.4844 7587.9063,1868.2031 C7587.4375,1867.9531 7586.8281,1867.7969 7586.25,1867.7969 C7584.5156,1867.7969 7583.2656,1869.1094 7583.2656,1870.8906 L7583.2656,1871.9844 C7583.2656,1873.6875 7584.5625,1874.7813 7586.6094,1874.7813 C7587.375,1874.7813 7588.0625,1874.6563 7588.4844,1874.3906 C7588.6719,1874.2969 7588.6719,1874.2969 7589.125,1873.8125 C7589.3125,1873.625 7589.5156,1873.5469 7589.7344,1873.5469 C7590.2031,1873.5469 7590.5938,1873.9375 7590.5938,1874.3906 C7590.5938,1874.7813 7590.2656,1875.2344 7589.6875,1875.6406 C7588.9375,1876.1875 7587.7813,1876.4844 7586.5625,1876.4844 C7583.6719,1876.4844 7581.5625,1874.5938 7581.5625,1872.0156 L7581.5625,1870.8906 C7581.5625,1868.1719 7583.5625,1866.0938 7586.1875,1866.0938 C7587.0625,1866.0938 7587.6563,1866.2344 7588.5938,1866.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="7606.75" y="1875.1543">PlayMenuHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7500.5" x2="7788.5" y1="1887" y2="1887"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7500.5" x2="7788.5" y1="1895" y2="1895"/><ellipse cx="7510.5" cy="1906.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="7519.5" y="1909.2104">PlayMenuHandler(StateType&amp; requestedState)</text><ellipse cx="7510.5" cy="1919.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="7519.5" y="1922.0151">~PlayMenuHandler()</text><ellipse cx="7510.5" cy="1932.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7519.5" y="1934.8198">draw() : void</text><!--class Player--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="201.6563" id="Player" style="stroke: #A80036; stroke-width: 1.5;" width="528" x="4243.5" y="1024"/><ellipse cx="4484.25" cy="1040" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4486.5938,1035.6719 L4486.7656,1035.75 C4486.9844,1035.4375 4487.1875,1035.3438 4487.4844,1035.3438 C4487.7813,1035.3438 4488.0625,1035.4844 4488.2188,1035.75 C4488.3125,1035.9063 4488.3281,1036.0313 4488.3281,1036.4688 L4488.3281,1037.8906 C4488.3281,1038.3125 4488.2969,1038.5 4488.1875,1038.6563 C4488.0156,1038.875 4487.75,1039.0156 4487.4844,1039.0156 C4487.2656,1039.0156 4487.0313,1038.9063 4486.8906,1038.7656 C4486.75,1038.6406 4486.7188,1038.5156 4486.6563,1038.1094 C4486.5625,1037.7031 4486.3906,1037.4844 4485.9063,1037.2031 C4485.4375,1036.9531 4484.8281,1036.7969 4484.25,1036.7969 C4482.5156,1036.7969 4481.2656,1038.1094 4481.2656,1039.8906 L4481.2656,1040.9844 C4481.2656,1042.6875 4482.5625,1043.7813 4484.6094,1043.7813 C4485.375,1043.7813 4486.0625,1043.6563 4486.4844,1043.3906 C4486.6719,1043.2969 4486.6719,1043.2969 4487.125,1042.8125 C4487.3125,1042.625 4487.5156,1042.5469 4487.7344,1042.5469 C4488.2031,1042.5469 4488.5938,1042.9375 4488.5938,1043.3906 C4488.5938,1043.7813 4488.2656,1044.2344 4487.6875,1044.6406 C4486.9375,1045.1875 4485.7813,1045.4844 4484.5625,1045.4844 C4481.6719,1045.4844 4479.5625,1043.5938 4479.5625,1041.0156 L4479.5625,1039.8906 C4479.5625,1037.1719 4481.5625,1035.0938 4484.1875,1035.0938 C4485.0625,1035.0938 4485.6563,1035.2344 4486.5938,1035.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="4504.75" y="1044.1543">Player</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4244.5" x2="4770.5" y1="1056" y2="1056"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4251.5" y="1064.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="4263.5" y="1070.2104">_channel : std::shared_ptr&lt;rnetwork::ClientChannel&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4251.5" y="1077.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="4263.5" y="1083.0151">_game : std::shared_ptr&lt;rtypeserver::Game&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4244.5" x2="4770.5" y1="1089.6094" y2="1089.6094"/><ellipse cx="4254.5" cy="1101.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="378" x="4263.5" y="1103.8198">Player(const std::shared_ptr&lt;rnetwork::ClientChannel&gt;&amp; channel)</text><ellipse cx="4254.5" cy="1114.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="4263.5" y="1116.6245">Player(const Player&amp; player)</text><ellipse cx="4254.5" cy="1127.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="4263.5" y="1129.4292">~Player()</text><ellipse cx="4254.5" cy="1139.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="4263.5" y="1142.2339">operator=(const Player&amp; player) : Player&amp;</text><ellipse cx="4254.5" cy="1152.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="502" x="4263.5" y="1155.0386">haveChannel(const std::shared_ptr&lt;rnetwork::ClientChannel&gt;&amp; channel) : bool {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4251.5" y="1162.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="4263.5" y="1167.8433">&lt;void(rnetwork::packet::PacketBase &amp;) : rnetwork::Router</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4251.5" y="1175.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4263.5" y="1180.6479">initRouter() : void</text><ellipse cx="4254.5" cy="1191.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="4263.5" y="1193.4526">joinGame(std::shared_ptr&lt;rtypeserver::Game&gt; game) : void</text><ellipse cx="4254.5" cy="1203.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="4263.5" y="1206.2573">send(rnetwork::packet::PacketBase&amp; packetBase) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4251.5" y="1213.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="4263.5" y="1219.062">sendTCP(rnetwork::packet::PacketBase&amp; packet) : void</text><!--class PlayerID--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="60.8047" id="PlayerID" style="stroke: #A80036; stroke-width: 1.5;" width="82" x="7994.5" y="673"/><ellipse cx="8009.5" cy="689" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8011.8438,684.6719 L8012.0156,684.75 C8012.2344,684.4375 8012.4375,684.3438 8012.7344,684.3438 C8013.0313,684.3438 8013.3125,684.4844 8013.4688,684.75 C8013.5625,684.9063 8013.5781,685.0313 8013.5781,685.4688 L8013.5781,686.8906 C8013.5781,687.3125 8013.5469,687.5 8013.4375,687.6563 C8013.2656,687.875 8013,688.0156 8012.7344,688.0156 C8012.5156,688.0156 8012.2813,687.9063 8012.1406,687.7656 C8012,687.6406 8011.9688,687.5156 8011.9063,687.1094 C8011.8125,686.7031 8011.6406,686.4844 8011.1563,686.2031 C8010.6875,685.9531 8010.0781,685.7969 8009.5,685.7969 C8007.7656,685.7969 8006.5156,687.1094 8006.5156,688.8906 L8006.5156,689.9844 C8006.5156,691.6875 8007.8125,692.7813 8009.8594,692.7813 C8010.625,692.7813 8011.3125,692.6563 8011.7344,692.3906 C8011.9219,692.2969 8011.9219,692.2969 8012.375,691.8125 C8012.5625,691.625 8012.7656,691.5469 8012.9844,691.5469 C8013.4531,691.5469 8013.8438,691.9375 8013.8438,692.3906 C8013.8438,692.7813 8013.5156,693.2344 8012.9375,693.6406 C8012.1875,694.1875 8011.0313,694.4844 8009.8125,694.4844 C8006.9219,694.4844 8004.8125,692.5938 8004.8125,690.0156 L8004.8125,688.8906 C8004.8125,686.1719 8006.8125,684.0938 8009.4375,684.0938 C8010.3125,684.0938 8010.9063,684.2344 8011.8438,684.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="8023.5" y="693.1543">PlayerID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7995.5" x2="8075.5" y1="705" y2="705"/><ellipse cx="8005.5" cy="716.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="8014.5" y="719.2104">id : Id</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7995.5" x2="8075.5" y1="725.8047" y2="725.8047"/><!--class Position--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="Position" style="stroke: #A80036; stroke-width: 1.5;" width="199" x="2246" y="1465"/><ellipse cx="2316.25" cy="1481" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2318.5938,1476.6719 L2318.7656,1476.75 C2318.9844,1476.4375 2319.1875,1476.3438 2319.4844,1476.3438 C2319.7813,1476.3438 2320.0625,1476.4844 2320.2188,1476.75 C2320.3125,1476.9063 2320.3281,1477.0313 2320.3281,1477.4688 L2320.3281,1478.8906 C2320.3281,1479.3125 2320.2969,1479.5 2320.1875,1479.6563 C2320.0156,1479.875 2319.75,1480.0156 2319.4844,1480.0156 C2319.2656,1480.0156 2319.0313,1479.9063 2318.8906,1479.7656 C2318.75,1479.6406 2318.7188,1479.5156 2318.6563,1479.1094 C2318.5625,1478.7031 2318.3906,1478.4844 2317.9063,1478.2031 C2317.4375,1477.9531 2316.8281,1477.7969 2316.25,1477.7969 C2314.5156,1477.7969 2313.2656,1479.1094 2313.2656,1480.8906 L2313.2656,1481.9844 C2313.2656,1483.6875 2314.5625,1484.7813 2316.6094,1484.7813 C2317.375,1484.7813 2318.0625,1484.6563 2318.4844,1484.3906 C2318.6719,1484.2969 2318.6719,1484.2969 2319.125,1483.8125 C2319.3125,1483.625 2319.5156,1483.5469 2319.7344,1483.5469 C2320.2031,1483.5469 2320.5938,1483.9375 2320.5938,1484.3906 C2320.5938,1484.7813 2320.2656,1485.2344 2319.6875,1485.6406 C2318.9375,1486.1875 2317.7813,1486.4844 2316.5625,1486.4844 C2313.6719,1486.4844 2311.5625,1484.5938 2311.5625,1482.0156 L2311.5625,1480.8906 C2311.5625,1478.1719 2313.5625,1476.0938 2316.1875,1476.0938 C2317.0625,1476.0938 2317.6563,1476.2344 2318.5938,1476.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="50" x="2336.75" y="1485.1543">Position</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2247" x2="2444" y1="1497" y2="1497"/><ellipse cx="2257" cy="1508.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2266" y="1511.2104">x : float</text><ellipse cx="2257" cy="1521.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="2266" y="1524.0151">y : float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2247" x2="2444" y1="1530.6094" y2="1530.6094"/><ellipse cx="2257" cy="1542.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2266" y="1544.8198">Position(float xPos, float yPos)</text><ellipse cx="2257" cy="1555.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="2266" y="1557.6245">Position()</text><!--class RNETWORK_API--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="419.3359" id="RNETWORK_API" style="stroke: #A80036; stroke-width: 1.5;" width="486" x="2480.5" y="1305"/><ellipse cx="2673.25" cy="1321" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2675.5938,1316.6719 L2675.7656,1316.75 C2675.9844,1316.4375 2676.1875,1316.3438 2676.4844,1316.3438 C2676.7813,1316.3438 2677.0625,1316.4844 2677.2188,1316.75 C2677.3125,1316.9063 2677.3281,1317.0313 2677.3281,1317.4688 L2677.3281,1318.8906 C2677.3281,1319.3125 2677.2969,1319.5 2677.1875,1319.6563 C2677.0156,1319.875 2676.75,1320.0156 2676.4844,1320.0156 C2676.2656,1320.0156 2676.0313,1319.9063 2675.8906,1319.7656 C2675.75,1319.6406 2675.7188,1319.5156 2675.6563,1319.1094 C2675.5625,1318.7031 2675.3906,1318.4844 2674.9063,1318.2031 C2674.4375,1317.9531 2673.8281,1317.7969 2673.25,1317.7969 C2671.5156,1317.7969 2670.2656,1319.1094 2670.2656,1320.8906 L2670.2656,1321.9844 C2670.2656,1323.6875 2671.5625,1324.7813 2673.6094,1324.7813 C2674.375,1324.7813 2675.0625,1324.6563 2675.4844,1324.3906 C2675.6719,1324.2969 2675.6719,1324.2969 2676.125,1323.8125 C2676.3125,1323.625 2676.5156,1323.5469 2676.7344,1323.5469 C2677.2031,1323.5469 2677.5938,1323.9375 2677.5938,1324.3906 C2677.5938,1324.7813 2677.2656,1325.2344 2676.6875,1325.6406 C2675.9375,1326.1875 2674.7813,1326.4844 2673.5625,1326.4844 C2670.6719,1326.4844 2668.5625,1324.5938 2668.5625,1322.0156 L2668.5625,1320.8906 C2668.5625,1318.1719 2670.5625,1316.0938 2673.1875,1316.0938 C2674.0625,1316.0938 2674.6563,1316.2344 2675.5938,1316.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92" x="2693.75" y="1325.1543">RNETWORK_API</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2481.5" x2="2965.5" y1="1337" y2="1337"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2488.5" y="1345.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="2500.5" y="1351.2104">_run : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2488.5" y="1358.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="460" x="2500.5" y="1364.0151">_services : std::deque&lt;std::reference_wrapper&lt;rnetwork::services::IService&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2488.5" y="1371.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365" x="2500.5" y="1376.8198">_tasks : std::deque&lt;std::shared_ptr&lt;rnetwork::tasks::ITask&gt; &gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2488.5" y="1384.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2500.5" y="1389.6245">_serviceMutex : std::mutex</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2488.5" y="1397.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2500.5" y="1402.4292">_taskMutex : std::mutex</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2481.5" x2="2965.5" y1="1409.0234" y2="1409.0234"/><ellipse cx="2491.5" cy="1420.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="169" x="2500.5" y="1423.2339">name() : std::string&amp; {query}</text><ellipse cx="2491.5" cy="1433.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="83" x="2500.5" y="1436.0386">update() : void</text><ellipse cx="2491.5" cy="1446.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="2500.5" y="1448.8433">available() : bool {query}</text><ellipse cx="2491.5" cy="1459.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="279" x="2500.5" y="1461.6479">service() : rnetwork::services::IService&amp; {query}</text><ellipse cx="2491.5" cy="1472.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="2500.5" y="1474.4526">operator()() : void</text><ellipse cx="2491.5" cy="1484.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="181" x="2500.5" y="1487.2573">registerService() : void {query}</text><ellipse cx="2491.5" cy="1497.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="195" x="2500.5" y="1500.062">unregisterService() : void {query}</text><ellipse cx="2491.5" cy="1510.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="214" x="2500.5" y="1512.8667">from() : rnetwork::Endpoint&amp; {query}</text><ellipse cx="2491.5" cy="1523.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="266" x="2500.5" y="1525.6714">snapshot() : std::shared_ptr&lt;IPacket&gt; {query}</text><ellipse cx="2491.5" cy="1536.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="2500.5" y="1538.4761">size() : std::size_t {query}</text><ellipse cx="2491.5" cy="1548.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="178" x="2500.5" y="1551.2808">raw() : unsigned char* {query}</text><ellipse cx="2491.5" cy="1561.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2500.5" y="1564.0854">IOService()</text><ellipse cx="2491.5" cy="1574.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2500.5" y="1576.8901">IOService(const IOService&amp; ioService)</text><ellipse cx="2491.5" cy="1587.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2500.5" y="1589.6948">~IOService()</text><ellipse cx="2491.5" cy="1600.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="2500.5" y="1602.4995">operator=(const IOService&amp; ioService) : IOService&amp;</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2488.5" y="1609.9961"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="2500.5" y="1615.3042">execTasks() : bool</text><ellipse cx="2491.5" cy="1625.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="2500.5" y="1628.1089">forceInfinite() : void</text><ellipse cx="2491.5" cy="1638.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="344" x="2500.5" y="1640.9136">registerService(rnetwork::services::IService&amp; service) : void</text><ellipse cx="2491.5" cy="1651.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="376" x="2500.5" y="1653.7183">registerTask(std::shared_ptr&lt;rnetwork::tasks::ITask&gt; task) : void</text><ellipse cx="2491.5" cy="1664.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="2500.5" y="1666.5229">run() : void</text><ellipse cx="2491.5" cy="1677.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="2500.5" y="1679.3276">stop() : void</text><ellipse cx="2491.5" cy="1689.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="358" x="2500.5" y="1692.1323">unregisterService(rnetwork::services::IService&amp; service) : void</text><ellipse cx="2491.5" cy="1702.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="2500.5" y="1704.937">unregisterTask(std::shared_ptr&lt;rnetwork::tasks::ITask&gt; task) : void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2488.5" y="1712.4336"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2500.5" y="1717.7417">updateServices() : void</text><!--class RTECS_API--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="278.4844" id="RTECS_API" style="stroke: #A80036; stroke-width: 1.5;" width="464" x="3001.5" y="1375.5"/><ellipse cx="3197.25" cy="1391.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3198.8281,1393.3125 L3194.7813,1393.3125 L3194.3906,1394.2969 L3194.7813,1394.2969 C3195.2344,1394.2969 3195.375,1394.3281 3195.5469,1394.4531 C3195.7656,1394.625 3195.8906,1394.875 3195.8906,1395.1563 C3195.8906,1395.4375 3195.75,1395.7344 3195.4844,1395.875 C3195.3594,1395.9688 3195.1406,1396 3194.7813,1396 L3192.5156,1396 C3191.7656,1396 3191.3906,1395.7188 3191.3906,1395.1563 C3191.3906,1394.8594 3191.5469,1394.5781 3191.7969,1394.4219 C3191.9531,1394.3125 3192.1094,1394.2969 3192.5313,1394.2969 L3195.1719,1387.7813 L3194.0938,1387.7813 C3193.6563,1387.7813 3193.4844,1387.75 3193.3125,1387.6406 C3193.0938,1387.4688 3192.9531,1387.2188 3192.9531,1386.9375 C3192.9531,1386.6563 3193.1094,1386.375 3193.3594,1386.2031 C3193.5156,1386.1094 3193.6406,1386.0938 3194.0938,1386.0938 L3197.7656,1386.0938 L3201.1563,1394.2969 C3201.625,1394.2969 3201.7813,1394.3281 3201.9531,1394.4688 C3202.1719,1394.625 3202.3125,1394.875 3202.3125,1395.1563 C3202.3125,1395.4375 3202.1563,1395.7344 3201.9063,1395.875 C3201.7656,1395.9688 3201.5469,1396 3201.1875,1396 L3198.8281,1396 C3198.4063,1396 3198.2031,1395.9531 3198.0625,1395.8281 C3197.8438,1395.6719 3197.7031,1395.4219 3197.7031,1395.1563 C3197.7031,1394.8594 3197.8594,1394.5781 3198.1094,1394.4219 C3198.2656,1394.3125 3198.375,1394.2969 3198.8281,1394.2969 L3199.2188,1394.2969 Z M3198.125,1391.6094 L3196.7969,1388.3438 L3195.4531,1391.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="64" x="3217.75" y="1395.6543">RTECS_API</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3002.5" x2="3464.5" y1="1407.5" y2="1407.5"/><ellipse cx="3012.5" cy="1419.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="3021.5" y="1421.7104">Ptr : using</text><ellipse cx="3012.5" cy="1432.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="3021.5" y="1434.5151">Ptr : using</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3009.5" y="1442.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="3021.5" y="1447.3198">requiredComponents : ComponentTypeSet</text><polygon fill="none" points="3012.5,1452.8164,3016.5,1456.8164,3012.5,1460.8164,3008.5,1456.8164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="3021.5" y="1460.1245">entities : std::set&lt;Entity&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3002.5" x2="3464.5" y1="1466.7188" y2="1466.7188"/><ellipse cx="3012.5" cy="1478.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="3021.5" y="1480.9292">IComponentStore()</text><ellipse cx="3012.5" cy="1491.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="3021.5" y="1493.7339">IComponentStore(IComponentStore const &amp;)</text><ellipse cx="3012.5" cy="1504.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="3021.5" y="1506.5386">IComponentStore(IComponentStore&amp; &amp;)</text><ellipse cx="3012.5" cy="1517.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="3021.5" y="1519.3433">~IComponentStore()</text><ellipse cx="3012.5" cy="1529.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="159" x="3021.5" y="1532.1479">makePtr(Args&amp;&amp; args) : Ptr</text><line style="stroke: #000000; stroke-width: 1.0;" x1="3021.5" x2="3180.5" y1="1534.1479" y2="1534.1479"/><ellipse cx="3012.5" cy="1542.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="159" x="3021.5" y="1544.9526">makePtr(Args&amp;&amp; args) : Ptr</text><line style="stroke: #000000; stroke-width: 1.0;" x1="3021.5" x2="3180.5" y1="1546.9526" y2="1546.9526"/><ellipse cx="3012.5" cy="1555.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="3021.5" y="1557.7573">System()</text><ellipse cx="3012.5" cy="1568.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="3021.5" y="1570.562">~System()</text><ellipse cx="3012.5" cy="1581.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="3021.5" y="1583.3667">getRequiredComponents() : ComponentTypeSet&amp; {query}</text><ellipse cx="3012.5" cy="1593.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="3021.5" y="1596.1714">hasEntity(Entity entity) : bool</text><ellipse cx="3012.5" cy="1606.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="3021.5" y="1608.9761">registerEntity(Entity entity) : bool</text><ellipse cx="3012.5" cy="1619.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3021.5" y="1621.7808">unregisterEntity(Entity entity) : bool</text><ellipse cx="3012.5" cy="1632.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="3021.5" y="1634.5854">process(Manager&amp; mgr, float elapsedTime) : void</text><polygon fill="#FFFF44" points="3012.5,1640.082,3016.5,1644.082,3012.5,1648.082,3008.5,1644.082" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="438" x="3021.5" y="1647.3901">setRequiredComponents(ComponentTypeSet&amp;&amp; requiredComponents) : void</text><!--class ReceiveTask--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="188.8516" id="ReceiveTask" style="stroke: #A80036; stroke-width: 1.5;" width="871" x="6" y="1803.5"/><ellipse cx="398.75" cy="1819.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M401.0938,1815.1719 L401.2656,1815.25 C401.4844,1814.9375 401.6875,1814.8438 401.9844,1814.8438 C402.2813,1814.8438 402.5625,1814.9844 402.7188,1815.25 C402.8125,1815.4063 402.8281,1815.5313 402.8281,1815.9688 L402.8281,1817.3906 C402.8281,1817.8125 402.7969,1818 402.6875,1818.1563 C402.5156,1818.375 402.25,1818.5156 401.9844,1818.5156 C401.7656,1818.5156 401.5313,1818.4063 401.3906,1818.2656 C401.25,1818.1406 401.2188,1818.0156 401.1563,1817.6094 C401.0625,1817.2031 400.8906,1816.9844 400.4063,1816.7031 C399.9375,1816.4531 399.3281,1816.2969 398.75,1816.2969 C397.0156,1816.2969 395.7656,1817.6094 395.7656,1819.3906 L395.7656,1820.4844 C395.7656,1822.1875 397.0625,1823.2813 399.1094,1823.2813 C399.875,1823.2813 400.5625,1823.1563 400.9844,1822.8906 C401.1719,1822.7969 401.1719,1822.7969 401.625,1822.3125 C401.8125,1822.125 402.0156,1822.0469 402.2344,1822.0469 C402.7031,1822.0469 403.0938,1822.4375 403.0938,1822.8906 C403.0938,1823.2813 402.7656,1823.7344 402.1875,1824.1406 C401.4375,1824.6875 400.2813,1824.9844 399.0625,1824.9844 C396.1719,1824.9844 394.0625,1823.0938 394.0625,1820.5156 L394.0625,1819.3906 C394.0625,1816.6719 396.0625,1814.5938 398.6875,1814.5938 C399.5625,1814.5938 400.1563,1814.7344 401.0938,1815.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="419.25" y="1823.6543">ReceiveTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="876" y1="1835.5" y2="1835.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1844.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="26" y="1849.7104">_receiver : std::shared_ptr&lt;rnetwork::IReceiver&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="876" y1="1856.3047" y2="1856.3047"/><ellipse cx="17" cy="1868.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="845" x="26" y="1870.5151">ReceiveTask(std::shared_ptr&lt;rnetwork::IReceiver&gt; receiver, const std::function&lt;void(rnetwork::packet::PacketBase&amp;packet,boolstatus)&gt;&amp; callback)</text><ellipse cx="17" cy="1881.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="26" y="1883.3198">ReceiveTask(const ReceiveTask&amp; receiveTask)</text><ellipse cx="17" cy="1893.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="26" y="1896.1245">~ReceiveTask()</text><ellipse cx="17" cy="1906.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="26" y="1908.9292">operator=(const ReceiveTask&amp; receiveTask) : ReceiveTask&amp;</text><ellipse cx="17" cy="1919.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="26" y="1921.7339">available() : bool {query}</text><ellipse cx="17" cy="1932.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="26" y="1934.5386">service() : rnetwork::services::NetworkService&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="1942.0352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="415" x="26" y="1947.3433">&lt;void(rnetwork::packet::PacketBase&amp; packet, bool status) : std::function</text><ellipse cx="17" cy="1957.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="26" y="1960.1479">operator()() : void</text><ellipse cx="17" cy="1970.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="26" y="1972.9526">registerService() : void {query}</text><ellipse cx="17" cy="1983.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="26" y="1985.7573">unregisterService() : void {query}</text><!--class RtypeCommand--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="214.4609" id="RtypeCommand" style="stroke: #A80036; stroke-width: 1.5;" width="306" x="4806.5" y="1018"/><ellipse cx="4906.75" cy="1034" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4909.0938,1029.6719 L4909.2656,1029.75 C4909.4844,1029.4375 4909.6875,1029.3438 4909.9844,1029.3438 C4910.2813,1029.3438 4910.5625,1029.4844 4910.7188,1029.75 C4910.8125,1029.9063 4910.8281,1030.0313 4910.8281,1030.4688 L4910.8281,1031.8906 C4910.8281,1032.3125 4910.7969,1032.5 4910.6875,1032.6563 C4910.5156,1032.875 4910.25,1033.0156 4909.9844,1033.0156 C4909.7656,1033.0156 4909.5313,1032.9063 4909.3906,1032.7656 C4909.25,1032.6406 4909.2188,1032.5156 4909.1563,1032.1094 C4909.0625,1031.7031 4908.8906,1031.4844 4908.4063,1031.2031 C4907.9375,1030.9531 4907.3281,1030.7969 4906.75,1030.7969 C4905.0156,1030.7969 4903.7656,1032.1094 4903.7656,1033.8906 L4903.7656,1034.9844 C4903.7656,1036.6875 4905.0625,1037.7813 4907.1094,1037.7813 C4907.875,1037.7813 4908.5625,1037.6563 4908.9844,1037.3906 C4909.1719,1037.2969 4909.1719,1037.2969 4909.625,1036.8125 C4909.8125,1036.625 4910.0156,1036.5469 4910.2344,1036.5469 C4910.7031,1036.5469 4911.0938,1036.9375 4911.0938,1037.3906 C4911.0938,1037.7813 4910.7656,1038.2344 4910.1875,1038.6406 C4909.4375,1039.1875 4908.2813,1039.4844 4907.0625,1039.4844 C4904.1719,1039.4844 4902.0625,1037.5938 4902.0625,1035.0156 L4902.0625,1033.8906 C4902.0625,1031.1719 4904.0625,1029.0938 4906.6875,1029.0938 C4907.5625,1029.0938 4908.1563,1029.2344 4909.0938,1029.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="4927.25" y="1038.1543">RtypeCommand</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4807.5" x2="5111.5" y1="1050" y2="1050"/><ellipse cx="4817.5" cy="1061.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="4826.5" y="1064.2104">input : long</text><ellipse cx="4817.5" cy="1074.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="207" x="4826.5" y="1077.0151">Charge : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5033.5" y1="1079.0151" y2="1079.0151"/><ellipse cx="4817.5" cy="1087.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="197" x="4826.5" y="1089.8198">Down : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5023.5" y1="1091.8198" y2="1091.8198"/><ellipse cx="4817.5" cy="1100.3164" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="187" x="4826.5" y="1102.6245">Fire : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5013.5" y1="1104.6245" y2="1104.6245"/><ellipse cx="4817.5" cy="1113.1211" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="216" x="4826.5" y="1115.4292">FireMask : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5042.5" y1="1117.4292" y2="1117.4292"/><ellipse cx="4817.5" cy="1125.9258" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="280" x="4826.5" y="1128.2339">HorizontalMoveMask : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5106.5" y1="1130.2339" y2="1130.2339"/><ellipse cx="4817.5" cy="1138.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="187" x="4826.5" y="1141.0386">Left : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5013.5" y1="1143.0386" y2="1143.0386"/><ellipse cx="4817.5" cy="1151.5352" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="224" x="4826.5" y="1153.8433">MoveMask : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5050.5" y1="1155.8433" y2="1155.8433"/><ellipse cx="4817.5" cy="1164.3398" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="194" x="4826.5" y="1166.6479">Right : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5020.5" y1="1168.6479" y2="1168.6479"/><ellipse cx="4817.5" cy="1177.1445" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="181" x="4826.5" y="1179.4526">Up : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5007.5" y1="1181.4526" y2="1181.4526"/><ellipse cx="4817.5" cy="1189.9492" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="266" x="4826.5" y="1192.2573">VerticalMoveMask : static constexpr const long</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4826.5" x2="5092.5" y1="1194.2573" y2="1194.2573"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4807.5" x2="5111.5" y1="1198.8516" y2="1198.8516"/><ellipse cx="4817.5" cy="1210.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="4826.5" y="1213.062">RtypeCommand()</text><ellipse cx="4817.5" cy="1223.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="4826.5" y="1225.8667">RtypeCommand(long __input)</text><!--class RtypeInput--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="176.0469" id="RtypeInput" style="stroke: #A80036; stroke-width: 1.5;" width="710" x="912.5" y="1810"/><ellipse cx="1229.75" cy="1826" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1232.0938,1821.6719 L1232.2656,1821.75 C1232.4844,1821.4375 1232.6875,1821.3438 1232.9844,1821.3438 C1233.2813,1821.3438 1233.5625,1821.4844 1233.7188,1821.75 C1233.8125,1821.9063 1233.8281,1822.0313 1233.8281,1822.4688 L1233.8281,1823.8906 C1233.8281,1824.3125 1233.7969,1824.5 1233.6875,1824.6563 C1233.5156,1824.875 1233.25,1825.0156 1232.9844,1825.0156 C1232.7656,1825.0156 1232.5313,1824.9063 1232.3906,1824.7656 C1232.25,1824.6406 1232.2188,1824.5156 1232.1563,1824.1094 C1232.0625,1823.7031 1231.8906,1823.4844 1231.4063,1823.2031 C1230.9375,1822.9531 1230.3281,1822.7969 1229.75,1822.7969 C1228.0156,1822.7969 1226.7656,1824.1094 1226.7656,1825.8906 L1226.7656,1826.9844 C1226.7656,1828.6875 1228.0625,1829.7813 1230.1094,1829.7813 C1230.875,1829.7813 1231.5625,1829.6563 1231.9844,1829.3906 C1232.1719,1829.2969 1232.1719,1829.2969 1232.625,1828.8125 C1232.8125,1828.625 1233.0156,1828.5469 1233.2344,1828.5469 C1233.7031,1828.5469 1234.0938,1828.9375 1234.0938,1829.3906 C1234.0938,1829.7813 1233.7656,1830.2344 1233.1875,1830.6406 C1232.4375,1831.1875 1231.2813,1831.4844 1230.0625,1831.4844 C1227.1719,1831.4844 1225.0625,1829.5938 1225.0625,1827.0156 L1225.0625,1825.8906 C1225.0625,1823.1719 1227.0625,1821.0938 1229.6875,1821.0938 C1230.5625,1821.0938 1231.1563,1821.2344 1232.0938,1821.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="67" x="1250.25" y="1830.1543">RtypeInput</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="913.5" x2="1621.5" y1="1842" y2="1842"/><ellipse cx="923.5" cy="1853.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="932.5" y="1856.2104">value_type : using</text><ellipse cx="923.5" cy="1866.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="932.5" y="1869.0151">Charge : value_type</text><ellipse cx="923.5" cy="1879.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="932.5" y="1881.8198">Down : value_type</text><ellipse cx="923.5" cy="1892.3164" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="932.5" y="1894.6245">Fire : value_type</text><ellipse cx="923.5" cy="1905.1211" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="932.5" y="1907.4292">Left : value_type</text><ellipse cx="923.5" cy="1917.9258" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="932.5" y="1920.2339">Right : value_type</text><ellipse cx="923.5" cy="1930.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="932.5" y="1933.0386">Up : value_type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="913.5" x2="1621.5" y1="1939.6328" y2="1939.6328"/><ellipse cx="923.5" cy="1951.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="932.5" y="1953.8433">RtypeInput()</text><ellipse cx="923.5" cy="1964.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="684" x="932.5" y="1966.6479">RtypeInput(value_type vUp, value_type vDown, value_type vLeft, value_type vRight, value_type vFire, value_type vCharge)</text><ellipse cx="923.5" cy="1977.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="932.5" y="1979.4526">RtypeInput(const RtypeInput&amp; input)</text><!--class SendTask--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="201.6563" id="SendTask" style="stroke: #A80036; stroke-width: 1.5;" width="886" x="1657.5" y="1797"/><ellipse cx="2065.75" cy="1813" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2068.0938,1808.6719 L2068.2656,1808.75 C2068.4844,1808.4375 2068.6875,1808.3438 2068.9844,1808.3438 C2069.2813,1808.3438 2069.5625,1808.4844 2069.7188,1808.75 C2069.8125,1808.9063 2069.8281,1809.0313 2069.8281,1809.4688 L2069.8281,1810.8906 C2069.8281,1811.3125 2069.7969,1811.5 2069.6875,1811.6563 C2069.5156,1811.875 2069.25,1812.0156 2068.9844,1812.0156 C2068.7656,1812.0156 2068.5313,1811.9063 2068.3906,1811.7656 C2068.25,1811.6406 2068.2188,1811.5156 2068.1563,1811.1094 C2068.0625,1810.7031 2067.8906,1810.4844 2067.4063,1810.2031 C2066.9375,1809.9531 2066.3281,1809.7969 2065.75,1809.7969 C2064.0156,1809.7969 2062.7656,1811.1094 2062.7656,1812.8906 L2062.7656,1813.9844 C2062.7656,1815.6875 2064.0625,1816.7813 2066.1094,1816.7813 C2066.875,1816.7813 2067.5625,1816.6563 2067.9844,1816.3906 C2068.1719,1816.2969 2068.1719,1816.2969 2068.625,1815.8125 C2068.8125,1815.625 2069.0156,1815.5469 2069.2344,1815.5469 C2069.7031,1815.5469 2070.0938,1815.9375 2070.0938,1816.3906 C2070.0938,1816.7813 2069.7656,1817.2344 2069.1875,1817.6406 C2068.4375,1818.1875 2067.2813,1818.4844 2066.0625,1818.4844 C2063.1719,1818.4844 2061.0625,1816.5938 2061.0625,1814.0156 L2061.0625,1812.8906 C2061.0625,1810.1719 2063.0625,1808.0938 2065.6875,1808.0938 C2066.5625,1808.0938 2067.1563,1808.2344 2068.0938,1808.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="2086.25" y="1817.1543">SendTask</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1658.5" x2="2542.5" y1="1829" y2="1829"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1665.5" y="1837.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="1677.5" y="1843.2104">_sender : std::shared_ptr&lt;rnetwork::ISender&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1665.5" y="1850.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="1677.5" y="1856.0151">_packet : std::shared_ptr&lt;rnetwork::packet::IPacket&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1658.5" x2="2542.5" y1="1862.6094" y2="1862.6094"/><ellipse cx="1668.5" cy="1874.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="860" x="1677.5" y="1876.8198">SendTask(std::shared_ptr&lt;rnetwork::ISender&gt; sender, std::shared_ptr&lt;rnetwork::packet::IPacket&gt; packet, const std::function&lt;void(bool)&gt;&amp; callback)</text><ellipse cx="1668.5" cy="1887.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="1677.5" y="1889.6245">SendTask(const SendTask&amp; sendTask)</text><ellipse cx="1668.5" cy="1900.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1677.5" y="1902.4292">~SendTask()</text><ellipse cx="1668.5" cy="1912.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304" x="1677.5" y="1915.2339">operator=(const SendTask&amp; sendTask) : SendTask&amp;</text><ellipse cx="1668.5" cy="1925.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="1677.5" y="1928.0386">available() : bool {query}</text><ellipse cx="1668.5" cy="1938.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="1677.5" y="1940.8433">service() : rnetwork::services::NetworkService&amp; {query}</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1665.5" y="1948.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1677.5" y="1953.6479">&lt;void(bool) : std::function</text><ellipse cx="1668.5" cy="1964.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1677.5" y="1966.4526">operator()() : void</text><ellipse cx="1668.5" cy="1976.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1677.5" y="1979.2573">registerService() : void {query}</text><ellipse cx="1668.5" cy="1989.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="1677.5" y="1992.062">unregisterService() : void {query}</text><!--class Server--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="214.4609" id="Server" style="stroke: #A80036; stroke-width: 1.5;" width="606" x="3602.5" y="1018"/><ellipse cx="3881.25" cy="1034" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3883.5938,1029.6719 L3883.7656,1029.75 C3883.9844,1029.4375 3884.1875,1029.3438 3884.4844,1029.3438 C3884.7813,1029.3438 3885.0625,1029.4844 3885.2188,1029.75 C3885.3125,1029.9063 3885.3281,1030.0313 3885.3281,1030.4688 L3885.3281,1031.8906 C3885.3281,1032.3125 3885.2969,1032.5 3885.1875,1032.6563 C3885.0156,1032.875 3884.75,1033.0156 3884.4844,1033.0156 C3884.2656,1033.0156 3884.0313,1032.9063 3883.8906,1032.7656 C3883.75,1032.6406 3883.7188,1032.5156 3883.6563,1032.1094 C3883.5625,1031.7031 3883.3906,1031.4844 3882.9063,1031.2031 C3882.4375,1030.9531 3881.8281,1030.7969 3881.25,1030.7969 C3879.5156,1030.7969 3878.2656,1032.1094 3878.2656,1033.8906 L3878.2656,1034.9844 C3878.2656,1036.6875 3879.5625,1037.7813 3881.6094,1037.7813 C3882.375,1037.7813 3883.0625,1037.6563 3883.4844,1037.3906 C3883.6719,1037.2969 3883.6719,1037.2969 3884.125,1036.8125 C3884.3125,1036.625 3884.5156,1036.5469 3884.7344,1036.5469 C3885.2031,1036.5469 3885.5938,1036.9375 3885.5938,1037.3906 C3885.5938,1037.7813 3885.2656,1038.2344 3884.6875,1038.6406 C3883.9375,1039.1875 3882.7813,1039.4844 3881.5625,1039.4844 C3878.6719,1039.4844 3876.5625,1037.5938 3876.5625,1035.0156 L3876.5625,1033.8906 C3876.5625,1031.1719 3878.5625,1029.0938 3881.1875,1029.0938 C3882.0625,1029.0938 3882.6563,1029.2344 3883.5938,1029.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="3901.75" y="1038.1543">Server</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3603.5" x2="4207.5" y1="1050" y2="1050"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3610.5" y="1058.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="3622.5" y="1064.2104">_socket : SOCKET</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3610.5" y="1071.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="3622.5" y="1077.0151">_ioService : rnetwork::async::IOService&amp;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3603.5" x2="4207.5" y1="1083.6094" y2="1083.6094"/><ellipse cx="3613.5" cy="1095.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="3622.5" y="1097.8198">Server(rnetwork::async::IOService&amp; ioService)</text><ellipse cx="3613.5" cy="1108.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="478" x="3622.5" y="1110.6245">Server(rnetwork::async::IOService&amp; ioService, const rnetwork::Endpoint&amp; endpoint)</text><ellipse cx="3613.5" cy="1121.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="3622.5" y="1123.4292">Server(const Server&amp; server)</text><ellipse cx="3613.5" cy="1133.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="3622.5" y="1136.2339">~Server()</text><ellipse cx="3613.5" cy="1146.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="3622.5" y="1149.0386">socket() : SOCKET {query}</text><ellipse cx="3613.5" cy="1159.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="3622.5" y="1161.8433">operator=(const Server&amp; server) : Server&amp;</text><ellipse cx="3613.5" cy="1172.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="3622.5" y="1174.6479">bind(const rnetwork::Endpoint&amp; endpoint) : bool</text><ellipse cx="3613.5" cy="1185.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="3622.5" y="1187.4526">ioService() : rnetwork::async::IOService&amp;</text><ellipse cx="3613.5" cy="1197.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="410" x="3622.5" y="1200.2573">receive(bool&amp; status) : std::shared_ptr&lt;rnetwork::packet::PacketBase&gt;</text><ellipse cx="3613.5" cy="1210.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="3622.5" y="1213.062">receive() : std::shared_ptr&lt;rnetwork::packet::PacketBase&gt;</text><ellipse cx="3613.5" cy="1223.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="580" x="3622.5" y="1225.8667">async_receive(const std::function&lt;void(rnetwork::packet::PacketBase&amp;,boolstatus)&gt;&amp; callback) : void</text><!--class ServerID--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="60.8047" id="ServerID" style="stroke: #A80036; stroke-width: 1.5;" width="100" x="2578.5" y="1867.5"/><ellipse cx="2600.7" cy="1883.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2603.0438,1879.1719 L2603.2156,1879.25 C2603.4344,1878.9375 2603.6375,1878.8438 2603.9344,1878.8438 C2604.2313,1878.8438 2604.5125,1878.9844 2604.6688,1879.25 C2604.7625,1879.4063 2604.7781,1879.5313 2604.7781,1879.9688 L2604.7781,1881.3906 C2604.7781,1881.8125 2604.7469,1882 2604.6375,1882.1563 C2604.4656,1882.375 2604.2,1882.5156 2603.9344,1882.5156 C2603.7156,1882.5156 2603.4813,1882.4063 2603.3406,1882.2656 C2603.2,1882.1406 2603.1688,1882.0156 2603.1063,1881.6094 C2603.0125,1881.2031 2602.8406,1880.9844 2602.3563,1880.7031 C2601.8875,1880.4531 2601.2781,1880.2969 2600.7,1880.2969 C2598.9656,1880.2969 2597.7156,1881.6094 2597.7156,1883.3906 L2597.7156,1884.4844 C2597.7156,1886.1875 2599.0125,1887.2813 2601.0594,1887.2813 C2601.825,1887.2813 2602.5125,1887.1563 2602.9344,1886.8906 C2603.1219,1886.7969 2603.1219,1886.7969 2603.575,1886.3125 C2603.7625,1886.125 2603.9656,1886.0469 2604.1844,1886.0469 C2604.6531,1886.0469 2605.0438,1886.4375 2605.0438,1886.8906 C2605.0438,1887.2813 2604.7156,1887.7344 2604.1375,1888.1406 C2603.3875,1888.6875 2602.2313,1888.9844 2601.0125,1888.9844 C2598.1219,1888.9844 2596.0125,1887.0938 2596.0125,1884.5156 L2596.0125,1883.3906 C2596.0125,1880.6719 2598.0125,1878.5938 2600.6375,1878.5938 C2601.5125,1878.5938 2602.1063,1878.7344 2603.0438,1879.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="2616.3" y="1887.6543">ServerID</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2579.5" x2="2677.5" y1="1899.5" y2="1899.5"/><ellipse cx="2589.5" cy="1911.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="2598.5" y="1913.7104">value : size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2579.5" x2="2677.5" y1="1920.3047" y2="1920.3047"/><!--class SinglePlayerMenuHandler--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="SinglePlayerMenuHandler" style="stroke: #A80036; stroke-width: 1.5;" width="337" x="7825" y="1855"/><ellipse cx="7909.75" cy="1871" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M7912.0938,1866.6719 L7912.2656,1866.75 C7912.4844,1866.4375 7912.6875,1866.3438 7912.9844,1866.3438 C7913.2813,1866.3438 7913.5625,1866.4844 7913.7188,1866.75 C7913.8125,1866.9063 7913.8281,1867.0313 7913.8281,1867.4688 L7913.8281,1868.8906 C7913.8281,1869.3125 7913.7969,1869.5 7913.6875,1869.6563 C7913.5156,1869.875 7913.25,1870.0156 7912.9844,1870.0156 C7912.7656,1870.0156 7912.5313,1869.9063 7912.3906,1869.7656 C7912.25,1869.6406 7912.2188,1869.5156 7912.1563,1869.1094 C7912.0625,1868.7031 7911.8906,1868.4844 7911.4063,1868.2031 C7910.9375,1867.9531 7910.3281,1867.7969 7909.75,1867.7969 C7908.0156,1867.7969 7906.7656,1869.1094 7906.7656,1870.8906 L7906.7656,1871.9844 C7906.7656,1873.6875 7908.0625,1874.7813 7910.1094,1874.7813 C7910.875,1874.7813 7911.5625,1874.6563 7911.9844,1874.3906 C7912.1719,1874.2969 7912.1719,1874.2969 7912.625,1873.8125 C7912.8125,1873.625 7913.0156,1873.5469 7913.2344,1873.5469 C7913.7031,1873.5469 7914.0938,1873.9375 7914.0938,1874.3906 C7914.0938,1874.7813 7913.7656,1875.2344 7913.1875,1875.6406 C7912.4375,1876.1875 7911.2813,1876.4844 7910.0625,1876.4844 C7907.1719,1876.4844 7905.0625,1874.5938 7905.0625,1872.0156 L7905.0625,1870.8906 C7905.0625,1868.1719 7907.0625,1866.0938 7909.6875,1866.0938 C7910.5625,1866.0938 7911.1563,1866.2344 7912.0938,1866.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="159" x="7930.25" y="1875.1543">SinglePlayerMenuHandler</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7826" x2="8161" y1="1887" y2="1887"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7826" x2="8161" y1="1895" y2="1895"/><ellipse cx="7836" cy="1906.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="7845" y="1909.2104">SinglePlayerMenuHandler(StateType&amp; requestedState)</text><ellipse cx="7836" cy="1919.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="7845" y="1922.0151">~SinglePlayerMenuHandler()</text><ellipse cx="7836" cy="1932.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="7845" y="1934.8198">draw() : void</text><!--class Size--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="Size" style="stroke: #A80036; stroke-width: 1.5;" width="278" x="2713.5" y="1848.5"/><ellipse cx="2836.25" cy="1864.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2838.5938,1860.1719 L2838.7656,1860.25 C2838.9844,1859.9375 2839.1875,1859.8438 2839.4844,1859.8438 C2839.7813,1859.8438 2840.0625,1859.9844 2840.2188,1860.25 C2840.3125,1860.4063 2840.3281,1860.5313 2840.3281,1860.9688 L2840.3281,1862.3906 C2840.3281,1862.8125 2840.2969,1863 2840.1875,1863.1563 C2840.0156,1863.375 2839.75,1863.5156 2839.4844,1863.5156 C2839.2656,1863.5156 2839.0313,1863.4063 2838.8906,1863.2656 C2838.75,1863.1406 2838.7188,1863.0156 2838.6563,1862.6094 C2838.5625,1862.2031 2838.3906,1861.9844 2837.9063,1861.7031 C2837.4375,1861.4531 2836.8281,1861.2969 2836.25,1861.2969 C2834.5156,1861.2969 2833.2656,1862.6094 2833.2656,1864.3906 L2833.2656,1865.4844 C2833.2656,1867.1875 2834.5625,1868.2813 2836.6094,1868.2813 C2837.375,1868.2813 2838.0625,1868.1563 2838.4844,1867.8906 C2838.6719,1867.7969 2838.6719,1867.7969 2839.125,1867.3125 C2839.3125,1867.125 2839.5156,1867.0469 2839.7344,1867.0469 C2840.2031,1867.0469 2840.5938,1867.4375 2840.5938,1867.8906 C2840.5938,1868.2813 2840.2656,1868.7344 2839.6875,1869.1406 C2838.9375,1869.6875 2837.7813,1869.9844 2836.5625,1869.9844 C2833.6719,1869.9844 2831.5625,1868.0938 2831.5625,1865.5156 L2831.5625,1864.3906 C2831.5625,1861.6719 2833.5625,1859.5938 2836.1875,1859.5938 C2837.0625,1859.5938 2837.6563,1859.7344 2838.5938,1860.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="2856.75" y="1868.6543">Size</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2714.5" x2="2990.5" y1="1880.5" y2="1880.5"/><ellipse cx="2724.5" cy="1892.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="2733.5" y="1894.7104">height : unsigned int</text><ellipse cx="2724.5" cy="1905.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="2733.5" y="1907.5151">width : unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2714.5" x2="2990.5" y1="1914.1094" y2="1914.1094"/><ellipse cx="2724.5" cy="1926.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="2733.5" y="1928.3198">Size(unsigned int width, unsigned int height)</text><ellipse cx="2724.5" cy="1938.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="31" x="2733.5" y="1941.1245">Size()</text><!--class Speed--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="99.2188" id="Speed" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="3026.5" y="1848.5"/><ellipse cx="3112.25" cy="1864.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3114.5938,1860.1719 L3114.7656,1860.25 C3114.9844,1859.9375 3115.1875,1859.8438 3115.4844,1859.8438 C3115.7813,1859.8438 3116.0625,1859.9844 3116.2188,1860.25 C3116.3125,1860.4063 3116.3281,1860.5313 3116.3281,1860.9688 L3116.3281,1862.3906 C3116.3281,1862.8125 3116.2969,1863 3116.1875,1863.1563 C3116.0156,1863.375 3115.75,1863.5156 3115.4844,1863.5156 C3115.2656,1863.5156 3115.0313,1863.4063 3114.8906,1863.2656 C3114.75,1863.1406 3114.7188,1863.0156 3114.6563,1862.6094 C3114.5625,1862.2031 3114.3906,1861.9844 3113.9063,1861.7031 C3113.4375,1861.4531 3112.8281,1861.2969 3112.25,1861.2969 C3110.5156,1861.2969 3109.2656,1862.6094 3109.2656,1864.3906 L3109.2656,1865.4844 C3109.2656,1867.1875 3110.5625,1868.2813 3112.6094,1868.2813 C3113.375,1868.2813 3114.0625,1868.1563 3114.4844,1867.8906 C3114.6719,1867.7969 3114.6719,1867.7969 3115.125,1867.3125 C3115.3125,1867.125 3115.5156,1867.0469 3115.7344,1867.0469 C3116.2031,1867.0469 3116.5938,1867.4375 3116.5938,1867.8906 C3116.5938,1868.2813 3116.2656,1868.7344 3115.6875,1869.1406 C3114.9375,1869.6875 3113.7813,1869.9844 3112.5625,1869.9844 C3109.6719,1869.9844 3107.5625,1868.0938 3107.5625,1865.5156 L3107.5625,1864.3906 C3107.5625,1861.6719 3109.5625,1859.5938 3112.1875,1859.5938 C3113.0625,1859.5938 3113.6563,1859.7344 3114.5938,1860.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="40" x="3132.75" y="1868.6543">Speed</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3027.5" x2="3245.5" y1="1880.5" y2="1880.5"/><ellipse cx="3037.5" cy="1892.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="3046.5" y="1894.7104">x : float</text><ellipse cx="3037.5" cy="1905.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="3046.5" y="1907.5151">y : float</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3027.5" x2="3245.5" y1="1914.1094" y2="1914.1094"/><ellipse cx="3037.5" cy="1926.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="3046.5" y="1928.3198">Speed()</text><ellipse cx="3037.5" cy="1938.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="3046.5" y="1941.1245">Speed(float speedX, float speedY)</text><!--class Square--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="86.4141" id="Square" style="stroke: #A80036; stroke-width: 1.5;" width="599" x="7736" y="155.5"/><ellipse cx="8008.75" cy="171.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M8011.0938,167.1719 L8011.2656,167.25 C8011.4844,166.9375 8011.6875,166.8438 8011.9844,166.8438 C8012.2813,166.8438 8012.5625,166.9844 8012.7188,167.25 C8012.8125,167.4063 8012.8281,167.5313 8012.8281,167.9688 L8012.8281,169.3906 C8012.8281,169.8125 8012.7969,170 8012.6875,170.1563 C8012.5156,170.375 8012.25,170.5156 8011.9844,170.5156 C8011.7656,170.5156 8011.5313,170.4063 8011.3906,170.2656 C8011.25,170.1406 8011.2188,170.0156 8011.1563,169.6094 C8011.0625,169.2031 8010.8906,168.9844 8010.4063,168.7031 C8009.9375,168.4531 8009.3281,168.2969 8008.75,168.2969 C8007.0156,168.2969 8005.7656,169.6094 8005.7656,171.3906 L8005.7656,172.4844 C8005.7656,174.1875 8007.0625,175.2813 8009.1094,175.2813 C8009.875,175.2813 8010.5625,175.1563 8010.9844,174.8906 C8011.1719,174.7969 8011.1719,174.7969 8011.625,174.3125 C8011.8125,174.125 8012.0156,174.0469 8012.2344,174.0469 C8012.7031,174.0469 8013.0938,174.4375 8013.0938,174.8906 C8013.0938,175.2813 8012.7656,175.7344 8012.1875,176.1406 C8011.4375,176.6875 8010.2813,176.9844 8009.0625,176.9844 C8006.1719,176.9844 8004.0625,175.0938 8004.0625,172.5156 L8004.0625,171.3906 C8004.0625,168.6719 8006.0625,166.5938 8008.6875,166.5938 C8009.5625,166.5938 8010.1563,166.7344 8011.0938,167.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="45" x="8029.25" y="175.6543">Square</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7737" x2="8334" y1="187.5" y2="187.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="7744" y="196.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="7756" y="201.7104">_id : static rtype::ct::PlayerID</text><line style="stroke: #000000; stroke-width: 1.0;" x1="7756" x2="7920" y1="203.7104" y2="203.7104"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7737" x2="8334" y1="208.3047" y2="208.3047"/><ellipse cx="7747" cy="220.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="573" x="7756" y="222.5151">make(ecs::Manager&amp; mgr, rtype::ct::PlayerID::Id id, float posx, float posy, unsigned int sprite) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="7756" x2="8329" y1="224.5151" y2="224.5151"/><ellipse cx="7747" cy="233.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="482" x="7756" y="235.3198">make_net(ecs::Manager&amp; mgr, rtype::ct::PlayerID::Id id, float posx, float posy) : bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="7756" x2="8238" y1="237.3198" y2="237.3198"/><!--class Star--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="48" id="Star" style="stroke: #A80036; stroke-width: 1.5;" width="58" x="3281.5" y="1874"/><ellipse cx="3296.5" cy="1890" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3298.8438,1885.6719 L3299.0156,1885.75 C3299.2344,1885.4375 3299.4375,1885.3438 3299.7344,1885.3438 C3300.0313,1885.3438 3300.3125,1885.4844 3300.4688,1885.75 C3300.5625,1885.9063 3300.5781,1886.0313 3300.5781,1886.4688 L3300.5781,1887.8906 C3300.5781,1888.3125 3300.5469,1888.5 3300.4375,1888.6563 C3300.2656,1888.875 3300,1889.0156 3299.7344,1889.0156 C3299.5156,1889.0156 3299.2813,1888.9063 3299.1406,1888.7656 C3299,1888.6406 3298.9688,1888.5156 3298.9063,1888.1094 C3298.8125,1887.7031 3298.6406,1887.4844 3298.1563,1887.2031 C3297.6875,1886.9531 3297.0781,1886.7969 3296.5,1886.7969 C3294.7656,1886.7969 3293.5156,1888.1094 3293.5156,1889.8906 L3293.5156,1890.9844 C3293.5156,1892.6875 3294.8125,1893.7813 3296.8594,1893.7813 C3297.625,1893.7813 3298.3125,1893.6563 3298.7344,1893.3906 C3298.9219,1893.2969 3298.9219,1893.2969 3299.375,1892.8125 C3299.5625,1892.625 3299.7656,1892.5469 3299.9844,1892.5469 C3300.4531,1892.5469 3300.8438,1892.9375 3300.8438,1893.3906 C3300.8438,1893.7813 3300.5156,1894.2344 3299.9375,1894.6406 C3299.1875,1895.1875 3298.0313,1895.4844 3296.8125,1895.4844 C3293.9219,1895.4844 3291.8125,1893.5938 3291.8125,1891.0156 L3291.8125,1889.8906 C3291.8125,1887.1719 3293.8125,1885.0938 3296.4375,1885.0938 C3297.3125,1885.0938 3297.9063,1885.2344 3298.8438,1885.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="26" x="3310.5" y="1894.1543">Star</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3282.5" x2="3338.5" y1="1906" y2="1906"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3282.5" x2="3338.5" y1="1914" y2="1914"/><!--class StringPacket--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="188.8516" id="StringPacket" style="stroke: #A80036; stroke-width: 1.5;" width="375" x="254" y="2059"/><ellipse cx="397.25" cy="2075" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M399.5938,2070.6719 L399.7656,2070.75 C399.9844,2070.4375 400.1875,2070.3438 400.4844,2070.3438 C400.7813,2070.3438 401.0625,2070.4844 401.2188,2070.75 C401.3125,2070.9063 401.3281,2071.0313 401.3281,2071.4688 L401.3281,2072.8906 C401.3281,2073.3125 401.2969,2073.5 401.1875,2073.6563 C401.0156,2073.875 400.75,2074.0156 400.4844,2074.0156 C400.2656,2074.0156 400.0313,2073.9063 399.8906,2073.7656 C399.75,2073.6406 399.7188,2073.5156 399.6563,2073.1094 C399.5625,2072.7031 399.3906,2072.4844 398.9063,2072.2031 C398.4375,2071.9531 397.8281,2071.7969 397.25,2071.7969 C395.5156,2071.7969 394.2656,2073.1094 394.2656,2074.8906 L394.2656,2075.9844 C394.2656,2077.6875 395.5625,2078.7813 397.6094,2078.7813 C398.375,2078.7813 399.0625,2078.6563 399.4844,2078.3906 C399.6719,2078.2969 399.6719,2078.2969 400.125,2077.8125 C400.3125,2077.625 400.5156,2077.5469 400.7344,2077.5469 C401.2031,2077.5469 401.5938,2077.9375 401.5938,2078.3906 C401.5938,2078.7813 401.2656,2079.2344 400.6875,2079.6406 C399.9375,2080.1875 398.7813,2080.4844 397.5625,2080.4844 C394.6719,2080.4844 392.5625,2078.5938 392.5625,2076.0156 L392.5625,2074.8906 C392.5625,2072.1719 394.5625,2070.0938 397.1875,2070.0938 C398.0625,2070.0938 398.6563,2070.2344 399.5938,2070.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="80" x="417.75" y="2079.1543">StringPacket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="255" x2="628" y1="2091" y2="2091"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="262" y="2099.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="274" y="2105.2104">_from : rnetwork::Endpoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="262" y="2112.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="274" y="2118.0151">_data : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="255" x2="628" y1="2124.6094" y2="2124.6094"/><ellipse cx="265" cy="2136.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="274" y="2138.8198">StringPacket(const std::string&amp; string)</text><ellipse cx="265" cy="2149.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="274" y="2151.6245">StringPacket(const StringPacket&amp; stringPacket)</text><ellipse cx="265" cy="2162.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="274" y="2164.4292">~StringPacket()</text><ellipse cx="265" cy="2174.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="274" y="2177.2339">operator=(const StringPacket&amp; stringPacket) : StringPacket&amp;</text><ellipse cx="265" cy="2187.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="274" y="2190.0386">from() : rnetwork::Endpoint&amp; {query}</text><ellipse cx="265" cy="2200.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="274" y="2202.8433">snapshot() : std::shared_ptr&lt;IPacket&gt; {query}</text><ellipse cx="265" cy="2213.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="274" y="2215.6479">size() : std::size_t {query}</text><ellipse cx="265" cy="2226.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="274" y="2228.4526">str() : std::string&amp; {query}</text><ellipse cx="265" cy="2238.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="274" y="2241.2573">raw() : unsigned char* {query}</text><!--class Text--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="137.6328" id="Text" style="stroke: #A80036; stroke-width: 1.5;" width="312" x="664.5" y="2084.5"/><ellipse cx="803.25" cy="2100.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M805.5938,2096.1719 L805.7656,2096.25 C805.9844,2095.9375 806.1875,2095.8438 806.4844,2095.8438 C806.7813,2095.8438 807.0625,2095.9844 807.2188,2096.25 C807.3125,2096.4063 807.3281,2096.5313 807.3281,2096.9688 L807.3281,2098.3906 C807.3281,2098.8125 807.2969,2099 807.1875,2099.1563 C807.0156,2099.375 806.75,2099.5156 806.4844,2099.5156 C806.2656,2099.5156 806.0313,2099.4063 805.8906,2099.2656 C805.75,2099.1406 805.7188,2099.0156 805.6563,2098.6094 C805.5625,2098.2031 805.3906,2097.9844 804.9063,2097.7031 C804.4375,2097.4531 803.8281,2097.2969 803.25,2097.2969 C801.5156,2097.2969 800.2656,2098.6094 800.2656,2100.3906 L800.2656,2101.4844 C800.2656,2103.1875 801.5625,2104.2813 803.6094,2104.2813 C804.375,2104.2813 805.0625,2104.1563 805.4844,2103.8906 C805.6719,2103.7969 805.6719,2103.7969 806.125,2103.3125 C806.3125,2103.125 806.5156,2103.0469 806.7344,2103.0469 C807.2031,2103.0469 807.5938,2103.4375 807.5938,2103.8906 C807.5938,2104.2813 807.2656,2104.7344 806.6875,2105.1406 C805.9375,2105.6875 804.7813,2105.9844 803.5625,2105.9844 C800.6719,2105.9844 798.5625,2104.0938 798.5625,2101.5156 L798.5625,2100.3906 C798.5625,2097.6719 800.5625,2095.5938 803.1875,2095.5938 C804.0625,2095.5938 804.6563,2095.7344 805.5938,2096.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="26" x="823.75" y="2104.6543">Text</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="665.5" x2="975.5" y1="2116.5" y2="2116.5"/><ellipse cx="675.5" cy="2128.4023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="684.5" y="2130.7104">color : sf::Color</text><ellipse cx="675.5" cy="2141.207" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="684.5" y="2143.5151">content : std::string</text><ellipse cx="675.5" cy="2154.0117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="684.5" y="2156.3198">font : unsigned int</text><ellipse cx="675.5" cy="2166.8164" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="684.5" y="2169.1245">size : unsigned int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="665.5" x2="975.5" y1="2175.7188" y2="2175.7188"/><ellipse cx="675.5" cy="2187.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="32" x="684.5" y="2189.9292">Text()</text><ellipse cx="675.5" cy="2200.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="684.5" y="2202.7339">Text(unsigned int font, const std::string&amp; content)</text><ellipse cx="675.5" cy="2213.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="684.5" y="2215.5386">Text(const std::string&amp; content)</text><!--class Type--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="60.8047" id="Type" style="stroke: #A80036; stroke-width: 1.5;" width="163" x="6289" y="168"/><ellipse cx="6351.75" cy="184" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M6354.0938,179.6719 L6354.2656,179.75 C6354.4844,179.4375 6354.6875,179.3438 6354.9844,179.3438 C6355.2813,179.3438 6355.5625,179.4844 6355.7188,179.75 C6355.8125,179.9063 6355.8281,180.0313 6355.8281,180.4688 L6355.8281,181.8906 C6355.8281,182.3125 6355.7969,182.5 6355.6875,182.6563 C6355.5156,182.875 6355.25,183.0156 6354.9844,183.0156 C6354.7656,183.0156 6354.5313,182.9063 6354.3906,182.7656 C6354.25,182.6406 6354.2188,182.5156 6354.1563,182.1094 C6354.0625,181.7031 6353.8906,181.4844 6353.4063,181.2031 C6352.9375,180.9531 6352.3281,180.7969 6351.75,180.7969 C6350.0156,180.7969 6348.7656,182.1094 6348.7656,183.8906 L6348.7656,184.9844 C6348.7656,186.6875 6350.0625,187.7813 6352.1094,187.7813 C6352.875,187.7813 6353.5625,187.6563 6353.9844,187.3906 C6354.1719,187.2969 6354.1719,187.2969 6354.625,186.8125 C6354.8125,186.625 6355.0156,186.5469 6355.2344,186.5469 C6355.7031,186.5469 6356.0938,186.9375 6356.0938,187.3906 C6356.0938,187.7813 6355.7656,188.2344 6355.1875,188.6406 C6354.4375,189.1875 6353.2813,189.4844 6352.0625,189.4844 C6349.1719,189.4844 6347.0625,187.5938 6347.0625,185.0156 L6347.0625,183.8906 C6347.0625,181.1719 6349.0625,179.0938 6351.6875,179.0938 C6352.5625,179.0938 6353.1563,179.2344 6354.0938,179.6719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="6372.25" y="188.1543">Type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6290" x2="6451" y1="200" y2="200"/><ellipse cx="6300" cy="211.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="6309" y="214.2104">value : rtype::EntityType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="6290" x2="6451" y1="220.8047" y2="220.8047"/><!--class Weapon--><rect fill="#FEFECE" filter="url(#f168knd8lvi1dh)" height="73.6094" id="Weapon" style="stroke: #A80036; stroke-width: 1.5;" width="349" x="1012" y="2116.5"/><ellipse cx="1156.75" cy="2132.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1159.0938,2128.1719 L1159.2656,2128.25 C1159.4844,2127.9375 1159.6875,2127.8438 1159.9844,2127.8438 C1160.2813,2127.8438 1160.5625,2127.9844 1160.7188,2128.25 C1160.8125,2128.4063 1160.8281,2128.5313 1160.8281,2128.9688 L1160.8281,2130.3906 C1160.8281,2130.8125 1160.7969,2131 1160.6875,2131.1563 C1160.5156,2131.375 1160.25,2131.5156 1159.9844,2131.5156 C1159.7656,2131.5156 1159.5313,2131.4063 1159.3906,2131.2656 C1159.25,2131.1406 1159.2188,2131.0156 1159.1563,2130.6094 C1159.0625,2130.2031 1158.8906,2129.9844 1158.4063,2129.7031 C1157.9375,2129.4531 1157.3281,2129.2969 1156.75,2129.2969 C1155.0156,2129.2969 1153.7656,2130.6094 1153.7656,2132.3906 L1153.7656,2133.4844 C1153.7656,2135.1875 1155.0625,2136.2813 1157.1094,2136.2813 C1157.875,2136.2813 1158.5625,2136.1563 1158.9844,2135.8906 C1159.1719,2135.7969 1159.1719,2135.7969 1159.625,2135.3125 C1159.8125,2135.125 1160.0156,2135.0469 1160.2344,2135.0469 C1160.7031,2135.0469 1161.0938,2135.4375 1161.0938,2135.8906 C1161.0938,2136.2813 1160.7656,2136.7344 1160.1875,2137.1406 C1159.4375,2137.6875 1158.2813,2137.9844 1157.0625,2137.9844 C1154.1719,2137.9844 1152.0625,2136.0938 1152.0625,2133.5156 L1152.0625,2132.3906 C1152.0625,2129.6719 1154.0625,2127.5938 1156.6875,2127.5938 C1157.5625,2127.5938 1158.1563,2127.7344 1159.0938,2128.1719 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="1177.25" y="2136.6543">Weapon</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1013" x2="1360" y1="2148.5" y2="2148.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1013" x2="1360" y1="2156.5" y2="2156.5"/><ellipse cx="1023" cy="2168.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="1032" y="2170.7104">Weapon()</text><ellipse cx="1023" cy="2181.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="1032" y="2183.5151">Weapon(float interval, Direction direction, bool autoFired)</text><!--link AContext to Game--><path d="M4960.35,265.27 C4921.2,324.94 4861.39,416.12 4806.49,499.79 " fill="none" id="AContext-Game" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4954.73,261.07,4971.56,248.19,4966.44,268.75,4954.73,261.07" style="stroke: #A80036; stroke-width: 1.0;"/><!--link AContext to Menu--><path d="M5047.84,264.9 C5115.6,364.86 5243.74,553.88 5307.1,647.33 " fill="none" id="AContext-Menu" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5041.94,268.67,5036.51,248.19,5053.52,260.81,5041.94,268.67" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Generator_id to Generator_type_id--><path d="M7054.5,261.64 C7054.5,350.5 7054.5,514.28 7054.5,615.26 " fill="none" id="Generator_id-Generator_type_id" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="7047.5,261.52,7054.5,241.52,7061.5,261.52,7047.5,261.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--link IMenuHandler to MenuHandler--><path d="M6381.39,1181.89 C6364.91,1257.886 6335.71,1392.608 6320.07,1464.726 " fill="none" id="IMenuHandler-MenuHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6374.59,1180.17,6385.67,1162.11,6388.28,1183.14,6374.59,1180.17" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to CreditsHandler--><path d="M6262.26,1580.034 C6219.53,1632.73 6151.49,1703.733 6073.5,1737 C5840.57,1836.361 5176.68,1719.769 4935.5,1797 C4900.88,1808.088 4866.36,1828.742 4838.55,1848.414 " fill="none" id="MenuHandler-CreditsHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6256.79,1575.667,6274.69,1564.329,6267.76,1584.356,6256.79,1575.667" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to ExitHandler--><path d="M6261.83,1580.016 C6218.99,1632.456 6151.02,1703.1 6073.5,1737 C5728.14,1888.034 5583.41,1672.833 5227.5,1797 C5191.38,1809.6 5155.87,1833.596 5128.91,1854.923 " fill="none" id="MenuHandler-ExitHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6256.62,1575.316,6274.56,1564.044,6267.57,1584.045,6256.62,1575.316" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to GameStartingHandler--><path d="M6260.6,1579.97 C6217.45,1631.71 6149.68,1701.386 6073.5,1737 C5873.14,1830.662 5789.53,1727.684 5579.5,1797 C5538.62,1810.492 5496.56,1833.97 5463.82,1854.787 " fill="none" id="MenuHandler-GameStartingHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6255.39,1575.283,6273.46,1564.208,6266.24,1584.131,6255.39,1575.283" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to MainMenuHandler--><path d="M6255,1579.236 C6210.4,1628.048 6143.45,1694.087 6073.5,1737 C6006.63,1778.023 5978.23,1763.075 5907.5,1797 C5872.62,1813.728 5835.68,1835.829 5805.7,1854.998 " fill="none" id="MenuHandler-MainMenuHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6249.8,1574.546,6268.39,1564.365,6260.21,1583.913,6249.8,1574.546" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to MultiplayerLobbiesListingHandler--><path d="M6275.26,1582.483 C6236.39,1658.536 6173.9,1780.78 6139.4,1848.284 " fill="none" id="MenuHandler-MultiplayerLobbiesListingHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6269.27,1578.827,6284.61,1564.205,6281.74,1585.199,6269.27,1578.827" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to MultiplayerLobbyHandler--><path d="M6343.69,1582.396 C6381.35,1656.067 6441.2,1773.158 6476.28,1841.799 " fill="none" id="MenuHandler-MultiplayerLobbyHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6337.26,1585.199,6334.39,1564.205,6349.73,1578.827,6337.26,1585.199" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to MultiplayerMenuHandler--><path d="M6397.42,1575.397 C6501.44,1646.257 6673.72,1763.622 6778.89,1835.271 " fill="none" id="MenuHandler-MultiplayerMenuHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6393.3,1581.056,6380.71,1564.011,6401.18,1569.486,6393.3,1581.056" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to OptionsMenuHandler--><path d="M6461.99,1569.861 C6612.68,1624.413 6849.19,1712.285 7050.5,1797 C7065.16,1803.171 7080.3,1809.747 7095.44,1816.468 " fill="none" id="MenuHandler-OptionsMenuHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6459.57,1576.428,6443.14,1563.047,6464.32,1563.261,6459.57,1576.428" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to PlayMenuHandler--><path d="M6463.15,1536.614 C6691.77,1571.5 7132.07,1652.139 7481.5,1797 C7518.15,1812.194 7556.1,1834.992 7586.15,1854.986 " fill="none" id="MenuHandler-PlayMenuHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6462.1,1543.536,6443.37,1533.63,6464.19,1529.692,6462.1,1543.536" style="stroke: #A80036; stroke-width: 1.0;"/><!--link MenuHandler to SinglePlayerMenuHandler--><path d="M6463.27,1528.823 C6739.07,1556.107 7333.17,1630.381 7806.5,1797 C7848.35,1811.73 7892.23,1834.75 7926.96,1854.991 " fill="none" id="MenuHandler-SinglePlayerMenuHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="6462.4,1535.771,6443.17,1526.862,6463.76,1521.837,6462.4,1535.771" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ClientMasterChannel to Acceptor--><path d="M3374.86,880.29 C3348.92,926.99 3321.7,976 3298.53,1017.72 " fill="none" id="ClientMasterChannel-Acceptor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3381.25,868.79,3374.8385,872.0903,3375.4189,879.278,3381.8305,875.9777,3381.25,868.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ClientMasterChannel to ClientChannel--><path d="M3044.58,865.3 C2984.72,906.07 2931.2,956.35 2894.5,1018 C2845.85,1099.73 2830.75,1161.42 2894.5,1232 C2982.53,1329.475 3353.81,1265.719 3482.5,1292 C3591.56,1314.272 3707.68,1346.526 3813.86,1379.56 " fill="none" id="ClientMasterChannel-ClientChannel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3055.43,858.06,3048.2189,858.0622,3045.4474,864.7194,3052.6585,864.7172,3055.43,858.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ClientMasterChannel to Server--><path d="M3651.51,877.92 C3700.44,925.33 3752.01,975.29 3795.8,1017.72 " fill="none" id="ClientMasterChannel-Server" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3642.08,868.79,3643.6094,875.8371,3650.7026,877.1357,3649.1732,870.0887,3642.08,868.79" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ClientUdp to Client--><path d="M5795.5,242.33 C5795.5,289.39 5795.5,368.97 5795.5,448.84 " fill="none" id="ClientUdp-Client" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5795.5,229.09,5791.5,235.09,5795.5,241.09,5799.5,235.09,5795.5,229.09" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="5786.675" y="249.0468">2</text><!--link Drawable to Drawable--><path d="M6133.95,150.68 C6191.24,75.28 6270.5,91.22 6270.5,198.5 C6270.5,310.6 6183.97,322.97 6126.37,235.61 " fill="none" id="Drawable-Drawable" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6126.37,161.39,6133.0992,158.7981,6133.2949,151.5897,6126.5657,154.1816,6126.37,161.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Engine to ClientMasterChannel--><path d="M4057.78,363.73 C3960.95,419.77 3852.71,482.42 3755.91,538.45 " fill="none" id="Engine-ClientMasterChannel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4069.22,357.1,4062.0234,356.6431,4058.8337,363.1104,4066.0303,363.5673,4069.22,357.1" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="4047.8377" y="377.218">2</text><!--link Engine to Game--><path d="M4452.87,368.23 C4480.76,410.49 4510.98,456.27 4539.83,499.99 " fill="none" id="Engine-Game" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4445.64,357.27,4445.607,364.481,4452.2507,367.2849,4452.2836,360.0739,4445.64,357.27" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="4442.1776" y="376.8763">4</text><!--link Engine to Player--><path d="M4320.7,370.3 C4308.13,528.01 4306.18,766.14 4377.5,958 C4386.05,980.99 4399.02,1003.31 4413.53,1023.75 " fill="none" id="Engine-Player" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4321.79,357.19,4317.3092,362.84,4320.8011,369.1492,4325.2819,363.4992,4321.79,357.19" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="4312.7156" y="376.7927">2</text><!--link ExecService to ExecService--><path d="M6766.38,111.74 C6828.75,88.55 6889,117.47 6889,198.5 C6889,284.76 6820.74,311.96 6754.3,280.12 " fill="none" id="ExecService-ExecService" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6754.3,116.88,6761.3863,118.2156,6765.3447,112.188,6758.2583,110.8524,6754.3,116.88" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Game to Player--><path d="M4575.65,919.56 C4561.26,956.06 4547.47,992.33 4536.03,1023.98 " fill="none" id="Game-Player" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4580.55,907.18,4574.622,911.2859,4576.132,918.3371,4582.06,914.2312,4580.55,907.18" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="4569.0659" y="926.847">2</text><!--link Player to Game--><path d="M4564.01,1011.8 C4577.79,979.48 4592.61,943.19 4606.79,907.18 " fill="none" id="Player-Game" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4558.78,1023.98,4564.819,1020.0391,4563.5038,1012.9489,4557.4649,1016.8898,4558.78,1023.98" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="4554.2521" y="1013.095">2</text><!--link Game to RtypeCommand--><path d="M4819.03,917.96 C4842.71,952.69 4866.29,987.28 4887.19,1017.93 " fill="none" id="Game-RtypeCommand" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4811.68,907.18,4811.7569,914.3907,4818.4425,917.0931,4818.3656,909.8824,4811.68,907.18" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="4808.5021" y="926.847">2</text><!--link Handler to EnumClassHash--><path d="M5937.5,1181.43 C5937.5,1264.753 5937.5,1419.384 5937.5,1483.963 " fill="none" id="Handler-EnumClassHash" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5937.5,1168.21,5933.5,1174.21,5937.5,1180.21,5941.5,1174.21,5937.5,1168.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Handler to MenuHandler--><path d="M5987.38,1177.96 C6059.66,1253.248 6192.55,1391.679 6262.93,1464.99 " fill="none" id="Handler-MenuHandler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5978.02,1168.21,5979.2966,1175.3072,5986.3389,1176.8585,5985.0623,1169.7613,5978.02,1168.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Menu to FSM--><path d="M5344.5,772.9 C5344.5,857.92 5344.5,1000.88 5344.5,1075.44 " fill="none" id="Menu-FSM" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5344.5,759.77,5340.5,765.77,5344.5,771.77,5348.5,765.77,5344.5,759.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Menu to Handler--><path d="M5363.06,771.99 C5381.93,828.83 5416.48,908.56 5472.5,958 C5540.87,1018.33 5632.71,1057.19 5716.71,1082 " fill="none" id="Menu-Handler" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="5359.05,759.51,5357.0753,766.4455,5362.7178,770.9357,5364.6925,764.0002,5359.05,759.51" style="stroke: #A80036; stroke-width: 1.0;"/><!--link NetworkService to NetworkService--><path d="M7693.09,131.29 C7708.3,146.95 7717.5,169.36 7717.5,198.5 C7717.5,233.69 7704.08,259.05 7682.87,274.59 " fill="none" id="NetworkService-NetworkService" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="7682.87,122.41,7684.7702,129.3662,7691.9221,130.2877,7690.022,123.3315,7682.87,122.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Player to ClientChannel--><path d="M4418.7,1236.29 C4404.51,1253.914 4389.4,1272.683 4373.99,1291.824 " fill="none" id="Player-ClientChannel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4426.95,1226.04,4420.0731,1228.2099,4419.4312,1235.3924,4426.308,1233.2225,4426.95,1226.04" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Square to PlayerID--><path d="M8035.5,254.77 C8035.5,361.12 8035.5,590.95 8035.5,672.8 " fill="none" id="Square-PlayerID" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="8035.5,241.52,8031.5,247.52,8035.5,253.52,8039.5,247.52,8035.5,241.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Type to EntityType--><path d="M6370.5,242.18 C6370.5,344.42 6370.5,600.7 6370.5,679.25 " fill="none" id="Type-EntityType" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="6370.5,229.09,6366.5,235.09,6370.5,241.09,6374.5,235.09,6370.5,229.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Acceleration to AcceptError--><!--link AcceptError to AcceptTask--><!--link AcceptTask to BadBind--><!--link BadBind to BadHostname--><!--link BadHostname to BadListen--><!--link BadListen to Collide--><!--link Acceleration to Collide::CollideType--><!--link Collide::CollideType to ComponentStore--><!--link ComponentStore to ConnectionError--><!--link ConnectionError to Dead--><!--link Dead to DelayedTask--><!--link DelayedTask to ExecTask--><!--link ExecTask to FPS--><!--link Collide::CollideType to FSM::transition_table--><!--link FSM::transition_table to IOError--><!--link IOError to ImplDllLoader--><!--link ImplDllLoader to InfiniteTask--><!--link InfiniteTask to InvalidPacket--><!--link InvalidPacket to InvalidSocket--><!--link InvalidSocket to LittleEnemy--><!--link FSM::transition_table to MultiplayerLobbyHandler::Enemy--><!--link MultiplayerLobbyHandler::Enemy to MultiplayerLobbyHandler::Player--><!--link MultiplayerLobbyHandler::Player to NetworkHandler--><!--link NetworkHandler to PacketBase--><!--link PacketBase to Position--><!--link Position to RNETWORK_API--><!--link RNETWORK_API to RTECS_API--><!--link MultiplayerLobbyHandler::Enemy to ReceiveTask--><!--link ReceiveTask to RtypeInput--><!--link RtypeInput to SendTask--><!--link SendTask to ServerID--><!--link ServerID to Size--><!--link Size to Speed--><!--link Speed to Star--><!--link ReceiveTask to StringPacket--><!--link StringPacket to Text--><!--link Text to Weapon--><!--
@startuml
abstract class AContext {
	+AContext(sf::RenderWindow& window)
	+~AContext()
	#_window : sf::RenderWindow&
	+{abstract} run(sf::Time& time) : void
}

class Acceleration {
	+Acceleration(float x, float y)
	+x : float
	+y : float
}

class AcceptError {
	+AcceptError(const std::string& what)
	+AcceptError(const AcceptError& error)
	+~AcceptError()
	+operator=(const AcceptError& error) : AcceptError&
}

class AcceptTask {
	+AcceptTask(std::shared_ptr<rnetwork::IAcceptor> acceptor, const std::function<void(std::shared_ptr<rnetwork::IClient>client,boolstatus)>& callback)
	+AcceptTask(const AcceptTask& acceptTask)
	+~AcceptTask()
	+operator=(const AcceptTask& acceptTask) : AcceptTask&
	+available() : bool {query}
	+service() : rnetwork::services::NetworkService& {query}
	-<void(std::shared_ptr<rnetwork::IClient> client, bool status) : std::function
	-_acceptor : std::shared_ptr<rnetwork::IAcceptor>
	+operator()() : void
	+registerService() : void {query}
	+unregisterService() : void {query}
}

class Acceptor {
	+Acceptor(rnetwork::async::IOService& ioService, const rnetwork::Endpoint& endpoint, unsigned int queueSize)
	+Acceptor(const Acceptor& acceptor)
	+~Acceptor()
	+operator=(const Acceptor& acceptor) : Acceptor&
	-_socket : SOCKET
	+socket() : SOCKET {query}
	-bind(const rnetwork::Endpoint& endpoint) : bool {query}
	-listen(unsigned int queueSize) : bool {query}
	-_ioService : rnetwork::async::IOService&
	+ioService() : rnetwork::async::IOService&
	+accept() : std::shared_ptr<rnetwork::IClient> {query}
	+accept(bool& status) : std::shared_ptr<rnetwork::IClient> {query}
	+async_accept(const std::function<void(std::shared_ptr<rnetwork::IClient>client,boolstatus)>& callback) : void
}

class BadBind {
	+BadBind(const std::string& what)
	+BadBind(const BadBind& badBind)
	+~BadBind()
	+operator=(const BadBind& badBind) : BadBind&
}

class BadHostname {
	+BadHostname(const std::string& hostname)
	+BadHostname(const BadHostname& badHostname)
	+~BadHostname()
	+operator=(const BadHostname& badHostname) : BadHostname&
}

class BadListen {
	+BadListen(const std::string& what)
	+BadListen(const BadListen& badListen)
	+~BadListen()
	+operator=(const BadListen& badListen) : BadListen&
}

class Client {
	+Client(rnetwork::async::IOService& ioService)
	+Client(rnetwork::async::IOService& ioService, SOCKET socket, SOCKADDR_IN* remote)
	+Client(rnetwork::async::IOService& ioService, const rnetwork::Endpoint& endpoint)
	+Client(const Client& client)
	+~Client()
	+operator=(const Client& client) : Client&
	-_socket : SOCKET
	+socket() : SOCKET {query}
	+connect(const rnetwork::Endpoint& endpoint) : bool
	+send(packet::IPacket const& packet) : bool {query}
	-_endpoint : rnetwork::Endpoint
	+getEndpoint() : rnetwork::Endpoint& {query}
	-_ioService : rnetwork::async::IOService&
	+receive(bool& status) : std::shared_ptr<rnetwork::packet::PacketBase>
	+receive() : std::shared_ptr<rnetwork::packet::PacketBase>
	-getRemoteHost(SOCKADDR_IN* remote) : std::string {query}
	-getRemotePort(SOCKADDR_IN* remote) : uint16_t {query}
	+async_receive(const std::function<void(rnetwork::packet::PacketBase&,boolstatus)>& callback) : void
	+async_send(packet::IPacket const& packet, const std::function<void(bool)>& callback) : void
}

class Client {
	+Client(const rnetwork::Endpoint& endpoint, rnetwork::async::IOService& ioService)
	+Client(const SOCKADDR_IN* endpoint, rnetwork::async::IOService& ioService)
	+Client(const Client& client)
	+~Client()
	+operator=(const Client& client) : Client&
	-_remote : SOCKADDR_IN
	-_socket : SOCKET
	+socket() : SOCKET {query}
	+send(rnetwork::packet::IPacket const& packet) : bool {query}
	-_endpoint : rnetwork::Endpoint
	+getEndpoint() : rnetwork::Endpoint& {query}
	-_ioService : rnetwork::async::IOService&
	+receive(bool& status) : std::shared_ptr<rnetwork::packet::PacketBase>
	+receive() : std::shared_ptr<rnetwork::packet::PacketBase>
	-_link(const rnetwork::Endpoint& endpoint) : void
	+async_receive(const std::function<void(rnetwork::packet::PacketBase&,boolstatus)>& callback) : void
	+async_send(rnetwork::packet::IPacket const& packet, const std::function<void(bool)>& callback) : void
}

class ClientChannel {
	+ClientChannel(rnetwork::async::IOService& ioService)
	+ClientChannel(const rnetwork::ClientChannel& clientChannel)
	+~ClientChannel()
	+operator=(const ClientChannel& clientChannel) : ClientChannel&
	-_associated : bool
	+is(const rnetwork::Endpoint& endpoint) : bool
	+isAssociated() : bool {query}
	+udpSend(rnetwork::packet::IPacket const& packet) : bool
	-_tcpEndpoint : rnetwork::Endpoint
	-_udpEndpoint : rnetwork::Endpoint
	-<void(packet::PacketBase &, std::shared_ptr<IClient>) : rnetwork::Router
	-_ioService : rnetwork::async::IOService&
	-<void(std::shared_ptr<ClientChannel> channel, rnetwork::packet::PacketBase &) : std::function
	-_tcpClient : std::shared_ptr<IClient>
	-_udpClient : std::shared_ptr<IClient>
	+getClient(const rnetwork::Endpoint& endpoint) : std::shared_ptr<rnetwork::IClient>
	-_identifier : std::string
	+getIdentitfier() : std::string& {query}
	+finalizeHandshake(std::shared_ptr<rnetwork::IClient> client) : void
	+generateIdentifier() : void
	-handleAssociationPacket(rnetwork::packet::PacketBase& packet, std::shared_ptr<rnetwork::IClient> client) : void
	+handleHandshake(std::shared_ptr<rnetwork::IClient> client, const rnetwork::Endpoint& udpEndpoint) : void
	-handleHostPacket(rnetwork::packet::PacketBase& packet, std::shared_ptr<rnetwork::IClient> client) : void
	-handlePacket(std::shared_ptr<rnetwork::IClient> receiver, rnetwork::packet::PacketBase& packet, bool status) : void
	-handleTokenPacket(rnetwork::packet::PacketBase& packet, std::shared_ptr<rnetwork::IClient> client) : void
	+handshake(const rnetwork::Endpoint& tcpEndpoint) : void
	-initRouter() : void
	-sendUDPToken(const rnetwork::Endpoint& endpoint) : void
	+setGateway(const std::function<void(std::shared_ptr<ClientChannel>channel,rnetwork::packet::PacketBase&)>& gateway) : void
	+setIdentifier(const std::string& identifier) : void
	+tcpSend(rnetwork::packet::IPacket const& packet) : void {query}
}

class ClientMasterChannel {
	+ClientMasterChannel(rnetwork::async::IOService& ioService, const rnetwork::Endpoint& tpcEndpoint, const rnetwork::Endpoint& udpEndpoint)
	+ClientMasterChannel(const ClientMasterChannel& clientMasterChannel)
	+~ClientMasterChannel()
	+operator=(const ClientMasterChannel& clientMasterChannel) : ClientMasterChannel&
	-_udpEndpoint : rnetwork::Endpoint
	-<void(packet::PacketBase &, std::shared_ptr<IClient>) : rnetwork::Router
	-_ioService : rnetwork::async::IOService&
	-<void(std::shared_ptr<ClientChannel> channel, rnetwork::packet::PacketBase &) : std::function
	-<void(std::shared_ptr<ClientChannel> channel) : std::function
	-getChannel(const rnetwork::Endpoint& endpoint) : std::shared_ptr<rnetwork::ClientChannel> {query}
	-getChannel(const std::string& token) : std::shared_ptr<rnetwork::ClientChannel> {query}
	-getClient(const rnetwork::Endpoint& endpoint) : std::shared_ptr<rnetwork::IClient> {query}
	-_tcpAcceptor : std::shared_ptr<rnetwork::tcp::Acceptor>
	-_udpServer : std::shared_ptr<rnetwork::udp::Server>
	-_clients : std::unordered_map<std::string, std::shared_ptr<rnetwork::ClientChannel> >
	-handleConnection(std::shared_ptr<rnetwork::IClient> client, bool status) : void
	-handlePacket(std::shared_ptr<rnetwork::IReceiver> client, rnetwork::packet::PacketBase& packet, bool status) : void
	-handleTokenId(rnetwork::packet::PacketBase& packet, std::shared_ptr<rnetwork::IClient> client) : void
	-initRouter() : void
	+setConnectionCallback(const std::function<void(std::shared_ptr<ClientChannel>)>& connectionCallback) : void
	+setGateway(const std::function<void(std::shared_ptr<ClientChannel>channel,rnetwork::packet::PacketBase&)>& gateway) : void
	+start() : void
}

class ClientUdp {
	+client : std::shared_ptr<rnetwork::udp::Client>
}

class Collide {
	+Collide(CollideType type)
	+by : CollideType
	+type : CollideType
}

class Collide::CollideType {
}

class ComponentStore <template <typename C>> {
	+ComponentStore()
	+ComponentStore(ComponentStore<C> const &)
	+ComponentStore(ComponentStore<C>& &)
	+~ComponentStore()
	+extract(const Entity entity) : C
	+get(const Entity entity) : C&
	+add(const Entity entity, C&& component) : bool
	+add(const Entity entity, C const& component) : bool
	+has(const Entity entity) : bool
	+remove(const Entity entity) : bool
	-store : std::unordered_map<Entity, C>
	+removeNotIn(std::unordered_map<Entity, ComponentTypeSet>& entities) : void
}

class ConnectionError {
	+ConnectionError(const std::string& what)
	+ConnectionError(const ConnectionError& error)
	+~ConnectionError()
	+operator=(const ConnectionError& error) : ConnectionError&
}

class CreditsHandler {
	+CreditsHandler(StateType& requestedState)
	+~CreditsHandler()
	-_position : float
	+draw() : void
}

class Dead {
}

class DelayedTask {
	+DelayedTask(const std::function<void()>& callback, unsigned long time)
	+DelayedTask(const DelayedTask& delayedTask)
	+~DelayedTask()
	+operator=(const DelayedTask& delayedTask) : DelayedTask&
	+available() : bool {query}
	+service() : rnetwork::services::IService& {query}
	-_start : std::chrono::time_point<std::chrono::steady_clock>
	-<void() : std::function
	-_timeout : unsigned long
	+operator()() : void
	+registerService() : void {query}
	+unregisterService() : void {query}
}

class Drawable {
	+Drawable()
	+content : std::shared_ptr<sf::Drawable>
}

class Engine {
	+Engine()
	+~Engine()
	-_window : Window
	+run() : void
}

class Engine {
	+Engine()
	+~Engine()
	-<void(rnetwork::packet::PacketBase &, std::shared_ptr<Player>) : rnetwork::Router
	-_ioService : rnetwork::async::IOService
	-_players : std::deque<std::shared_ptr<Player> >
	-getPlayer(std::shared_ptr<rnetwork::ClientChannel> channel) : std::shared_ptr<Player>
	-_masterChannel : std::shared_ptr<rnetwork::ClientMasterChannel>
	-_games : std::unordered_map<uint16_t, std::shared_ptr<Game> >
	-_nextGameId : unsigned int
	-handleClient(std::shared_ptr<rnetwork::ClientChannel> channel) : void
	-handleJoinGame(rnetwork::packet::PacketBase& packet, std::shared_ptr<Player> player) : void
	-handleJoinLobby(rnetwork::packet::PacketBase& packet, std::shared_ptr<Player> player) : void
	-handleLobbyCreation(rnetwork::packet::PacketBase& packet, std::shared_ptr<Player> player) : void
	-handleLobbyList(rnetwork::packet::PacketBase& packet, std::shared_ptr<Player> player) : void
	-handlePacket(std::shared_ptr<rnetwork::ClientChannel> channel, rnetwork::packet::PacketBase& packet) : void
	-initRouter() : void
	+start(const rnetwork::Endpoint& endpoint) : void
}

class EntityType {
}

class EnumClassHash {
	+operator()(T t) : std : : size_t {query}
}

class ExecService {
	+ExecService()
	+ExecService(const ExecService& execService)
	+~ExecService()
	+{static} Instance() : ExecService&
	+operator=(const ExecService& execService) : ExecService&
	-{static} _instance : static ExecService
	-_name : std::string
	+name() : std::string& {query}
	+update() : void
}

class ExecTask {
	+ExecTask(const std::function<void()>& task)
	+ExecTask(const ExecTask& execTask)
	+~ExecTask()
	+operator=(const ExecTask& execTask) : ExecTask&
	+available() : bool {query}
	+service() : rnetwork::services::IService& {query}
	-<void() : std::function
	+operator()() : void
	+registerService() : void {query}
	+unregisterService() : void {query}
}

class ExitHandler {
	+ExitHandler(StateType& requestedState)
	+~ExitHandler()
	+draw() : void
}

class FPS {
}

class FSM {
	+activeState : StateType
	+requestedState : StateType
	+exception_caught(Event const &, FSM &, std::exception &) : void
	+no_transition(event const &, fsm &, int state) : void
}

class FSM::transition_table {
}

class Game {
	+Game(sf::RenderWindow& window)
	+~Game()
	-_assetsLoader : AssetsLoader&
	-networkHandler : NetworkHandler
	-_manager : ecs::Manager
	-IoService : using
	#init() : void
	#initAssets() : void
	#initComponentStores() : void
	#initEntities() : void
	#initFPS() : void
	#initSystems() : void
	+run(sf::Time& time) : void
}

class Game {
	+Game(unsigned int id)
	+~Game()
	+addPlayer(std::shared_ptr<Player> player) : bool
	-manager : ecs::Manager
	-_moveCommands : rnetwork::shared_queue<rtype::ct::RtypeCommand>
	-spawner : spawner::Spawner
	-last : std::chrono::time_point<std::chrono::high_resolution_clock>
	-_players : std::vector<std::shared_ptr<Player> >
	-_id : unsigned int
	+getId() : unsigned int {query}
	+nbPlayers() : unsigned long {query}
	-initComponentsStore() : void
	-initSystems(rnetwork::Router<void(rnetwork::packet::PacketBase&,Player&)>& router) : void
	+run() : void
	+unregisterPlayer(std::shared_ptr<Player> player) : void
}

class GameStartingHandler {
	+GameStartingHandler(StateType& requestedState)
	+~GameStartingHandler()
	+draw() : void
}

class Generator_id <template<typename Traits>> {
	+{static} _lastid : static Id
	+Id : using
	+traits : using
}

class Generator_type_id <template<typename T, typename Traits>> {
	-Generator_type_id()
	+operatorId() {query}
	+{static} ctype() : Id
	+{static} make() : Id
	-{static} _type : static Id
	-{static} _initialized : static bool
	-Base : using
	-Id : using
	+this_type : using
	+type : using
}

class Handler {
	+Handler(StateType& requestedState)
	+getStateHandler(StateType state) : MenuHandler&
	-_stateActions : std::unordered_map<StateType, std::unique_ptr<rtype::menu::GUI::MenuHandler>, util::EnumClassHash>
}

abstract class IMenuHandler {
	+~IMenuHandler()
	+{abstract} draw() : void
}

class IOError {
	+IOError(const std::string& what)
	+IOError(const IOError& ioError)
	+~IOError()
	+operator=(const IOError& ioError) : IOError&
}

class ImplDllLoader {
	+loadLibrary(std::string const& name) : Handle
	+loadSymbol(Handle, std::string const& name) : detail::Sym
	+closeLibrary(detail:: Handle) : void
}

class InfiniteTask {
	+InfiniteTask()
	+InfiniteTask(const InfiniteTask& infiniteTask)
	+~InfiniteTask()
	+operator=(const InfiniteTask& infiniteTask) : InfiniteTask&
	+available() : bool {query}
	+service() : rnetwork::services::IService& {query}
	+operator()() : void
	+registerService() : void {query}
	+unregisterService() : void {query}
}

class InvalidPacket {
	+InvalidPacket(const std::string& what)
	+InvalidPacket(const InvalidPacket& packet)
	+~InvalidPacket()
	+operator=(const InvalidPacket& packet) : InvalidPacket&
}

class InvalidSocket {
	+InvalidSocket(const std::string& what)
	+InvalidSocket(const InvalidSocket& invalidSocket)
	+~InvalidSocket()
	+operator=(const InvalidSocket& invalidSocket) : InvalidSocket&
}

class LittleEnemy {
	+~LittleEnemy()
	+spawn(ecs::Manager& manager) : ecs::Entity {query}
}

class MainMenuHandler {
	+MainMenuHandler(StateType& requestedState)
	+~MainMenuHandler()
	+draw() : void
}

class Menu {
	+Menu(sf::RenderWindow& window)
	+~Menu()
	-_machine : menu::FSM::machine
	-_handler : menu::GUI::Handler
	+run(sf::Time& time) : void
}

abstract class MenuHandler {
	+MenuHandler(StateType& requestedState)
	+~MenuHandler()
	#_requestedState : StateType&
	+{abstract} draw() : void
}

class MultiplayerLobbiesListingHandler {
	+MultiplayerLobbiesListingHandler(StateType& requestedState)
	+~MultiplayerLobbiesListingHandler()
	-_selectedItem : int
	+draw() : void
}

class MultiplayerLobbyHandler {
	+MultiplayerLobbyHandler(StateType& requestedState)
	+~MultiplayerLobbyHandler()
	+draw() : void
	+renderEnemies() : void
	+renderPlayers() : void
}

class MultiplayerLobbyHandler::Enemy {
	+enabled : bool
	+name : std::string
}

class MultiplayerLobbyHandler::Player {
	+id : size_t
}

class MultiplayerMenuHandler {
	+MultiplayerMenuHandler(StateType& requestedState)
	+~MultiplayerMenuHandler()
	-_port : int
	-_ip : std::array<char, 100>
	-_error : std::string
	+draw() : void
}

class NetworkHandler {
	+NetworkHandler()
	+~NetworkHandler()
	+getEntityByServerId(size_t serverId, ecs::Manager& manager) : ecs::Entity
	-<void(std::shared_ptr<rnetwork::ClientChannel>, rnetwork::packet::PacketBase &, ecs::Manager &) : std::map<size_t , std::function
	+handle(std::shared_ptr<rnetwork::ClientChannel> client, rnetwork::packet::PacketBase& packet, ecs::Manager& manager) : void
	-handlePlayerId(std::shared_ptr<rnetwork::ClientChannel> client, rnetwork::packet::PacketBase& packet, ecs::Manager& manager) : void
}

class NetworkService {
	+NetworkService()
	+NetworkService(const NetworkService& networkService)
	+~NetworkService()
	+{static} Instance() : NetworkService&
	+operator=(const NetworkService& networkService) : NetworkService&
	+canAccept(std::shared_ptr<const rnetwork::IAcceptor> acceptor) : bool
	+canReceive(std::shared_ptr<const rnetwork::IReceiver> receiver) : bool
	+canSend(std::shared_ptr<const rnetwork::ISender> sender) : bool
	-_readFds : fd_set
	-_writeFds : fd_set
	-_highestFd : int
	-{static} _instance : static NetworkService
	-_acceptors : std::deque<std::shared_ptr<rnetwork::IAcceptor> >
	-_receivers : std::deque<std::shared_ptr<rnetwork::IReceiver> >
	-_senders : std::deque<std::shared_ptr<rnetwork::ISender> >
	-_mutex : std::mutex
	-_name : std::string
	+name() : std::string& {query}
	+regiserReciver(std::shared_ptr<rnetwork::IReceiver> reciver) : void
	+registerAcceptor(std::shared_ptr<rnetwork::IAcceptor> acceptor) : void
	+registerSender(std::shared_ptr<rnetwork::ISender> sender) : void
	+unregisterAcceptor(std::shared_ptr<rnetwork::IAcceptor> acceptor) : void
	+unregisterReciver(std::shared_ptr<rnetwork::IReceiver> reciver) : void
	+unregisterSender(std::shared_ptr<rnetwork::ISender> sender) : void
	+update() : void
	-updateFdSets() : void
}

class OptionsMenuHandler {
	+OptionsMenuHandler(StateType& requestedState)
	+~OptionsMenuHandler()
	-_effectsVolume : int
	-_musicVolume : int
	-_keys : std::unordered_map<std::string, std::array<char, 10> >
	+draw() : void
	-drawBackButton() : void
	-drawInputConfig() : void
	-drawSliders() : void
}

class PacketBase {
	+PacketBase(uint16_t op, uint16_t length)
	+PacketBase(unsigned char* raw, std::size_t size)
	+PacketBase(unsigned char* raw, std::size_t size, SOCKADDR_IN* from)
	+PacketBase(const PacketBase& packetBase)
	+~PacketBase()
	+operator=(const PacketBase& packetBase) : PacketBase&
	+operator>>(StringPacket& stringPacket) : PacketBase&
	#_fromLowLevel : SOCKADDR_IN
	#_from : rnetwork::Endpoint
	+from() : rnetwork::Endpoint& {query}
	+getRemote() : rnetwork::Endpoint& {query}
	+snapshot() : std::shared_ptr<IPacket> {query}
	+generateClient(rnetwork::async::IOService& ioService) : std::shared_ptr<T> {query}
	#_size : std::size_t
	+size() : std::size_t {query}
	+getLength() : uint16_t {query}
	+getOp() : uint16_t {query}
	#_raw : unsigned char*
	+raw() : unsigned char* {query}
	+setLength(uint16_t length) : void
	+setOp(uint16_t op) : void
	+setRemote(const rnetwork::Endpoint& remote) : void
}

class PlayMenuHandler {
	+PlayMenuHandler(StateType& requestedState)
	+~PlayMenuHandler()
	+draw() : void
}

class Player {
	+Player(const std::shared_ptr<rnetwork::ClientChannel>& channel)
	+Player(const Player& player)
	+~Player()
	+operator=(const Player& player) : Player&
	+haveChannel(const std::shared_ptr<rnetwork::ClientChannel>& channel) : bool {query}
	-<void(rnetwork::packet::PacketBase &) : rnetwork::Router
	-_channel : std::shared_ptr<rnetwork::ClientChannel>
	-_game : std::shared_ptr<rtypeserver::Game>
	-initRouter() : void
	+joinGame(std::shared_ptr<rtypeserver::Game> game) : void
	+send(rnetwork::packet::PacketBase& packetBase) : void
	-sendTCP(rnetwork::packet::PacketBase& packet) : void
}

class PlayerID {
	+id : Id
}

class Position {
	+Position(float xPos, float yPos)
	+Position()
	+x : float
	+y : float
}

abstract class RNETWORK_API {
	+{abstract} name() : std::string& {query}
	+{abstract} update() : void
}

abstract class RNETWORK_API {
	+{abstract} available() : bool {query}
	+{abstract} service() : rnetwork::services::IService& {query}
	+{abstract} operator()() : void
	+{abstract} registerService() : void {query}
	+{abstract} unregisterService() : void {query}
}

abstract class RNETWORK_API {
	+{abstract} from() : rnetwork::Endpoint& {query}
	+{abstract} snapshot() : std::shared_ptr<IPacket> {query}
	+{abstract} size() : std::size_t {query}
	+{abstract} raw() : unsigned char* {query}
}

class RNETWORK_API {
	+IOService()
	+IOService(const IOService& ioService)
	+~IOService()
	+operator=(const IOService& ioService) : IOService&
	-_run : bool
	-execTasks() : bool
	-_services : std::deque<std::reference_wrapper<rnetwork::services::IService> >
	-_tasks : std::deque<std::shared_ptr<rnetwork::tasks::ITask> >
	-_serviceMutex : std::mutex
	-_taskMutex : std::mutex
	+forceInfinite() : void
	+registerService(rnetwork::services::IService& service) : void
	+registerTask(std::shared_ptr<rnetwork::tasks::ITask> task) : void
	+run() : void
	+stop() : void
	+unregisterService(rnetwork::services::IService& service) : void
	+unregisterTask(std::shared_ptr<rnetwork::tasks::ITask> task) : void
	-updateServices() : void
}

class RTECS_API {
	+IComponentStore()
	+IComponentStore(IComponentStore const &)
	+IComponentStore(IComponentStore& &)
	+~IComponentStore()
	+{static} makePtr(Args&& args) : Ptr
	+{static} makePtr(Args&& args) : Ptr
	+Ptr : using
	+Ptr : using
}

abstract class RTECS_API {
	+System()
	+~System()
	-requiredComponents : ComponentTypeSet
	+getRequiredComponents() : ComponentTypeSet& {query}
	+hasEntity(Entity entity) : bool
	+registerEntity(Entity entity) : bool
	+unregisterEntity(Entity entity) : bool
	#entities : std::set<Entity>
	+{abstract} process(Manager& mgr, float elapsedTime) : void
	#setRequiredComponents(ComponentTypeSet&& requiredComponents) : void
}

class ReceiveTask {
	+ReceiveTask(std::shared_ptr<rnetwork::IReceiver> receiver, const std::function<void(rnetwork::packet::PacketBase&packet,boolstatus)>& callback)
	+ReceiveTask(const ReceiveTask& receiveTask)
	+~ReceiveTask()
	+operator=(const ReceiveTask& receiveTask) : ReceiveTask&
	+available() : bool {query}
	+service() : rnetwork::services::NetworkService& {query}
	-<void(rnetwork::packet::PacketBase& packet, bool status) : std::function
	-_receiver : std::shared_ptr<rnetwork::IReceiver>
	+operator()() : void
	+registerService() : void {query}
	+unregisterService() : void {query}
}

class RtypeCommand {
	+RtypeCommand()
	+RtypeCommand(long __input)
	+input : long
	+{static} Charge : static constexpr const long
	+{static} Down : static constexpr const long
	+{static} Fire : static constexpr const long
	+{static} FireMask : static constexpr const long
	+{static} HorizontalMoveMask : static constexpr const long
	+{static} Left : static constexpr const long
	+{static} MoveMask : static constexpr const long
	+{static} Right : static constexpr const long
	+{static} Up : static constexpr const long
	+{static} VerticalMoveMask : static constexpr const long
}

class RtypeInput {
	+RtypeInput()
	+RtypeInput(value_type vUp, value_type vDown, value_type vLeft, value_type vRight, value_type vFire, value_type vCharge)
	+RtypeInput(const RtypeInput& input)
	+value_type : using
	+Charge : value_type
	+Down : value_type
	+Fire : value_type
	+Left : value_type
	+Right : value_type
	+Up : value_type
}

class SendTask {
	+SendTask(std::shared_ptr<rnetwork::ISender> sender, std::shared_ptr<rnetwork::packet::IPacket> packet, const std::function<void(bool)>& callback)
	+SendTask(const SendTask& sendTask)
	+~SendTask()
	+operator=(const SendTask& sendTask) : SendTask&
	+available() : bool {query}
	+service() : rnetwork::services::NetworkService& {query}
	-<void(bool) : std::function
	-_sender : std::shared_ptr<rnetwork::ISender>
	-_packet : std::shared_ptr<rnetwork::packet::IPacket>
	+operator()() : void
	+registerService() : void {query}
	+unregisterService() : void {query}
}

class Server {
	+Server(rnetwork::async::IOService& ioService)
	+Server(rnetwork::async::IOService& ioService, const rnetwork::Endpoint& endpoint)
	+Server(const Server& server)
	+~Server()
	-_socket : SOCKET
	+socket() : SOCKET {query}
	+operator=(const Server& server) : Server&
	+bind(const rnetwork::Endpoint& endpoint) : bool
	-_ioService : rnetwork::async::IOService&
	+ioService() : rnetwork::async::IOService&
	+receive(bool& status) : std::shared_ptr<rnetwork::packet::PacketBase>
	+receive() : std::shared_ptr<rnetwork::packet::PacketBase>
	+async_receive(const std::function<void(rnetwork::packet::PacketBase&,boolstatus)>& callback) : void
}

class ServerID {
	+value : size_t
}

class SinglePlayerMenuHandler {
	+SinglePlayerMenuHandler(StateType& requestedState)
	+~SinglePlayerMenuHandler()
	+draw() : void
}

class Size {
	+Size(unsigned int width, unsigned int height)
	+Size()
	+height : unsigned int
	+width : unsigned int
}

class Speed {
	+Speed()
	+Speed(float speedX, float speedY)
	+x : float
	+y : float
}

class Square {
	+{static} make(ecs::Manager& mgr, rtype::ct::PlayerID::Id id, float posx, float posy, unsigned int sprite) : bool
	+{static} make_net(ecs::Manager& mgr, rtype::ct::PlayerID::Id id, float posx, float posy) : bool
	-{static} _id : static rtype::ct::PlayerID
}

class Star {
}

class StringPacket {
	+StringPacket(const std::string& string)
	+StringPacket(const StringPacket& stringPacket)
	+~StringPacket()
	+operator=(const StringPacket& stringPacket) : StringPacket&
	-_from : rnetwork::Endpoint
	+from() : rnetwork::Endpoint& {query}
	+snapshot() : std::shared_ptr<IPacket> {query}
	+size() : std::size_t {query}
	-_data : std::string
	+str() : std::string& {query}
	+raw() : unsigned char* {query}
}

class Text {
	+Text()
	+Text(unsigned int font, const std::string& content)
	+Text(const std::string& content)
	+color : sf::Color
	+content : std::string
	+font : unsigned int
	+size : unsigned int
}

class Type {
	+value : rtype::EntityType
}

class Weapon {
	+Weapon()
	+Weapon(float interval, Direction direction, bool autoFired)
}

AContext <|- - Game
AContext <|- - Menu
Generator_id <|- - Generator_type_id
IMenuHandler <|- - MenuHandler
MenuHandler <|- - CreditsHandler
MenuHandler <|- - ExitHandler
MenuHandler <|- - GameStartingHandler
MenuHandler <|- - MainMenuHandler
MenuHandler <|- - MultiplayerLobbiesListingHandler
MenuHandler <|- - MultiplayerLobbyHandler
MenuHandler <|- - MultiplayerMenuHandler
MenuHandler <|- - OptionsMenuHandler
MenuHandler <|- - PlayMenuHandler
MenuHandler <|- - SinglePlayerMenuHandler
ClientMasterChannel o- - Acceptor
ClientMasterChannel o- - ClientChannel
ClientMasterChannel o- - Server
ClientUdp "2" o- - Client
Drawable o- - Drawable
Engine "2" o- - ClientMasterChannel
Engine "4" o- - Game
Engine "2" o- - Player
ExecService o- - ExecService
Game "2" o- - Player
Game "2" o- - RtypeCommand
Handler o- - EnumClassHash
Handler o- - MenuHandler
Menu o- - FSM
Menu o- - Handler
NetworkService o- - NetworkService
Player o- - ClientChannel
Player "2" o- - Game
Square o- - PlayerID
Type o- - EntityType
@enduml

PlantUML version 1.2018.00(Thu Jan 04 19:42:56 UTC 2018)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.7.0_25-b15
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>